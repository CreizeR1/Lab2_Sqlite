2024-04-15 06:05:16.708 [main] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-04-15 06:05:16.788 [main] DEBUG org.hibernate.jpa.HibernatePersistenceProvider - Located and parsed 1 persistence units; checking each
2024-04-15 06:05:16.789 [main] DEBUG org.hibernate.jpa.HibernatePersistenceProvider - Checking persistence-unit [name=TST, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [TST]
2024-04-15 06:05:16.790 [main] DEBUG org.hibernate.jpa.boot.spi.ProviderChecker - Persistence-unit [TST] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2024-04-15 06:05:16.797 [main] DEBUG org.hibernate.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: TST
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/IntellijIdea/Kem%20Rudolf/Lab2Rizhkov/target/classes
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		entity.Visit
		entity.Doctor
		entity.Disease
		entity.Patient]
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.sqlite.JDBC
		hibernate.dialect: org.hibernate.dialect.SQLiteDialect
		javax.persistence.jdbc.url: jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db
		hibernate.id.new_generator_mappings: false
		hibernate.show_sql: false
		hibernate.format_sql: true]
2024-04-15 06:05:16.803 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2024-04-15 06:05:16.805 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2024-04-15 06:05:16.809 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-04-15 06:05:16.847 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.5.Final
2024-04-15 06:05:16.848 [main] DEBUG org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2024-04-15 06:05:17.011 [main] DEBUG org.hibernate.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2024-04-15 06:05:17.029 [main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-04-15 06:05:17.030 [main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2024-04-15 06:05:17.047 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-04-15 06:05:17.111 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@9635fa
2024-04-15 06:05:17.111 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@9635fa
2024-04-15 06:05:17.111 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@9635fa
2024-04-15 06:05:17.111 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1c98290c
2024-04-15 06:05:17.112 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2ce86164
2024-04-15 06:05:17.112 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@60d8c0dc
2024-04-15 06:05:17.113 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1849db1a
2024-04-15 06:05:17.113 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1849db1a
2024-04-15 06:05:17.113 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1849db1a
2024-04-15 06:05:17.114 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6865c751
2024-04-15 06:05:17.114 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6865c751
2024-04-15 06:05:17.114 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6865c751
2024-04-15 06:05:17.115 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3ebff828
2024-04-15 06:05:17.115 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3ebff828
2024-04-15 06:05:17.116 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3ebff828
2024-04-15 06:05:17.117 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@35fe2125
2024-04-15 06:05:17.117 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@35fe2125
2024-04-15 06:05:17.117 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@35fe2125
2024-04-15 06:05:17.118 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7c22d4f
2024-04-15 06:05:17.118 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7c22d4f
2024-04-15 06:05:17.118 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7c22d4f
2024-04-15 06:05:17.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5fd62371
2024-04-15 06:05:17.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5fd62371
2024-04-15 06:05:17.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5fd62371
2024-04-15 06:05:17.120 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c345c5f
2024-04-15 06:05:17.120 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c345c5f
2024-04-15 06:05:17.120 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6c345c5f
2024-04-15 06:05:17.121 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@f9879ac
2024-04-15 06:05:17.121 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@f9879ac
2024-04-15 06:05:17.122 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4ef27d66
2024-04-15 06:05:17.122 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4ef27d66
2024-04-15 06:05:17.123 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3f23a3a0
2024-04-15 06:05:17.123 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3f23a3a0
2024-04-15 06:05:17.124 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@61861a29
2024-04-15 06:05:17.124 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@63cd604c
2024-04-15 06:05:17.125 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@6c6357f9
2024-04-15 06:05:17.125 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6c6357f9
2024-04-15 06:05:17.126 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@64bc21ac
2024-04-15 06:05:17.126 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@64bc21ac
2024-04-15 06:05:17.129 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@4a8a60bc
2024-04-15 06:05:17.129 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4a8a60bc
2024-04-15 06:05:17.130 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@15a902e7
2024-04-15 06:05:17.130 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@15a902e7
2024-04-15 06:05:17.131 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3c9168dc
2024-04-15 06:05:17.131 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3c9168dc
2024-04-15 06:05:17.131 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@293bb8a5
2024-04-15 06:05:17.132 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@293bb8a5
2024-04-15 06:05:17.132 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77307458
2024-04-15 06:05:17.133 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77307458
2024-04-15 06:05:17.134 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@209775a9
2024-04-15 06:05:17.134 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@209775a9
2024-04-15 06:05:17.135 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@192f2f27
2024-04-15 06:05:17.135 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@192f2f27
2024-04-15 06:05:17.136 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7997b197
2024-04-15 06:05:17.137 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7997b197
2024-04-15 06:05:17.137 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@76a82f33
2024-04-15 06:05:17.137 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@76a82f33
2024-04-15 06:05:17.138 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7f811d00
2024-04-15 06:05:17.138 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7f811d00
2024-04-15 06:05:17.139 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7f811d00
2024-04-15 06:05:17.140 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7807ac2c
2024-04-15 06:05:17.141 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@523424b5
2024-04-15 06:05:17.141 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@523424b5
2024-04-15 06:05:17.141 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@523424b5
2024-04-15 06:05:17.141 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@754777cd
2024-04-15 06:05:17.142 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@a486d78
2024-04-15 06:05:17.143 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@299266e2
2024-04-15 06:05:17.143 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@299266e2
2024-04-15 06:05:17.144 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@517bd097
2024-04-15 06:05:17.144 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@517bd097
2024-04-15 06:05:17.145 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@47289387
2024-04-15 06:05:17.145 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@47289387
2024-04-15 06:05:17.145 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@32fe9d0a
2024-04-15 06:05:17.146 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@32fe9d0a
2024-04-15 06:05:17.146 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3b9d6699
2024-04-15 06:05:17.147 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3b9d6699
2024-04-15 06:05:17.147 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@22c86919
2024-04-15 06:05:17.148 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@64712be
2024-04-15 06:05:17.148 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@64712be
2024-04-15 06:05:17.148 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@64712be
2024-04-15 06:05:17.149 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2fd1731c
2024-04-15 06:05:17.149 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2fd1731c
2024-04-15 06:05:17.149 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2fd1731c
2024-04-15 06:05:17.150 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@24f360b2
2024-04-15 06:05:17.151 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@48c40605
2024-04-15 06:05:17.152 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1eba372c
2024-04-15 06:05:17.152 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1eba372c
2024-04-15 06:05:17.152 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1eba372c
2024-04-15 06:05:17.153 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4b21844c
2024-04-15 06:05:17.153 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4b21844c
2024-04-15 06:05:17.153 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4b21844c
2024-04-15 06:05:17.153 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@19b30c92
2024-04-15 06:05:17.154 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4940809c
2024-04-15 06:05:17.154 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7cc586a8
2024-04-15 06:05:17.155 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7cc586a8
2024-04-15 06:05:17.155 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a76b80a
2024-04-15 06:05:17.156 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4da855dd
2024-04-15 06:05:17.156 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4da855dd
2024-04-15 06:05:17.158 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@3ec11999
2024-04-15 06:05:17.158 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3ec11999
2024-04-15 06:05:17.158 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2e77b8cf
2024-04-15 06:05:17.158 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6e57e95e
2024-04-15 06:05:17.159 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@7a11c4c7
2024-04-15 06:05:17.161 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3f093abe
2024-04-15 06:05:17.161 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3f093abe
2024-04-15 06:05:17.162 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e24ddd0
2024-04-15 06:05:17.162 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6f70f32f
2024-04-15 06:05:17.162 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@548e76f1
2024-04-15 06:05:17.162 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5aabbb29
2024-04-15 06:05:17.162 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@72c927f1
2024-04-15 06:05:17.162 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1ac85b0c
2024-04-15 06:05:17.162 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3dd69f5a
2024-04-15 06:05:17.162 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3aa3193a
2024-04-15 06:05:17.175 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
2024-04-15 06:05:17.182 [main] DEBUG org.hibernate.boot.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@344344fa] into BootstrapContext; was [null]
2024-04-15 06:05:17.183 [main] DEBUG org.hibernate.boot.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2db2cd5] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@70e659aa]
2024-04-15 06:05:17.219 [main] DEBUG org.hibernate.boot.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2024-04-15 06:05:17.219 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2024-04-15 06:05:17.225 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-04-15 06:05:17.226 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-04-15 06:05:17.226 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-04-15 06:05:17.227 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-04-15 06:05:17.227 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-04-15 06:05:17.227 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-04-15 06:05:17.228 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-04-15 06:05:17.228 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-04-15 06:05:17.229 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2024-04-15 06:05:17.229 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-04-15 06:05:17.230 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-04-15 06:05:17.230 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2024-04-15 06:05:17.230 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-04-15 06:05:17.231 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-04-15 06:05:17.233 [main] WARN  org.hibernate.orm.connections.pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2024-04-15 06:05:17.236 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: using driver [org.sqlite.JDBC] at URL [jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db]
2024-04-15 06:05:17.236 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001001: Connection properties: {}
2024-04-15 06:05:17.236 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001003: Autocommit mode: false
2024-04-15 06:05:17.238 [main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
2024-04-15 06:05:17.238 [main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
2024-04-15 06:05:17.300 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Database ->
       name : SQLite
    version : 3.7.2
      major : 3
      minor : 0
2024-04-15 06:05:17.300 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Driver ->
       name : SQLiteJDBC
    version : native
      major : 1
      minor : 1
2024-04-15 06:05:17.301 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - JDBC version : 2.1
2024-04-15 06:05:17.301 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
2024-04-15 06:05:17.308 [main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-04-15 06:05:17.309 [main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-04-15 06:05:17.312 [main] DEBUG org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver - Unable to use Java 1.7 Connection#getSchema
2024-04-15 06:05:17.313 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl - Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.SQLiteDialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:315) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:273) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79) ~[javax.persistence-api-2.2.jar:2.2]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54) ~[javax.persistence-api-2.2.jar:2.2]
	at repository.DoctorRepository.<init>(DoctorRepository.java:15) ~[classes/:?]
	at Main.main(Main.java:21) ~[classes/:?]
2024-04-15 06:05:17.330 [main] DEBUG org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
2024-04-15 06:05:17.332 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2024-04-15 06:05:17.332 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-04-15 06:05:17.337 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4351171a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3c2772d1]
2024-04-15 06:05:17.364 [main] DEBUG org.hibernate.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-04-15 06:05:17.376 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Doctor
2024-04-15 06:05:17.394 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: doctor.getAll => SELECT s from Doctor s
2024-04-15 06:05:17.401 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:05:17.405 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Doctor
2024-04-15 06:05:17.408 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Doctor on table doctor
2024-04-15 06:05:17.426 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=id, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:17.430 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Doctor] is safe
2024-04-15 06:05:17.430 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Doctor
2024-04-15 06:05:17.432 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-04-15 06:05:17.435 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:id]
2024-04-15 06:05:17.438 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-04-15 06:05:17.440 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-04-15 06:05:17.444 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2024-04-15 06:05:17.445 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=date_in, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:17.446 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property date_in with lazy=false
2024-04-15 06:05:17.446 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:date_in]
2024-04-15 06:05:17.446 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for date_in
2024-04-15 06:05:17.446 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property date_in
2024-04-15 06:05:17.447 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:17.447 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-04-15 06:05:17.448 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:name]
2024-04-15 06:05:17.448 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-04-15 06:05:17.448 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-04-15 06:05:17.449 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=phone, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:17.449 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property phone with lazy=false
2024-04-15 06:05:17.449 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:phone]
2024-04-15 06:05:17.449 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for phone
2024-04-15 06:05:17.449 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property phone
2024-04-15 06:05:17.450 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=room, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:17.450 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property room with lazy=false
2024-04-15 06:05:17.450 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:room]
2024-04-15 06:05:17.451 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for room
2024-04-15 06:05:17.451 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property room
2024-04-15 06:05:17.451 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=speciality, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:17.452 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property speciality with lazy=false
2024-04-15 06:05:17.452 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:speciality]
2024-04-15 06:05:17.452 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for speciality
2024-04-15 06:05:17.453 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property speciality
2024-04-15 06:05:17.459 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Patient
2024-04-15 06:05:17.459 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: patient.getAll => SELECT p from Patient p
2024-04-15 06:05:17.460 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:05:17.460 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Patient
2024-04-15 06:05:17.460 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Patient on table patient
2024-04-15 06:05:17.461 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=card, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:17.461 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Patient] is safe
2024-04-15 06:05:17.461 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Patient
2024-04-15 06:05:17.461 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property card with lazy=false
2024-04-15 06:05:17.461 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:card]
2024-04-15 06:05:17.462 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for card
2024-04-15 06:05:17.462 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property card
2024-04-15 06:05:17.462 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(card)]), card, identity, , ...)
2024-04-15 06:05:17.462 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=birthday, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:17.462 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property birthday with lazy=false
2024-04-15 06:05:17.462 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:birthday]
2024-04-15 06:05:17.463 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for birthday
2024-04-15 06:05:17.463 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property birthday
2024-04-15 06:05:17.463 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=male, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:17.463 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property male with lazy=false
2024-04-15 06:05:17.463 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:male]
2024-04-15 06:05:17.463 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for male
2024-04-15 06:05:17.463 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property male
2024-04-15 06:05:17.464 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:17.464 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-04-15 06:05:17.464 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:name]
2024-04-15 06:05:17.464 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-04-15 06:05:17.464 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-04-15 06:05:17.465 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Disease
2024-04-15 06:05:17.466 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: disease.getAll => SELECT c from Disease c
2024-04-15 06:05:17.466 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:05:17.466 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Disease
2024-04-15 06:05:17.467 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Disease on table disease
2024-04-15 06:05:17.468 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(disease), mappingColumn=id_disease, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:17.468 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Disease] is safe
2024-04-15 06:05:17.468 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Disease
2024-04-15 06:05:17.469 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id_disease with lazy=false
2024-04-15 06:05:17.469 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Disease:id_disease]
2024-04-15 06:05:17.469 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id_disease
2024-04-15 06:05:17.469 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_disease
2024-04-15 06:05:17.469 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_disease)]), id_disease, identity, , ...)
2024-04-15 06:05:17.469 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(disease), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:17.470 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-04-15 06:05:17.470 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Disease:name]
2024-04-15 06:05:17.470 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-04-15 06:05:17.470 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-04-15 06:05:17.471 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(disease), mappingColumn=sign, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:17.471 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property sign with lazy=false
2024-04-15 06:05:17.471 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Disease:sign]
2024-04-15 06:05:17.471 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for sign
2024-04-15 06:05:17.471 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property sign
2024-04-15 06:05:17.472 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Visit
2024-04-15 06:05:17.472 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: visit.getAll => SELECT v from Visit v
2024-04-15 06:05:17.473 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:05:17.473 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Visit
2024-04-15 06:05:17.473 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Visit on table visit
2024-04-15 06:05:17.481 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:17.482 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Visit] is safe
2024-04-15 06:05:17.482 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Visit
2024-04-15 06:05:17.482 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-04-15 06:05:17.482 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Visit:id]
2024-04-15 06:05:17.482 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-04-15 06:05:17.482 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-04-15 06:05:17.482 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2024-04-15 06:05:17.483 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=date, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:17.483 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property date with lazy=false
2024-04-15 06:05:17.483 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Visit:date]
2024-04-15 06:05:17.483 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for date
2024-04-15 06:05:17.483 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property date
2024-04-15 06:05:17.485 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='id_disease', referencedColumn='', mappedBy=''}
2024-04-15 06:05:17.487 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id_disease, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:17.491 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_disease
2024-04-15 06:05:17.492 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='id_doctor', referencedColumn='', mappedBy=''}
2024-04-15 06:05:17.493 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id_doctor, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:17.493 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_doctor
2024-04-15 06:05:17.493 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='id_patient', referencedColumn='', mappedBy=''}
2024-04-15 06:05:17.493 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id_patient, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:17.493 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_patient
2024-04-15 06:05:17.495 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-04-15 06:05:17.495 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for date_in
2024-04-15 06:05:17.495 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-04-15 06:05:17.496 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for phone
2024-04-15 06:05:17.496 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for room
2024-04-15 06:05:17.496 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for speciality
2024-04-15 06:05:17.496 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for card
2024-04-15 06:05:17.496 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for birthday
2024-04-15 06:05:17.496 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for male
2024-04-15 06:05:17.496 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-04-15 06:05:17.496 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id_disease
2024-04-15 06:05:17.496 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-04-15 06:05:17.496 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for sign
2024-04-15 06:05:17.496 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-04-15 06:05:17.496 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for date
2024-04-15 06:05:17.501 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [doctor]
2024-04-15 06:05:17.503 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [card] to be non-null as it is part of the primary key for table [patient]
2024-04-15 06:05:17.503 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_disease] to be non-null as it is part of the primary key for table [disease]
2024-04-15 06:05:17.503 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [visit]
2024-04-15 06:05:17.504 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Disease
2024-04-15 06:05:17.507 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Doctor
2024-04-15 06:05:17.508 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Patient
2024-04-15 06:05:17.510 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Disease
2024-04-15 06:05:17.510 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Doctor
2024-04-15 06:05:17.510 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Patient
2024-04-15 06:05:17.552 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Building session factory
2024-04-15 06:05:17.553 [main] DEBUG org.hibernate.cfg.Settings - SessionFactory name : null
2024-04-15 06:05:17.554 [main] DEBUG org.hibernate.cfg.Settings - Automatic flush during beforeCompletion(): enabled
2024-04-15 06:05:17.554 [main] DEBUG org.hibernate.cfg.Settings - Automatic session close at end of transaction: disabled
2024-04-15 06:05:17.554 [main] DEBUG org.hibernate.cfg.Settings - Statistics: disabled
2024-04-15 06:05:17.554 [main] DEBUG org.hibernate.cfg.Settings - Deleted entity synthetic identifier rollback: disabled
2024-04-15 06:05:17.554 [main] DEBUG org.hibernate.cfg.Settings - Default entity-mode: pojo
2024-04-15 06:05:17.554 [main] DEBUG org.hibernate.cfg.Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2024-04-15 06:05:17.554 [main] DEBUG org.hibernate.cfg.Settings - Allow initialization of lazy state outside session : disabled
2024-04-15 06:05:17.554 [main] DEBUG org.hibernate.cfg.Settings - Using BatchFetchStyle : LEGACY
2024-04-15 06:05:17.554 [main] DEBUG org.hibernate.cfg.Settings - Default batch fetch size: -1
2024-04-15 06:05:17.554 [main] DEBUG org.hibernate.cfg.Settings - Maximum outer join fetch depth: null
2024-04-15 06:05:17.554 [main] DEBUG org.hibernate.cfg.Settings - Default null ordering: NONE
2024-04-15 06:05:17.554 [main] DEBUG org.hibernate.cfg.Settings - Order SQL updates by primary key: disabled
2024-04-15 06:05:17.554 [main] DEBUG org.hibernate.cfg.Settings - Order SQL inserts for batching: disabled
2024-04-15 06:05:17.554 [main] DEBUG org.hibernate.cfg.Settings - multi-tenancy strategy : NONE
2024-04-15 06:05:17.554 [main] DEBUG org.hibernate.cfg.Settings - JTA Track by Thread: enabled
2024-04-15 06:05:17.555 [main] DEBUG org.hibernate.cfg.Settings - Query language substitutions: {}
2024-04-15 06:05:17.555 [main] DEBUG org.hibernate.cfg.Settings - Named query checking : enabled
2024-04-15 06:05:17.555 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache: disabled
2024-04-15 06:05:17.555 [main] DEBUG org.hibernate.cfg.Settings - Second-level query cache: disabled
2024-04-15 06:05:17.555 [main] DEBUG org.hibernate.cfg.Settings - Second-level query cache factory: null
2024-04-15 06:05:17.555 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache region prefix: null
2024-04-15 06:05:17.555 [main] DEBUG org.hibernate.cfg.Settings - Optimize second-level cache for minimal puts: disabled
2024-04-15 06:05:17.555 [main] DEBUG org.hibernate.cfg.Settings - Structured second-level cache entries: disabled
2024-04-15 06:05:17.555 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache direct-reference entries: disabled
2024-04-15 06:05:17.555 [main] DEBUG org.hibernate.cfg.Settings - Automatic eviction of collection cache: disabled
2024-04-15 06:05:17.555 [main] DEBUG org.hibernate.cfg.Settings - JDBC batch size: 1
2024-04-15 06:05:17.555 [main] DEBUG org.hibernate.cfg.Settings - JDBC batch updates for versioned data: enabled
2024-04-15 06:05:17.555 [main] DEBUG org.hibernate.cfg.Settings - Scrollable result sets: disabled
2024-04-15 06:05:17.555 [main] DEBUG org.hibernate.cfg.Settings - Wrap result sets: disabled
2024-04-15 06:05:17.555 [main] DEBUG org.hibernate.cfg.Settings - JDBC3 getGeneratedKeys(): disabled
2024-04-15 06:05:17.555 [main] DEBUG org.hibernate.cfg.Settings - JDBC result set fetch size: null
2024-04-15 06:05:17.555 [main] DEBUG org.hibernate.cfg.Settings - Connection release mode: AFTER_TRANSACTION
2024-04-15 06:05:17.555 [main] DEBUG org.hibernate.cfg.Settings - Generate SQL with comments: disabled
2024-04-15 06:05:17.556 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - query : disabled
2024-04-15 06:05:17.556 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - closed-handling : disabled
2024-04-15 06:05:17.556 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - lists : disabled
2024-04-15 06:05:17.556 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - transactions : disabled
2024-04-15 06:05:17.615 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-04-15 06:05:17.617 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-04-15 06:05:17.627 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2024-04-15 06:05:17.628 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {hibernate.format_sql=true, hibernate.id.new_generator_mappings=false, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, java.class.path=D:\IntellijIdea\Kem Rudolf\Lab2Rizhkov\target\classes;C:\Users\ПК\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\ПК\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\ПК\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\ПК\.m2\repository\net\bytebuddy\byte-buddy\1.12.7\byte-buddy-1.12.7.jar;C:\Users\ПК\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ПК\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\ПК\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\ПК\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\ПК\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\ПК\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\ПК\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\ПК\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\ПК\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\ПК\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\ПК\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\ПК\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\ПК\.m2\repository\org\xerial\sqlite-jdbc\3.7.2\sqlite-jdbc-3.7.2.jar;C:\Users\ПК\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\ПК\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.2\log4j-core-2.17.2.jar;C:\Users\ПК\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Yekaterinburg, javax.persistence.jdbc.url=jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Users\ПК\.jdks\openjdk-19.0.2\bin, sun.java.command=Main, jdk.debug=release, jakarta.persistence.jdbc.driver=org.sqlite.JDBC, sun.cpu.endian=little, user.home=C:\Users\ПК, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\ПК\.jdks\openjdk-19.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=TST, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=org.sqlite.JDBC, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.2+7-44, user.name=ПК, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TST, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=org.sqlite.JDBC, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\90C5~1\AppData\Local\Temp\, java.version=19.0.2, user.dir=D:\IntellijIdea\Kem Rudolf\Lab2Rizhkov, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@66153688, native.encoding=Cp1251, java.library.path=C:\Users\ПК\.jdks\openjdk-19.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Python310;C:\Program Files\Python310\Scripts;D:\nodejs\;C:\php7;C:\Program Files (x86)\dotnet\;C:\Program Files\MySQL\MySQL Server 8.1\bin;c:\windows\system32\OpenSSH\ssh.exe;C:\sqlite;C:\Users\ПК\AppData\Local\Microsoft\WindowsApps;D:\WebStorm 2022.1.4\bin;;C:\Program Files (x86)\OpenVPN\bin;C:\Program Files\Python310\Scripts\;C:\Program Files\Python310\;C:\Users\ПК\AppData\Roaming\npm;C:\php7;C:\Program Files\MySQL\MySQL Server 8.1\bin;c:\windows\system32\OpenSSH\;C:\sqlite;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.2+7-44, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=63.0}
2024-04-15 06:05:17.639 [main] DEBUG org.hibernate.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled
2024-04-15 06:05:17.641 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
2024-04-15 06:05:17.641 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4351171a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@69e05f61]
2024-04-15 06:05:17.688 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Doctor] is safe
2024-04-15 06:05:17.689 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Doctor
2024-04-15 06:05:17.856 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Patient] is safe
2024-04-15 06:05:17.856 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Patient
2024-04-15 06:05:17.870 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Disease] is safe
2024-04-15 06:05:17.870 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Disease
2024-04-15 06:05:17.882 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:17.886 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:17.887 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:17.887 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:17.887 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:17.887 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:17.887 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Visit] is safe
2024-04-15 06:05:17.887 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Visit
2024-04-15 06:05:17.897 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:17.898 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:17.898 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:17.898 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:17.898 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:17.898 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:17.910 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Doctor
2024-04-15 06:05:17.910 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from doctor where id =?
2024-04-15 06:05:17.910 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select doctor_.id, doctor_.date_in as date_in2_1_, doctor_.name as name3_1_, doctor_.phone as phone4_1_, doctor_.room as room5_1_, doctor_.speciality as speciali6_1_ from doctor doctor_ where doctor_.id=?
2024-04-15 06:05:17.910 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into doctor (date_in, name, phone, room, speciality, id) values (?, ?, ?, ?, ?, ?)
2024-04-15 06:05:17.910 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update doctor set date_in=?, name=?, phone=?, room=?, speciality=? where id=?
2024-04-15 06:05:17.910 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from doctor where id=?
2024-04-15 06:05:17.910 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into doctor (date_in, name, phone, room, speciality) values (?, ?, ?, ?, ?)
2024-04-15 06:05:17.927 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4190bc8a]
2024-04-15 06:05:17.927 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date_in
2024-04-15 06:05:17.928 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-04-15 06:05:17.928 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : phone
2024-04-15 06:05:17.928 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : room
2024-04-15 06:05:17.928 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : speciality
2024-04-15 06:05:17.928 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:05:17.936 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:05:17.948 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Doctor)
    - Returns
       - EntityReturnImpl(entity=entity.Doctor, querySpaceUid=<gen:0>, path=entity.Doctor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Doctor)
          - SQL table alias mapping - doctor0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2024-04-15 06:05:17.950 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Doctor [NONE]: select doctor0_.id as id1_1_0_, doctor0_.date_in as date_in2_1_0_, doctor0_.name as name3_1_0_, doctor0_.phone as phone4_1_0_, doctor0_.room as room5_1_0_, doctor0_.speciality as speciali6_1_0_ from doctor doctor0_ where doctor0_.id=?
2024-04-15 06:05:17.950 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Patient
2024-04-15 06:05:17.950 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select card from patient where card =?
2024-04-15 06:05:17.950 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select patient_.card, patient_.birthday as birthday2_2_, patient_.male as male3_2_, patient_.name as name4_2_ from patient patient_ where patient_.card=?
2024-04-15 06:05:17.950 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into patient (birthday, male, name, card) values (?, ?, ?, ?)
2024-04-15 06:05:17.950 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update patient set birthday=?, male=?, name=? where card=?
2024-04-15 06:05:17.950 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from patient where card=?
2024-04-15 06:05:17.950 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into patient (birthday, male, name) values (?, ?, ?)
2024-04-15 06:05:17.951 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c6017b9]
2024-04-15 06:05:17.951 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : birthday
2024-04-15 06:05:17.951 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : male
2024-04-15 06:05:17.951 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-04-15 06:05:17.951 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:05:17.951 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:05:17.951 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Patient)
    - Returns
       - EntityReturnImpl(entity=entity.Patient, querySpaceUid=<gen:0>, path=entity.Patient)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Patient)
          - SQL table alias mapping - patient0_
          - alias suffix - 0_
          - suffixed key columns - {card1_2_0_}

2024-04-15 06:05:17.951 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Patient [NONE]: select patient0_.card as card1_2_0_, patient0_.birthday as birthday2_2_0_, patient0_.male as male3_2_0_, patient0_.name as name4_2_0_ from patient patient0_ where patient0_.card=?
2024-04-15 06:05:17.952 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Disease
2024-04-15 06:05:17.952 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id_disease from disease where id_disease =?
2024-04-15 06:05:17.952 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select disease_.id_disease, disease_.name as name2_0_, disease_.sign as sign3_0_ from disease disease_ where disease_.id_disease=?
2024-04-15 06:05:17.952 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into disease (name, sign, id_disease) values (?, ?, ?)
2024-04-15 06:05:17.952 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update disease set name=?, sign=? where id_disease=?
2024-04-15 06:05:17.952 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from disease where id_disease=?
2024-04-15 06:05:17.952 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into disease (name, sign) values (?, ?)
2024-04-15 06:05:17.952 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@506a1372]
2024-04-15 06:05:17.952 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-04-15 06:05:17.952 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : sign
2024-04-15 06:05:17.953 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:05:17.953 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:05:17.955 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Disease)
    - Returns
       - EntityReturnImpl(entity=entity.Disease, querySpaceUid=<gen:0>, path=entity.Disease)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Disease)
          - SQL table alias mapping - disease0_
          - alias suffix - 0_
          - suffixed key columns - {id_disea1_0_0_}

2024-04-15 06:05:17.956 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Disease [NONE]: select disease0_.id_disease as id_disea1_0_0_, disease0_.name as name2_0_0_, disease0_.sign as sign3_0_0_ from disease disease0_ where disease0_.id_disease=?
2024-04-15 06:05:17.956 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Visit
2024-04-15 06:05:17.956 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from visit where id =?
2024-04-15 06:05:17.956 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select visit_.id, visit_.date as date2_3_, visit_.id_disease as id_disea3_3_, visit_.id_doctor as id_docto4_3_, visit_.id_patient as id_patie5_3_ from visit visit_ where visit_.id=?
2024-04-15 06:05:17.956 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into visit (date, id_disease, id_doctor, id_patient, id) values (?, ?, ?, ?, ?)
2024-04-15 06:05:17.956 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update visit set date=?, id_disease=?, id_doctor=?, id_patient=? where id=?
2024-04-15 06:05:17.956 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from visit where id=?
2024-04-15 06:05:17.956 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into visit (date, id_disease, id_doctor, id_patient) values (?, ?, ?, ?)
2024-04-15 06:05:17.956 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77c233af]
2024-04-15 06:05:17.956 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date
2024-04-15 06:05:17.956 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_disease
2024-04-15 06:05:17.959 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34aeacd1]
2024-04-15 06:05:17.960 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_disease.name
2024-04-15 06:05:17.961 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_disease.sign
2024-04-15 06:05:17.961 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor
2024-04-15 06:05:17.961 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5854a18]
2024-04-15 06:05:17.961 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.date_in
2024-04-15 06:05:17.961 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.name
2024-04-15 06:05:17.961 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.phone
2024-04-15 06:05:17.961 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.room
2024-04-15 06:05:17.961 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.speciality
2024-04-15 06:05:17.961 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient
2024-04-15 06:05:17.961 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@791c12e3]
2024-04-15 06:05:17.961 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient.birthday
2024-04-15 06:05:17.962 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient.male
2024-04-15 06:05:17.962 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient.name
2024-04-15 06:05:17.962 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:05:17.962 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:05:17.963 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Visit)
    - Returns
       - EntityReturnImpl(entity=entity.Visit, querySpaceUid=<gen:0>, path=entity.Visit)
          - EntityAttributeFetchImpl(entity=entity.Disease, querySpaceUid=<gen:1>, path=entity.Visit.id_disease)
          - EntityAttributeFetchImpl(entity=entity.Doctor, querySpaceUid=<gen:2>, path=entity.Visit.id_doctor)
          - EntityAttributeFetchImpl(entity=entity.Patient, querySpaceUid=<gen:3>, path=entity.Visit.id_patient)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Visit)
          - SQL table alias mapping - visit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(id_disease)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=entity.Disease)
                - SQL table alias mapping - disease1_
                - alias suffix - 1_
                - suffixed key columns - {id_disea1_0_1_}
          - JOIN (JoinDefinedByMetadata(id_doctor)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=entity.Doctor)
                - SQL table alias mapping - doctor2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}
          - JOIN (JoinDefinedByMetadata(id_patient)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=entity.Patient)
                - SQL table alias mapping - patient3_
                - alias suffix - 3_
                - suffixed key columns - {card1_2_3_}

2024-04-15 06:05:17.963 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Visit [NONE]: select visit0_.id as id1_3_0_, visit0_.date as date2_3_0_, visit0_.id_disease as id_disea3_3_0_, visit0_.id_doctor as id_docto4_3_0_, visit0_.id_patient as id_patie5_3_0_, disease1_.id_disease as id_disea1_0_1_, disease1_.name as name2_0_1_, disease1_.sign as sign3_0_1_, doctor2_.id as id1_1_2_, doctor2_.date_in as date_in2_1_2_, doctor2_.name as name3_1_2_, doctor2_.phone as phone4_1_2_, doctor2_.room as room5_1_2_, doctor2_.speciality as speciali6_1_2_, patient3_.card as card1_2_3_, patient3_.birthday as birthday2_2_3_, patient3_.male as male3_2_3_, patient3_.name as name4_2_3_ from visit visit0_ left outer join disease disease1_ on visit0_.id_disease=disease1_.id_disease left outer join doctor doctor2_ on visit0_.id_doctor=doctor2_.id left outer join patient patient3_ on visit0_.id_patient=patient3_.card where visit0_.id=?
2024-04-15 06:05:17.978 [main] DEBUG org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator - No actions specified; doing nothing
2024-04-15 06:05:17.978 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2024-04-15 06:05:17.979 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-04-15 06:05:17.981 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 06:05:17.981 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 06:05:17.982 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 4 named HQL queries
2024-04-15 06:05:17.982 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: visit.getAll
2024-04-15 06:05:17.985 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2024-04-15 06:05:17.989 [main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@176555c
2024-04-15 06:05:18.004 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT v from entity.Visit v
2024-04-15 06:05:18.006 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.013 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Visit'
       |     \-[ALIAS] Node: 'v'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'v'

2024-04-15 06:05:18.025 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:05:18.034 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Visit (v) -> visit0_
2024-04-15 06:05:18.035 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : v -> visit0_.id
2024-04-15 06:05:18.037 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:05:18.037 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} visit0_.id ) ( FromClause{level=1} visit visit0_ ) )
2024-04-15 06:05:18.042 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Visit): [visit]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Visit)
    |  | originalText: v
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:05:18.045 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [visit visit0_]
2024-04-15 06:05:18.045 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:05:18.045 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (visit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'visit0_.id as id1_3_' {alias=v, className=entity.Visit, tableAlias=visit0_}
    |  \-[SQL_TOKEN] SqlFragment: 'visit0_.date as date2_3_, visit0_.id_disease as id_disea3_3_, visit0_.id_doctor as id_docto4_3_, visit0_.id_patient as id_patie5_3_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[v], fromElementByTableAlias=[visit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'visit visit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=v,role=null,tableName=visit,tableAlias=visit0_,origin=null,columns={,className=entity.Visit}}

2024-04-15 06:05:18.046 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.050 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT v from entity.Visit v
2024-04-15 06:05:18.050 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select visit0_.id as id1_3_, visit0_.date as date2_3_, visit0_.id_disease as id_disea3_3_, visit0_.id_doctor as id_docto4_3_, visit0_.id_patient as id_patie5_3_ from visit visit0_
2024-04-15 06:05:18.050 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.054 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: disease.getAll
2024-04-15 06:05:18.055 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT c from entity.Disease c
2024-04-15 06:05:18.055 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.055 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Disease'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'c'

2024-04-15 06:05:18.055 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:05:18.056 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Disease (c) -> disease0_
2024-04-15 06:05:18.056 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : c -> disease0_.id_disease
2024-04-15 06:05:18.056 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:05:18.056 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} disease0_.id_disease ) ( FromClause{level=1} disease disease0_ ) )
2024-04-15 06:05:18.056 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Disease): [disease]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Disease)
    |  | originalText: c
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:05:18.056 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [disease disease0_]
2024-04-15 06:05:18.056 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:05:18.057 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (disease)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'disease0_.id_disease as id_disea1_0_' {alias=c, className=entity.Disease, tableAlias=disease0_}
    |  \-[SQL_TOKEN] SqlFragment: 'disease0_.name as name2_0_, disease0_.sign as sign3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[disease0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'disease disease0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=disease,tableAlias=disease0_,origin=null,columns={,className=entity.Disease}}

2024-04-15 06:05:18.057 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.057 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT c from entity.Disease c
2024-04-15 06:05:18.057 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select disease0_.id_disease as id_disea1_0_, disease0_.name as name2_0_, disease0_.sign as sign3_0_ from disease disease0_
2024-04-15 06:05:18.057 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.057 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: doctor.getAll
2024-04-15 06:05:18.057 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT s from entity.Doctor s
2024-04-15 06:05:18.058 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.058 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Doctor'
       |     \-[ALIAS] Node: 's'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 's'

2024-04-15 06:05:18.058 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:05:18.058 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Doctor (s) -> doctor0_
2024-04-15 06:05:18.059 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : s -> doctor0_.id
2024-04-15 06:05:18.059 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:05:18.059 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} doctor0_.id ) ( FromClause{level=1} doctor doctor0_ ) )
2024-04-15 06:05:18.059 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Doctor): [doctor]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Doctor)
    |  | originalText: s
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:05:18.059 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [doctor doctor0_]
2024-04-15 06:05:18.059 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:05:18.059 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (doctor)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'doctor0_.id as id1_1_' {alias=s, className=entity.Doctor, tableAlias=doctor0_}
    |  \-[SQL_TOKEN] SqlFragment: 'doctor0_.date_in as date_in2_1_, doctor0_.name as name3_1_, doctor0_.phone as phone4_1_, doctor0_.room as room5_1_, doctor0_.speciality as speciali6_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[doctor0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'doctor doctor0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=doctor,tableAlias=doctor0_,origin=null,columns={,className=entity.Doctor}}

2024-04-15 06:05:18.059 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.059 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT s from entity.Doctor s
2024-04-15 06:05:18.059 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select doctor0_.id as id1_1_, doctor0_.date_in as date_in2_1_, doctor0_.name as name3_1_, doctor0_.phone as phone4_1_, doctor0_.room as room5_1_, doctor0_.speciality as speciali6_1_ from doctor doctor0_
2024-04-15 06:05:18.059 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.060 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: patient.getAll
2024-04-15 06:05:18.060 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT p from entity.Patient p
2024-04-15 06:05:18.060 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.060 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Patient'
       |     \-[ALIAS] Node: 'p'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'p'

2024-04-15 06:05:18.060 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:05:18.060 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Patient (p) -> patient0_
2024-04-15 06:05:18.061 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : p -> patient0_.card
2024-04-15 06:05:18.061 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:05:18.061 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} patient0_.card ) ( FromClause{level=1} patient patient0_ ) )
2024-04-15 06:05:18.061 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Patient): [patient]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Patient)
    |  | originalText: p
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:05:18.061 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [patient patient0_]
2024-04-15 06:05:18.061 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:05:18.061 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (patient)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'patient0_.card as card1_2_' {alias=p, className=entity.Patient, tableAlias=patient0_}
    |  \-[SQL_TOKEN] SqlFragment: 'patient0_.birthday as birthday2_2_, patient0_.male as male3_2_, patient0_.name as name4_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[patient0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'patient patient0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=patient,tableAlias=patient0_,origin=null,columns={,className=entity.Patient}}

2024-04-15 06:05:18.061 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.061 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT p from entity.Patient p
2024-04-15 06:05:18.061 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select patient0_.card as card1_2_, patient0_.birthday as birthday2_2_, patient0_.male as male3_2_, patient0_.name as name4_2_ from patient patient0_
2024-04-15 06:05:18.061 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.062 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named SQL queries
2024-04-15 06:05:18.065 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-04-15 06:05:18.069 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4d0e54e0
2024-04-15 06:05:18.070 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: 36654ffd-feab-4bb2-a97f-41943e699b11 (<unnamed>)
2024-04-15 06:05:18.071 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2024-04-15 06:05:18.115 [main] DEBUG org.hibernate.jpa.HibernatePersistenceProvider - Located and parsed 1 persistence units; checking each
2024-04-15 06:05:18.115 [main] DEBUG org.hibernate.jpa.HibernatePersistenceProvider - Checking persistence-unit [name=TST, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [TST]
2024-04-15 06:05:18.115 [main] DEBUG org.hibernate.jpa.boot.spi.ProviderChecker - Persistence-unit [TST] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2024-04-15 06:05:18.115 [main] DEBUG org.hibernate.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: TST
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/IntellijIdea/Kem%20Rudolf/Lab2Rizhkov/target/classes
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		entity.Visit
		entity.Doctor
		entity.Disease
		entity.Patient]
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.sqlite.JDBC
		hibernate.dialect: org.hibernate.dialect.SQLiteDialect
		javax.persistence.jdbc.url: jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db
		hibernate.id.new_generator_mappings: false
		hibernate.show_sql: false
		hibernate.format_sql: true]
2024-04-15 06:05:18.115 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2024-04-15 06:05:18.115 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2024-04-15 06:05:18.115 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-04-15 06:05:18.117 [main] DEBUG org.hibernate.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2024-04-15 06:05:18.117 [main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-04-15 06:05:18.117 [main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2024-04-15 06:05:18.117 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@9635fa
2024-04-15 06:05:18.117 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@9635fa
2024-04-15 06:05:18.117 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@9635fa
2024-04-15 06:05:18.117 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1c98290c
2024-04-15 06:05:18.117 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2ce86164
2024-04-15 06:05:18.117 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@60d8c0dc
2024-04-15 06:05:18.117 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1849db1a
2024-04-15 06:05:18.118 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1849db1a
2024-04-15 06:05:18.118 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1849db1a
2024-04-15 06:05:18.118 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6865c751
2024-04-15 06:05:18.118 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6865c751
2024-04-15 06:05:18.118 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6865c751
2024-04-15 06:05:18.118 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3ebff828
2024-04-15 06:05:18.118 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3ebff828
2024-04-15 06:05:18.118 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3ebff828
2024-04-15 06:05:18.118 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@35fe2125
2024-04-15 06:05:18.118 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@35fe2125
2024-04-15 06:05:18.118 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@35fe2125
2024-04-15 06:05:18.118 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7c22d4f
2024-04-15 06:05:18.118 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7c22d4f
2024-04-15 06:05:18.118 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7c22d4f
2024-04-15 06:05:18.118 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5fd62371
2024-04-15 06:05:18.118 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5fd62371
2024-04-15 06:05:18.118 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5fd62371
2024-04-15 06:05:18.118 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c345c5f
2024-04-15 06:05:18.118 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c345c5f
2024-04-15 06:05:18.118 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6c345c5f
2024-04-15 06:05:18.118 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@f9879ac
2024-04-15 06:05:18.118 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@f9879ac
2024-04-15 06:05:18.118 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4ef27d66
2024-04-15 06:05:18.118 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4ef27d66
2024-04-15 06:05:18.118 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3f23a3a0
2024-04-15 06:05:18.118 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3f23a3a0
2024-04-15 06:05:18.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@61861a29
2024-04-15 06:05:18.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@63cd604c
2024-04-15 06:05:18.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@6c6357f9
2024-04-15 06:05:18.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6c6357f9
2024-04-15 06:05:18.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@64bc21ac
2024-04-15 06:05:18.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@64bc21ac
2024-04-15 06:05:18.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@4a8a60bc
2024-04-15 06:05:18.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4a8a60bc
2024-04-15 06:05:18.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@15a902e7
2024-04-15 06:05:18.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@15a902e7
2024-04-15 06:05:18.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3c9168dc
2024-04-15 06:05:18.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3c9168dc
2024-04-15 06:05:18.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@293bb8a5
2024-04-15 06:05:18.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@293bb8a5
2024-04-15 06:05:18.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77307458
2024-04-15 06:05:18.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77307458
2024-04-15 06:05:18.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@209775a9
2024-04-15 06:05:18.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@209775a9
2024-04-15 06:05:18.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@192f2f27
2024-04-15 06:05:18.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@192f2f27
2024-04-15 06:05:18.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7997b197
2024-04-15 06:05:18.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7997b197
2024-04-15 06:05:18.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@76a82f33
2024-04-15 06:05:18.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@76a82f33
2024-04-15 06:05:18.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7f811d00
2024-04-15 06:05:18.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7f811d00
2024-04-15 06:05:18.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7f811d00
2024-04-15 06:05:18.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7807ac2c
2024-04-15 06:05:18.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@523424b5
2024-04-15 06:05:18.120 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@523424b5
2024-04-15 06:05:18.120 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@523424b5
2024-04-15 06:05:18.120 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@754777cd
2024-04-15 06:05:18.120 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@a486d78
2024-04-15 06:05:18.120 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@299266e2
2024-04-15 06:05:18.120 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@299266e2
2024-04-15 06:05:18.120 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@517bd097
2024-04-15 06:05:18.120 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@517bd097
2024-04-15 06:05:18.120 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@47289387
2024-04-15 06:05:18.120 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@47289387
2024-04-15 06:05:18.120 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@32fe9d0a
2024-04-15 06:05:18.120 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@32fe9d0a
2024-04-15 06:05:18.120 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3b9d6699
2024-04-15 06:05:18.120 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3b9d6699
2024-04-15 06:05:18.120 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@22c86919
2024-04-15 06:05:18.120 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@64712be
2024-04-15 06:05:18.120 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@64712be
2024-04-15 06:05:18.120 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@64712be
2024-04-15 06:05:18.120 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2fd1731c
2024-04-15 06:05:18.120 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2fd1731c
2024-04-15 06:05:18.120 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2fd1731c
2024-04-15 06:05:18.120 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@24f360b2
2024-04-15 06:05:18.120 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@48c40605
2024-04-15 06:05:18.120 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1eba372c
2024-04-15 06:05:18.120 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1eba372c
2024-04-15 06:05:18.120 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1eba372c
2024-04-15 06:05:18.121 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4b21844c
2024-04-15 06:05:18.121 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4b21844c
2024-04-15 06:05:18.121 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4b21844c
2024-04-15 06:05:18.121 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@19b30c92
2024-04-15 06:05:18.121 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4940809c
2024-04-15 06:05:18.121 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7cc586a8
2024-04-15 06:05:18.121 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7cc586a8
2024-04-15 06:05:18.121 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a76b80a
2024-04-15 06:05:18.121 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4da855dd
2024-04-15 06:05:18.121 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4da855dd
2024-04-15 06:05:18.121 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@3ec11999
2024-04-15 06:05:18.121 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3ec11999
2024-04-15 06:05:18.121 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2e77b8cf
2024-04-15 06:05:18.121 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6e57e95e
2024-04-15 06:05:18.121 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@7a11c4c7
2024-04-15 06:05:18.121 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3f093abe
2024-04-15 06:05:18.121 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3f093abe
2024-04-15 06:05:18.121 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3069a360
2024-04-15 06:05:18.121 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7235f92b
2024-04-15 06:05:18.122 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7885776b
2024-04-15 06:05:18.122 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@497d4c96
2024-04-15 06:05:18.122 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3472947a
2024-04-15 06:05:18.122 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@69d3cf7e
2024-04-15 06:05:18.122 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3a3ed300
2024-04-15 06:05:18.122 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1984212d
2024-04-15 06:05:18.126 [main] DEBUG org.hibernate.boot.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@999b951] into BootstrapContext; was [null]
2024-04-15 06:05:18.126 [main] DEBUG org.hibernate.boot.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@65cf4d6d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1b410308]
2024-04-15 06:05:18.135 [main] DEBUG org.hibernate.boot.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2024-04-15 06:05:18.136 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2024-04-15 06:05:18.136 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-04-15 06:05:18.136 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-04-15 06:05:18.136 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-04-15 06:05:18.136 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-04-15 06:05:18.136 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-04-15 06:05:18.136 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-04-15 06:05:18.136 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-04-15 06:05:18.136 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-04-15 06:05:18.136 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2024-04-15 06:05:18.136 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-04-15 06:05:18.136 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-04-15 06:05:18.136 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2024-04-15 06:05:18.137 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-04-15 06:05:18.137 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-04-15 06:05:18.137 [main] WARN  org.hibernate.orm.connections.pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2024-04-15 06:05:18.137 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: using driver [org.sqlite.JDBC] at URL [jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db]
2024-04-15 06:05:18.137 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001001: Connection properties: {}
2024-04-15 06:05:18.137 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001003: Autocommit mode: false
2024-04-15 06:05:18.137 [main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
2024-04-15 06:05:18.137 [main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
2024-04-15 06:05:18.138 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Database ->
       name : SQLite
    version : 3.7.2
      major : 3
      minor : 0
2024-04-15 06:05:18.139 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Driver ->
       name : SQLiteJDBC
    version : native
      major : 1
      minor : 1
2024-04-15 06:05:18.139 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - JDBC version : 2.1
2024-04-15 06:05:18.139 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
2024-04-15 06:05:18.139 [main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-04-15 06:05:18.139 [main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-04-15 06:05:18.139 [main] DEBUG org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver - Unable to use Java 1.7 Connection#getSchema
2024-04-15 06:05:18.139 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl - Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.SQLiteDialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:315) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:273) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79) ~[javax.persistence-api-2.2.jar:2.2]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54) ~[javax.persistence-api-2.2.jar:2.2]
	at repository.PatientRepository.<init>(PatientRepository.java:16) ~[classes/:?]
	at Main.main(Main.java:22) ~[classes/:?]
2024-04-15 06:05:18.140 [main] DEBUG org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
2024-04-15 06:05:18.140 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2024-04-15 06:05:18.141 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-04-15 06:05:18.141 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@36f7d7b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@60aec68a]
2024-04-15 06:05:18.142 [main] DEBUG org.hibernate.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-04-15 06:05:18.142 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Doctor
2024-04-15 06:05:18.142 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: doctor.getAll => SELECT s from Doctor s
2024-04-15 06:05:18.142 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:05:18.142 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Doctor
2024-04-15 06:05:18.142 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Doctor on table doctor
2024-04-15 06:05:18.143 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=id, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.143 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Doctor] is safe
2024-04-15 06:05:18.143 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Doctor
2024-04-15 06:05:18.143 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-04-15 06:05:18.143 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:id]
2024-04-15 06:05:18.143 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-04-15 06:05:18.143 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-04-15 06:05:18.143 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2024-04-15 06:05:18.143 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=date_in, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.143 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property date_in with lazy=false
2024-04-15 06:05:18.143 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:date_in]
2024-04-15 06:05:18.144 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for date_in
2024-04-15 06:05:18.144 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property date_in
2024-04-15 06:05:18.144 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.144 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-04-15 06:05:18.144 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:name]
2024-04-15 06:05:18.144 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-04-15 06:05:18.144 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-04-15 06:05:18.144 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=phone, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.144 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property phone with lazy=false
2024-04-15 06:05:18.144 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:phone]
2024-04-15 06:05:18.144 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for phone
2024-04-15 06:05:18.144 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property phone
2024-04-15 06:05:18.144 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=room, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.144 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property room with lazy=false
2024-04-15 06:05:18.144 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:room]
2024-04-15 06:05:18.144 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for room
2024-04-15 06:05:18.144 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property room
2024-04-15 06:05:18.144 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=speciality, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.144 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property speciality with lazy=false
2024-04-15 06:05:18.144 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:speciality]
2024-04-15 06:05:18.144 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for speciality
2024-04-15 06:05:18.145 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property speciality
2024-04-15 06:05:18.145 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Patient
2024-04-15 06:05:18.145 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: patient.getAll => SELECT p from Patient p
2024-04-15 06:05:18.146 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:05:18.146 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Patient
2024-04-15 06:05:18.146 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Patient on table patient
2024-04-15 06:05:18.146 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=card, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.146 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Patient] is safe
2024-04-15 06:05:18.146 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Patient
2024-04-15 06:05:18.146 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property card with lazy=false
2024-04-15 06:05:18.147 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:card]
2024-04-15 06:05:18.147 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for card
2024-04-15 06:05:18.147 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property card
2024-04-15 06:05:18.147 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(card)]), card, identity, , ...)
2024-04-15 06:05:18.147 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=birthday, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.147 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property birthday with lazy=false
2024-04-15 06:05:18.147 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:birthday]
2024-04-15 06:05:18.147 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for birthday
2024-04-15 06:05:18.147 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property birthday
2024-04-15 06:05:18.147 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=male, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.147 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property male with lazy=false
2024-04-15 06:05:18.147 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:male]
2024-04-15 06:05:18.147 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for male
2024-04-15 06:05:18.148 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property male
2024-04-15 06:05:18.148 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.148 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-04-15 06:05:18.148 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:name]
2024-04-15 06:05:18.148 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-04-15 06:05:18.148 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-04-15 06:05:18.148 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Disease
2024-04-15 06:05:18.148 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: disease.getAll => SELECT c from Disease c
2024-04-15 06:05:18.148 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:05:18.148 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Disease
2024-04-15 06:05:18.148 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Disease on table disease
2024-04-15 06:05:18.149 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(disease), mappingColumn=id_disease, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.149 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Disease] is safe
2024-04-15 06:05:18.149 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Disease
2024-04-15 06:05:18.149 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id_disease with lazy=false
2024-04-15 06:05:18.149 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Disease:id_disease]
2024-04-15 06:05:18.149 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id_disease
2024-04-15 06:05:18.149 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_disease
2024-04-15 06:05:18.149 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_disease)]), id_disease, identity, , ...)
2024-04-15 06:05:18.149 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(disease), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.149 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-04-15 06:05:18.149 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Disease:name]
2024-04-15 06:05:18.149 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-04-15 06:05:18.149 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-04-15 06:05:18.149 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(disease), mappingColumn=sign, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.150 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property sign with lazy=false
2024-04-15 06:05:18.150 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Disease:sign]
2024-04-15 06:05:18.150 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for sign
2024-04-15 06:05:18.150 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property sign
2024-04-15 06:05:18.150 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Visit
2024-04-15 06:05:18.150 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: visit.getAll => SELECT v from Visit v
2024-04-15 06:05:18.150 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:05:18.150 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Visit
2024-04-15 06:05:18.150 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Visit on table visit
2024-04-15 06:05:18.151 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.151 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Visit] is safe
2024-04-15 06:05:18.151 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Visit
2024-04-15 06:05:18.151 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-04-15 06:05:18.151 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Visit:id]
2024-04-15 06:05:18.151 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-04-15 06:05:18.151 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-04-15 06:05:18.151 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2024-04-15 06:05:18.151 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=date, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.151 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property date with lazy=false
2024-04-15 06:05:18.151 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Visit:date]
2024-04-15 06:05:18.151 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for date
2024-04-15 06:05:18.151 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property date
2024-04-15 06:05:18.152 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='id_disease', referencedColumn='', mappedBy=''}
2024-04-15 06:05:18.152 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id_disease, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.152 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_disease
2024-04-15 06:05:18.152 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='id_doctor', referencedColumn='', mappedBy=''}
2024-04-15 06:05:18.152 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id_doctor, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.152 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_doctor
2024-04-15 06:05:18.152 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='id_patient', referencedColumn='', mappedBy=''}
2024-04-15 06:05:18.152 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id_patient, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.152 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_patient
2024-04-15 06:05:18.153 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-04-15 06:05:18.153 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for date_in
2024-04-15 06:05:18.153 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-04-15 06:05:18.153 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for phone
2024-04-15 06:05:18.153 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for room
2024-04-15 06:05:18.153 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for speciality
2024-04-15 06:05:18.153 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for card
2024-04-15 06:05:18.153 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for birthday
2024-04-15 06:05:18.153 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for male
2024-04-15 06:05:18.153 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-04-15 06:05:18.153 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id_disease
2024-04-15 06:05:18.153 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-04-15 06:05:18.153 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for sign
2024-04-15 06:05:18.153 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-04-15 06:05:18.153 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for date
2024-04-15 06:05:18.154 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [doctor]
2024-04-15 06:05:18.154 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [card] to be non-null as it is part of the primary key for table [patient]
2024-04-15 06:05:18.154 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_disease] to be non-null as it is part of the primary key for table [disease]
2024-04-15 06:05:18.154 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [visit]
2024-04-15 06:05:18.154 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Disease
2024-04-15 06:05:18.154 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Doctor
2024-04-15 06:05:18.154 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Patient
2024-04-15 06:05:18.154 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Disease
2024-04-15 06:05:18.155 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Doctor
2024-04-15 06:05:18.155 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Patient
2024-04-15 06:05:18.155 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Building session factory
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - SessionFactory name : null
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - Automatic flush during beforeCompletion(): enabled
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - Automatic session close at end of transaction: disabled
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - Statistics: disabled
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - Deleted entity synthetic identifier rollback: disabled
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - Default entity-mode: pojo
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - Allow initialization of lazy state outside session : disabled
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - Using BatchFetchStyle : LEGACY
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - Default batch fetch size: -1
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - Maximum outer join fetch depth: null
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - Default null ordering: NONE
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - Order SQL updates by primary key: disabled
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - Order SQL inserts for batching: disabled
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - multi-tenancy strategy : NONE
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - JTA Track by Thread: enabled
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - Query language substitutions: {}
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - Named query checking : enabled
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache: disabled
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - Second-level query cache: disabled
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - Second-level query cache factory: null
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache region prefix: null
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - Optimize second-level cache for minimal puts: disabled
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - Structured second-level cache entries: disabled
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache direct-reference entries: disabled
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - Automatic eviction of collection cache: disabled
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - JDBC batch size: 1
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - JDBC batch updates for versioned data: enabled
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - Scrollable result sets: disabled
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - Wrap result sets: disabled
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - JDBC3 getGeneratedKeys(): disabled
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - JDBC result set fetch size: null
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - Connection release mode: AFTER_TRANSACTION
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - Generate SQL with comments: disabled
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - query : disabled
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - closed-handling : disabled
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - lists : disabled
2024-04-15 06:05:18.156 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - transactions : disabled
2024-04-15 06:05:18.157 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-04-15 06:05:18.158 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-04-15 06:05:18.158 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2024-04-15 06:05:18.158 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {hibernate.format_sql=true, hibernate.id.new_generator_mappings=false, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, java.class.path=D:\IntellijIdea\Kem Rudolf\Lab2Rizhkov\target\classes;C:\Users\ПК\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\ПК\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\ПК\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\ПК\.m2\repository\net\bytebuddy\byte-buddy\1.12.7\byte-buddy-1.12.7.jar;C:\Users\ПК\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ПК\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\ПК\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\ПК\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\ПК\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\ПК\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\ПК\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\ПК\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\ПК\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\ПК\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\ПК\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\ПК\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\ПК\.m2\repository\org\xerial\sqlite-jdbc\3.7.2\sqlite-jdbc-3.7.2.jar;C:\Users\ПК\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\ПК\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.2\log4j-core-2.17.2.jar;C:\Users\ПК\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Yekaterinburg, javax.persistence.jdbc.url=jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Users\ПК\.jdks\openjdk-19.0.2\bin, sun.java.command=Main, jdk.debug=release, jakarta.persistence.jdbc.driver=org.sqlite.JDBC, sun.cpu.endian=little, user.home=C:\Users\ПК, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\ПК\.jdks\openjdk-19.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=TST, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=org.sqlite.JDBC, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.2+7-44, user.name=ПК, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TST, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=org.sqlite.JDBC, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\90C5~1\AppData\Local\Temp\, java.version=19.0.2, user.dir=D:\IntellijIdea\Kem Rudolf\Lab2Rizhkov, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@17dad32f, native.encoding=Cp1251, java.library.path=C:\Users\ПК\.jdks\openjdk-19.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Python310;C:\Program Files\Python310\Scripts;D:\nodejs\;C:\php7;C:\Program Files (x86)\dotnet\;C:\Program Files\MySQL\MySQL Server 8.1\bin;c:\windows\system32\OpenSSH\ssh.exe;C:\sqlite;C:\Users\ПК\AppData\Local\Microsoft\WindowsApps;D:\WebStorm 2022.1.4\bin;;C:\Program Files (x86)\OpenVPN\bin;C:\Program Files\Python310\Scripts\;C:\Program Files\Python310\;C:\Users\ПК\AppData\Roaming\npm;C:\php7;C:\Program Files\MySQL\MySQL Server 8.1\bin;c:\windows\system32\OpenSSH\;C:\sqlite;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.2+7-44, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=63.0}
2024-04-15 06:05:18.159 [main] DEBUG org.hibernate.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled
2024-04-15 06:05:18.159 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
2024-04-15 06:05:18.159 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@36f7d7b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@79696332]
2024-04-15 06:05:18.159 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Doctor] is safe
2024-04-15 06:05:18.159 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Doctor
2024-04-15 06:05:18.173 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Patient] is safe
2024-04-15 06:05:18.173 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Patient
2024-04-15 06:05:18.183 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Disease] is safe
2024-04-15 06:05:18.183 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Disease
2024-04-15 06:05:18.190 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:18.190 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:18.190 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:18.190 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:18.190 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:18.190 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:18.190 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Visit] is safe
2024-04-15 06:05:18.190 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Visit
2024-04-15 06:05:18.195 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:18.195 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:18.195 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:18.196 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:18.196 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:18.196 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:18.196 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Doctor
2024-04-15 06:05:18.196 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from doctor where id =?
2024-04-15 06:05:18.196 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select doctor_.id, doctor_.date_in as date_in2_1_, doctor_.name as name3_1_, doctor_.phone as phone4_1_, doctor_.room as room5_1_, doctor_.speciality as speciali6_1_ from doctor doctor_ where doctor_.id=?
2024-04-15 06:05:18.196 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into doctor (date_in, name, phone, room, speciality, id) values (?, ?, ?, ?, ?, ?)
2024-04-15 06:05:18.196 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update doctor set date_in=?, name=?, phone=?, room=?, speciality=? where id=?
2024-04-15 06:05:18.196 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from doctor where id=?
2024-04-15 06:05:18.196 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into doctor (date_in, name, phone, room, speciality) values (?, ?, ?, ?, ?)
2024-04-15 06:05:18.196 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49ca94a9]
2024-04-15 06:05:18.197 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date_in
2024-04-15 06:05:18.197 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-04-15 06:05:18.197 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : phone
2024-04-15 06:05:18.197 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : room
2024-04-15 06:05:18.197 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : speciality
2024-04-15 06:05:18.197 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:05:18.197 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:05:18.197 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Doctor)
    - Returns
       - EntityReturnImpl(entity=entity.Doctor, querySpaceUid=<gen:0>, path=entity.Doctor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Doctor)
          - SQL table alias mapping - doctor0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2024-04-15 06:05:18.197 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Doctor [NONE]: select doctor0_.id as id1_1_0_, doctor0_.date_in as date_in2_1_0_, doctor0_.name as name3_1_0_, doctor0_.phone as phone4_1_0_, doctor0_.room as room5_1_0_, doctor0_.speciality as speciali6_1_0_ from doctor doctor0_ where doctor0_.id=?
2024-04-15 06:05:18.197 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Patient
2024-04-15 06:05:18.197 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select card from patient where card =?
2024-04-15 06:05:18.197 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select patient_.card, patient_.birthday as birthday2_2_, patient_.male as male3_2_, patient_.name as name4_2_ from patient patient_ where patient_.card=?
2024-04-15 06:05:18.197 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into patient (birthday, male, name, card) values (?, ?, ?, ?)
2024-04-15 06:05:18.197 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update patient set birthday=?, male=?, name=? where card=?
2024-04-15 06:05:18.198 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from patient where card=?
2024-04-15 06:05:18.198 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into patient (birthday, male, name) values (?, ?, ?)
2024-04-15 06:05:18.198 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b40de43]
2024-04-15 06:05:18.198 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : birthday
2024-04-15 06:05:18.198 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : male
2024-04-15 06:05:18.198 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-04-15 06:05:18.198 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:05:18.198 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:05:18.198 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Patient)
    - Returns
       - EntityReturnImpl(entity=entity.Patient, querySpaceUid=<gen:0>, path=entity.Patient)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Patient)
          - SQL table alias mapping - patient0_
          - alias suffix - 0_
          - suffixed key columns - {card1_2_0_}

2024-04-15 06:05:18.198 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Patient [NONE]: select patient0_.card as card1_2_0_, patient0_.birthday as birthday2_2_0_, patient0_.male as male3_2_0_, patient0_.name as name4_2_0_ from patient patient0_ where patient0_.card=?
2024-04-15 06:05:18.198 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Disease
2024-04-15 06:05:18.198 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id_disease from disease where id_disease =?
2024-04-15 06:05:18.198 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select disease_.id_disease, disease_.name as name2_0_, disease_.sign as sign3_0_ from disease disease_ where disease_.id_disease=?
2024-04-15 06:05:18.198 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into disease (name, sign, id_disease) values (?, ?, ?)
2024-04-15 06:05:18.198 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update disease set name=?, sign=? where id_disease=?
2024-04-15 06:05:18.198 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from disease where id_disease=?
2024-04-15 06:05:18.198 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into disease (name, sign) values (?, ?)
2024-04-15 06:05:18.199 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5489b1f7]
2024-04-15 06:05:18.199 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-04-15 06:05:18.199 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : sign
2024-04-15 06:05:18.199 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:05:18.199 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:05:18.199 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Disease)
    - Returns
       - EntityReturnImpl(entity=entity.Disease, querySpaceUid=<gen:0>, path=entity.Disease)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Disease)
          - SQL table alias mapping - disease0_
          - alias suffix - 0_
          - suffixed key columns - {id_disea1_0_0_}

2024-04-15 06:05:18.199 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Disease [NONE]: select disease0_.id_disease as id_disea1_0_0_, disease0_.name as name2_0_0_, disease0_.sign as sign3_0_0_ from disease disease0_ where disease0_.id_disease=?
2024-04-15 06:05:18.199 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Visit
2024-04-15 06:05:18.199 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from visit where id =?
2024-04-15 06:05:18.199 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select visit_.id, visit_.date as date2_3_, visit_.id_disease as id_disea3_3_, visit_.id_doctor as id_docto4_3_, visit_.id_patient as id_patie5_3_ from visit visit_ where visit_.id=?
2024-04-15 06:05:18.199 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into visit (date, id_disease, id_doctor, id_patient, id) values (?, ?, ?, ?, ?)
2024-04-15 06:05:18.199 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update visit set date=?, id_disease=?, id_doctor=?, id_patient=? where id=?
2024-04-15 06:05:18.199 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from visit where id=?
2024-04-15 06:05:18.199 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into visit (date, id_disease, id_doctor, id_patient) values (?, ?, ?, ?)
2024-04-15 06:05:18.199 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5995851e]
2024-04-15 06:05:18.199 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date
2024-04-15 06:05:18.199 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_disease
2024-04-15 06:05:18.199 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51bddd98]
2024-04-15 06:05:18.199 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_disease.name
2024-04-15 06:05:18.199 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_disease.sign
2024-04-15 06:05:18.199 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor
2024-04-15 06:05:18.200 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77d4ac52]
2024-04-15 06:05:18.200 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.date_in
2024-04-15 06:05:18.200 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.name
2024-04-15 06:05:18.200 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.phone
2024-04-15 06:05:18.200 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.room
2024-04-15 06:05:18.200 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.speciality
2024-04-15 06:05:18.200 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient
2024-04-15 06:05:18.200 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@161dd92a]
2024-04-15 06:05:18.200 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient.birthday
2024-04-15 06:05:18.200 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient.male
2024-04-15 06:05:18.200 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient.name
2024-04-15 06:05:18.200 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:05:18.200 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:05:18.200 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Visit)
    - Returns
       - EntityReturnImpl(entity=entity.Visit, querySpaceUid=<gen:0>, path=entity.Visit)
          - EntityAttributeFetchImpl(entity=entity.Disease, querySpaceUid=<gen:1>, path=entity.Visit.id_disease)
          - EntityAttributeFetchImpl(entity=entity.Doctor, querySpaceUid=<gen:2>, path=entity.Visit.id_doctor)
          - EntityAttributeFetchImpl(entity=entity.Patient, querySpaceUid=<gen:3>, path=entity.Visit.id_patient)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Visit)
          - SQL table alias mapping - visit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(id_disease)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=entity.Disease)
                - SQL table alias mapping - disease1_
                - alias suffix - 1_
                - suffixed key columns - {id_disea1_0_1_}
          - JOIN (JoinDefinedByMetadata(id_doctor)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=entity.Doctor)
                - SQL table alias mapping - doctor2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}
          - JOIN (JoinDefinedByMetadata(id_patient)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=entity.Patient)
                - SQL table alias mapping - patient3_
                - alias suffix - 3_
                - suffixed key columns - {card1_2_3_}

2024-04-15 06:05:18.201 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Visit [NONE]: select visit0_.id as id1_3_0_, visit0_.date as date2_3_0_, visit0_.id_disease as id_disea3_3_0_, visit0_.id_doctor as id_docto4_3_0_, visit0_.id_patient as id_patie5_3_0_, disease1_.id_disease as id_disea1_0_1_, disease1_.name as name2_0_1_, disease1_.sign as sign3_0_1_, doctor2_.id as id1_1_2_, doctor2_.date_in as date_in2_1_2_, doctor2_.name as name3_1_2_, doctor2_.phone as phone4_1_2_, doctor2_.room as room5_1_2_, doctor2_.speciality as speciali6_1_2_, patient3_.card as card1_2_3_, patient3_.birthday as birthday2_2_3_, patient3_.male as male3_2_3_, patient3_.name as name4_2_3_ from visit visit0_ left outer join disease disease1_ on visit0_.id_disease=disease1_.id_disease left outer join doctor doctor2_ on visit0_.id_doctor=doctor2_.id left outer join patient patient3_ on visit0_.id_patient=patient3_.card where visit0_.id=?
2024-04-15 06:05:18.201 [main] DEBUG org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator - No actions specified; doing nothing
2024-04-15 06:05:18.201 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2024-04-15 06:05:18.201 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-04-15 06:05:18.203 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 06:05:18.203 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 06:05:18.203 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 4 named HQL queries
2024-04-15 06:05:18.203 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: visit.getAll
2024-04-15 06:05:18.203 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2024-04-15 06:05:18.204 [main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@176555c
2024-04-15 06:05:18.204 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT v from entity.Visit v
2024-04-15 06:05:18.204 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.204 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Visit'
       |     \-[ALIAS] Node: 'v'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'v'

2024-04-15 06:05:18.204 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:05:18.205 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Visit (v) -> visit0_
2024-04-15 06:05:18.205 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : v -> visit0_.id
2024-04-15 06:05:18.205 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:05:18.205 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} visit0_.id ) ( FromClause{level=1} visit visit0_ ) )
2024-04-15 06:05:18.205 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Visit): [visit]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Visit)
    |  | originalText: v
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:05:18.205 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [visit visit0_]
2024-04-15 06:05:18.205 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:05:18.205 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (visit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'visit0_.id as id1_3_' {alias=v, className=entity.Visit, tableAlias=visit0_}
    |  \-[SQL_TOKEN] SqlFragment: 'visit0_.date as date2_3_, visit0_.id_disease as id_disea3_3_, visit0_.id_doctor as id_docto4_3_, visit0_.id_patient as id_patie5_3_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[v], fromElementByTableAlias=[visit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'visit visit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=v,role=null,tableName=visit,tableAlias=visit0_,origin=null,columns={,className=entity.Visit}}

2024-04-15 06:05:18.205 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.206 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT v from entity.Visit v
2024-04-15 06:05:18.206 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select visit0_.id as id1_3_, visit0_.date as date2_3_, visit0_.id_disease as id_disea3_3_, visit0_.id_doctor as id_docto4_3_, visit0_.id_patient as id_patie5_3_ from visit visit0_
2024-04-15 06:05:18.206 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.206 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: disease.getAll
2024-04-15 06:05:18.206 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT c from entity.Disease c
2024-04-15 06:05:18.206 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.206 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Disease'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'c'

2024-04-15 06:05:18.207 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:05:18.207 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Disease (c) -> disease0_
2024-04-15 06:05:18.207 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : c -> disease0_.id_disease
2024-04-15 06:05:18.207 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:05:18.207 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} disease0_.id_disease ) ( FromClause{level=1} disease disease0_ ) )
2024-04-15 06:05:18.207 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Disease): [disease]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Disease)
    |  | originalText: c
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:05:18.207 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [disease disease0_]
2024-04-15 06:05:18.207 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:05:18.208 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (disease)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'disease0_.id_disease as id_disea1_0_' {alias=c, className=entity.Disease, tableAlias=disease0_}
    |  \-[SQL_TOKEN] SqlFragment: 'disease0_.name as name2_0_, disease0_.sign as sign3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[disease0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'disease disease0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=disease,tableAlias=disease0_,origin=null,columns={,className=entity.Disease}}

2024-04-15 06:05:18.208 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.208 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT c from entity.Disease c
2024-04-15 06:05:18.208 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select disease0_.id_disease as id_disea1_0_, disease0_.name as name2_0_, disease0_.sign as sign3_0_ from disease disease0_
2024-04-15 06:05:18.208 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.208 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: doctor.getAll
2024-04-15 06:05:18.208 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT s from entity.Doctor s
2024-04-15 06:05:18.208 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.208 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Doctor'
       |     \-[ALIAS] Node: 's'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 's'

2024-04-15 06:05:18.208 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:05:18.209 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Doctor (s) -> doctor0_
2024-04-15 06:05:18.209 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : s -> doctor0_.id
2024-04-15 06:05:18.209 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:05:18.209 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} doctor0_.id ) ( FromClause{level=1} doctor doctor0_ ) )
2024-04-15 06:05:18.209 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Doctor): [doctor]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Doctor)
    |  | originalText: s
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:05:18.209 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [doctor doctor0_]
2024-04-15 06:05:18.209 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:05:18.209 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (doctor)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'doctor0_.id as id1_1_' {alias=s, className=entity.Doctor, tableAlias=doctor0_}
    |  \-[SQL_TOKEN] SqlFragment: 'doctor0_.date_in as date_in2_1_, doctor0_.name as name3_1_, doctor0_.phone as phone4_1_, doctor0_.room as room5_1_, doctor0_.speciality as speciali6_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[doctor0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'doctor doctor0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=doctor,tableAlias=doctor0_,origin=null,columns={,className=entity.Doctor}}

2024-04-15 06:05:18.210 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.210 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT s from entity.Doctor s
2024-04-15 06:05:18.210 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select doctor0_.id as id1_1_, doctor0_.date_in as date_in2_1_, doctor0_.name as name3_1_, doctor0_.phone as phone4_1_, doctor0_.room as room5_1_, doctor0_.speciality as speciali6_1_ from doctor doctor0_
2024-04-15 06:05:18.210 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.210 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: patient.getAll
2024-04-15 06:05:18.210 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT p from entity.Patient p
2024-04-15 06:05:18.210 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.210 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Patient'
       |     \-[ALIAS] Node: 'p'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'p'

2024-04-15 06:05:18.211 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:05:18.211 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Patient (p) -> patient0_
2024-04-15 06:05:18.211 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : p -> patient0_.card
2024-04-15 06:05:18.211 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:05:18.211 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} patient0_.card ) ( FromClause{level=1} patient patient0_ ) )
2024-04-15 06:05:18.211 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Patient): [patient]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Patient)
    |  | originalText: p
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:05:18.211 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [patient patient0_]
2024-04-15 06:05:18.211 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:05:18.212 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (patient)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'patient0_.card as card1_2_' {alias=p, className=entity.Patient, tableAlias=patient0_}
    |  \-[SQL_TOKEN] SqlFragment: 'patient0_.birthday as birthday2_2_, patient0_.male as male3_2_, patient0_.name as name4_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[patient0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'patient patient0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=patient,tableAlias=patient0_,origin=null,columns={,className=entity.Patient}}

2024-04-15 06:05:18.212 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.212 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT p from entity.Patient p
2024-04-15 06:05:18.212 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select patient0_.card as card1_2_, patient0_.birthday as birthday2_2_, patient0_.male as male3_2_, patient0_.name as name4_2_ from patient patient0_
2024-04-15 06:05:18.212 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.212 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named SQL queries
2024-04-15 06:05:18.212 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-04-15 06:05:18.212 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: 186c0402-e532-41cd-88d7-3ad96aad8da2 (<unnamed>)
2024-04-15 06:05:18.212 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2024-04-15 06:05:18.216 [main] DEBUG org.hibernate.jpa.HibernatePersistenceProvider - Located and parsed 1 persistence units; checking each
2024-04-15 06:05:18.216 [main] DEBUG org.hibernate.jpa.HibernatePersistenceProvider - Checking persistence-unit [name=TST, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [TST]
2024-04-15 06:05:18.216 [main] DEBUG org.hibernate.jpa.boot.spi.ProviderChecker - Persistence-unit [TST] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2024-04-15 06:05:18.216 [main] DEBUG org.hibernate.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: TST
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/IntellijIdea/Kem%20Rudolf/Lab2Rizhkov/target/classes
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		entity.Visit
		entity.Doctor
		entity.Disease
		entity.Patient]
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.sqlite.JDBC
		hibernate.dialect: org.hibernate.dialect.SQLiteDialect
		javax.persistence.jdbc.url: jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db
		hibernate.id.new_generator_mappings: false
		hibernate.show_sql: false
		hibernate.format_sql: true]
2024-04-15 06:05:18.216 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2024-04-15 06:05:18.216 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2024-04-15 06:05:18.216 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-04-15 06:05:18.217 [main] DEBUG org.hibernate.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2024-04-15 06:05:18.217 [main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-04-15 06:05:18.217 [main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2024-04-15 06:05:18.217 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@9635fa
2024-04-15 06:05:18.217 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@9635fa
2024-04-15 06:05:18.217 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@9635fa
2024-04-15 06:05:18.217 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1c98290c
2024-04-15 06:05:18.217 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2ce86164
2024-04-15 06:05:18.217 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@60d8c0dc
2024-04-15 06:05:18.217 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1849db1a
2024-04-15 06:05:18.217 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1849db1a
2024-04-15 06:05:18.217 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1849db1a
2024-04-15 06:05:18.217 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6865c751
2024-04-15 06:05:18.217 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6865c751
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6865c751
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3ebff828
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3ebff828
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3ebff828
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@35fe2125
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@35fe2125
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@35fe2125
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7c22d4f
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7c22d4f
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7c22d4f
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5fd62371
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5fd62371
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5fd62371
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c345c5f
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c345c5f
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6c345c5f
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@f9879ac
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@f9879ac
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4ef27d66
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4ef27d66
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3f23a3a0
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3f23a3a0
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@61861a29
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@63cd604c
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@6c6357f9
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6c6357f9
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@64bc21ac
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@64bc21ac
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@4a8a60bc
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4a8a60bc
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@15a902e7
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@15a902e7
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3c9168dc
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3c9168dc
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@293bb8a5
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@293bb8a5
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77307458
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77307458
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@209775a9
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@209775a9
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@192f2f27
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@192f2f27
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7997b197
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7997b197
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@76a82f33
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@76a82f33
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7f811d00
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7f811d00
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7f811d00
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7807ac2c
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@523424b5
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@523424b5
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@523424b5
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@754777cd
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@a486d78
2024-04-15 06:05:18.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@299266e2
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@299266e2
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@517bd097
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@517bd097
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@47289387
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@47289387
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@32fe9d0a
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@32fe9d0a
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3b9d6699
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3b9d6699
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@22c86919
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@64712be
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@64712be
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@64712be
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2fd1731c
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2fd1731c
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2fd1731c
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@24f360b2
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@48c40605
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1eba372c
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1eba372c
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1eba372c
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4b21844c
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4b21844c
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4b21844c
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@19b30c92
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4940809c
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7cc586a8
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7cc586a8
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a76b80a
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4da855dd
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4da855dd
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@3ec11999
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3ec11999
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2e77b8cf
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6e57e95e
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@7a11c4c7
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3f093abe
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3f093abe
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@64387c17
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7c369270
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@9f86dc3
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@41d16cc3
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@662e682a
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2e43c38d
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@649f25f3
2024-04-15 06:05:18.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2e62ead7
2024-04-15 06:05:18.222 [main] DEBUG org.hibernate.boot.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@718f805a] into BootstrapContext; was [null]
2024-04-15 06:05:18.222 [main] DEBUG org.hibernate.boot.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@e09f1b6] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@557b6a37]
2024-04-15 06:05:18.228 [main] DEBUG org.hibernate.boot.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2024-04-15 06:05:18.228 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2024-04-15 06:05:18.228 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-04-15 06:05:18.228 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-04-15 06:05:18.228 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-04-15 06:05:18.228 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-04-15 06:05:18.228 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-04-15 06:05:18.228 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-04-15 06:05:18.228 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-04-15 06:05:18.228 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-04-15 06:05:18.228 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2024-04-15 06:05:18.228 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-04-15 06:05:18.228 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-04-15 06:05:18.228 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2024-04-15 06:05:18.228 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-04-15 06:05:18.228 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-04-15 06:05:18.228 [main] WARN  org.hibernate.orm.connections.pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2024-04-15 06:05:18.228 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: using driver [org.sqlite.JDBC] at URL [jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db]
2024-04-15 06:05:18.229 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001001: Connection properties: {}
2024-04-15 06:05:18.229 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001003: Autocommit mode: false
2024-04-15 06:05:18.229 [main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
2024-04-15 06:05:18.229 [main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
2024-04-15 06:05:18.229 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Database ->
       name : SQLite
    version : 3.7.2
      major : 3
      minor : 0
2024-04-15 06:05:18.229 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Driver ->
       name : SQLiteJDBC
    version : native
      major : 1
      minor : 1
2024-04-15 06:05:18.229 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - JDBC version : 2.1
2024-04-15 06:05:18.230 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
2024-04-15 06:05:18.230 [main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-04-15 06:05:18.230 [main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-04-15 06:05:18.230 [main] DEBUG org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver - Unable to use Java 1.7 Connection#getSchema
2024-04-15 06:05:18.230 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl - Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.SQLiteDialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:315) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:273) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79) ~[javax.persistence-api-2.2.jar:2.2]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54) ~[javax.persistence-api-2.2.jar:2.2]
	at repository.VisitRepository.<init>(VisitRepository.java:22) ~[classes/:?]
	at Main.main(Main.java:23) ~[classes/:?]
2024-04-15 06:05:18.230 [main] DEBUG org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
2024-04-15 06:05:18.231 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2024-04-15 06:05:18.231 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-04-15 06:05:18.231 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5ccb85d6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@d88f893]
2024-04-15 06:05:18.231 [main] DEBUG org.hibernate.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-04-15 06:05:18.231 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Doctor
2024-04-15 06:05:18.231 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: doctor.getAll => SELECT s from Doctor s
2024-04-15 06:05:18.232 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:05:18.232 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Doctor
2024-04-15 06:05:18.232 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Doctor on table doctor
2024-04-15 06:05:18.232 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=id, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.232 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Doctor] is safe
2024-04-15 06:05:18.232 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Doctor
2024-04-15 06:05:18.232 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-04-15 06:05:18.232 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:id]
2024-04-15 06:05:18.232 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-04-15 06:05:18.232 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-04-15 06:05:18.232 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2024-04-15 06:05:18.232 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=date_in, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.232 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property date_in with lazy=false
2024-04-15 06:05:18.232 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:date_in]
2024-04-15 06:05:18.232 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for date_in
2024-04-15 06:05:18.232 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property date_in
2024-04-15 06:05:18.233 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.233 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-04-15 06:05:18.233 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:name]
2024-04-15 06:05:18.233 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-04-15 06:05:18.233 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-04-15 06:05:18.233 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=phone, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.233 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property phone with lazy=false
2024-04-15 06:05:18.233 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:phone]
2024-04-15 06:05:18.233 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for phone
2024-04-15 06:05:18.233 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property phone
2024-04-15 06:05:18.233 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=room, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.233 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property room with lazy=false
2024-04-15 06:05:18.233 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:room]
2024-04-15 06:05:18.233 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for room
2024-04-15 06:05:18.233 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property room
2024-04-15 06:05:18.233 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=speciality, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.233 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property speciality with lazy=false
2024-04-15 06:05:18.233 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:speciality]
2024-04-15 06:05:18.233 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for speciality
2024-04-15 06:05:18.233 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property speciality
2024-04-15 06:05:18.233 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Patient
2024-04-15 06:05:18.233 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: patient.getAll => SELECT p from Patient p
2024-04-15 06:05:18.233 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:05:18.233 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Patient
2024-04-15 06:05:18.233 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Patient on table patient
2024-04-15 06:05:18.234 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=card, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.234 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Patient] is safe
2024-04-15 06:05:18.234 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Patient
2024-04-15 06:05:18.234 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property card with lazy=false
2024-04-15 06:05:18.234 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:card]
2024-04-15 06:05:18.234 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for card
2024-04-15 06:05:18.234 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property card
2024-04-15 06:05:18.234 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(card)]), card, identity, , ...)
2024-04-15 06:05:18.234 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=birthday, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.234 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property birthday with lazy=false
2024-04-15 06:05:18.234 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:birthday]
2024-04-15 06:05:18.234 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for birthday
2024-04-15 06:05:18.234 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property birthday
2024-04-15 06:05:18.234 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=male, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.234 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property male with lazy=false
2024-04-15 06:05:18.234 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:male]
2024-04-15 06:05:18.234 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for male
2024-04-15 06:05:18.234 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property male
2024-04-15 06:05:18.234 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.234 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-04-15 06:05:18.234 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:name]
2024-04-15 06:05:18.234 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-04-15 06:05:18.234 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-04-15 06:05:18.235 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Disease
2024-04-15 06:05:18.235 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: disease.getAll => SELECT c from Disease c
2024-04-15 06:05:18.235 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:05:18.235 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Disease
2024-04-15 06:05:18.235 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Disease on table disease
2024-04-15 06:05:18.236 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(disease), mappingColumn=id_disease, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.236 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Disease] is safe
2024-04-15 06:05:18.236 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Disease
2024-04-15 06:05:18.236 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id_disease with lazy=false
2024-04-15 06:05:18.236 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Disease:id_disease]
2024-04-15 06:05:18.236 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id_disease
2024-04-15 06:05:18.236 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_disease
2024-04-15 06:05:18.236 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_disease)]), id_disease, identity, , ...)
2024-04-15 06:05:18.236 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(disease), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.236 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-04-15 06:05:18.236 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Disease:name]
2024-04-15 06:05:18.236 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-04-15 06:05:18.236 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-04-15 06:05:18.236 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(disease), mappingColumn=sign, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.236 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property sign with lazy=false
2024-04-15 06:05:18.236 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Disease:sign]
2024-04-15 06:05:18.236 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for sign
2024-04-15 06:05:18.236 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property sign
2024-04-15 06:05:18.237 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Visit
2024-04-15 06:05:18.237 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: visit.getAll => SELECT v from Visit v
2024-04-15 06:05:18.237 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:05:18.237 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Visit
2024-04-15 06:05:18.237 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Visit on table visit
2024-04-15 06:05:18.237 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.237 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Visit] is safe
2024-04-15 06:05:18.237 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Visit
2024-04-15 06:05:18.237 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-04-15 06:05:18.237 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Visit:id]
2024-04-15 06:05:18.237 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-04-15 06:05:18.237 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-04-15 06:05:18.237 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2024-04-15 06:05:18.237 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=date, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.237 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property date with lazy=false
2024-04-15 06:05:18.237 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Visit:date]
2024-04-15 06:05:18.237 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for date
2024-04-15 06:05:18.237 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property date
2024-04-15 06:05:18.237 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='id_disease', referencedColumn='', mappedBy=''}
2024-04-15 06:05:18.238 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id_disease, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.238 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_disease
2024-04-15 06:05:18.238 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='id_doctor', referencedColumn='', mappedBy=''}
2024-04-15 06:05:18.238 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id_doctor, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.238 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_doctor
2024-04-15 06:05:18.238 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='id_patient', referencedColumn='', mappedBy=''}
2024-04-15 06:05:18.238 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id_patient, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:18.238 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_patient
2024-04-15 06:05:18.238 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-04-15 06:05:18.238 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for date_in
2024-04-15 06:05:18.238 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-04-15 06:05:18.238 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for phone
2024-04-15 06:05:18.238 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for room
2024-04-15 06:05:18.240 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for speciality
2024-04-15 06:05:18.241 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for card
2024-04-15 06:05:18.241 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for birthday
2024-04-15 06:05:18.241 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for male
2024-04-15 06:05:18.241 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-04-15 06:05:18.241 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id_disease
2024-04-15 06:05:18.241 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-04-15 06:05:18.241 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for sign
2024-04-15 06:05:18.241 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-04-15 06:05:18.241 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for date
2024-04-15 06:05:18.241 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [doctor]
2024-04-15 06:05:18.241 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [card] to be non-null as it is part of the primary key for table [patient]
2024-04-15 06:05:18.241 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_disease] to be non-null as it is part of the primary key for table [disease]
2024-04-15 06:05:18.241 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [visit]
2024-04-15 06:05:18.241 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Disease
2024-04-15 06:05:18.241 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Doctor
2024-04-15 06:05:18.241 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Patient
2024-04-15 06:05:18.242 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Disease
2024-04-15 06:05:18.242 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Doctor
2024-04-15 06:05:18.242 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Patient
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Building session factory
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - SessionFactory name : null
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - Automatic flush during beforeCompletion(): enabled
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - Automatic session close at end of transaction: disabled
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - Statistics: disabled
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - Deleted entity synthetic identifier rollback: disabled
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - Default entity-mode: pojo
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - Allow initialization of lazy state outside session : disabled
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - Using BatchFetchStyle : LEGACY
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - Default batch fetch size: -1
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - Maximum outer join fetch depth: null
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - Default null ordering: NONE
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - Order SQL updates by primary key: disabled
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - Order SQL inserts for batching: disabled
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - multi-tenancy strategy : NONE
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - JTA Track by Thread: enabled
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - Query language substitutions: {}
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - Named query checking : enabled
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache: disabled
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - Second-level query cache: disabled
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - Second-level query cache factory: null
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache region prefix: null
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - Optimize second-level cache for minimal puts: disabled
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - Structured second-level cache entries: disabled
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache direct-reference entries: disabled
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - Automatic eviction of collection cache: disabled
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - JDBC batch size: 1
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - JDBC batch updates for versioned data: enabled
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - Scrollable result sets: disabled
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - Wrap result sets: disabled
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - JDBC3 getGeneratedKeys(): disabled
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - JDBC result set fetch size: null
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - Connection release mode: AFTER_TRANSACTION
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - Generate SQL with comments: disabled
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - query : disabled
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - closed-handling : disabled
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - lists : disabled
2024-04-15 06:05:18.243 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - transactions : disabled
2024-04-15 06:05:18.244 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-04-15 06:05:18.244 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-04-15 06:05:18.244 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2024-04-15 06:05:18.244 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {hibernate.format_sql=true, hibernate.id.new_generator_mappings=false, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, java.class.path=D:\IntellijIdea\Kem Rudolf\Lab2Rizhkov\target\classes;C:\Users\ПК\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\ПК\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\ПК\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\ПК\.m2\repository\net\bytebuddy\byte-buddy\1.12.7\byte-buddy-1.12.7.jar;C:\Users\ПК\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ПК\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\ПК\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\ПК\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\ПК\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\ПК\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\ПК\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\ПК\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\ПК\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\ПК\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\ПК\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\ПК\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\ПК\.m2\repository\org\xerial\sqlite-jdbc\3.7.2\sqlite-jdbc-3.7.2.jar;C:\Users\ПК\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\ПК\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.2\log4j-core-2.17.2.jar;C:\Users\ПК\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Yekaterinburg, javax.persistence.jdbc.url=jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Users\ПК\.jdks\openjdk-19.0.2\bin, sun.java.command=Main, jdk.debug=release, jakarta.persistence.jdbc.driver=org.sqlite.JDBC, sun.cpu.endian=little, user.home=C:\Users\ПК, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\ПК\.jdks\openjdk-19.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=TST, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=org.sqlite.JDBC, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.2+7-44, user.name=ПК, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TST, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=org.sqlite.JDBC, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\90C5~1\AppData\Local\Temp\, java.version=19.0.2, user.dir=D:\IntellijIdea\Kem Rudolf\Lab2Rizhkov, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@7bc58891, native.encoding=Cp1251, java.library.path=C:\Users\ПК\.jdks\openjdk-19.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Python310;C:\Program Files\Python310\Scripts;D:\nodejs\;C:\php7;C:\Program Files (x86)\dotnet\;C:\Program Files\MySQL\MySQL Server 8.1\bin;c:\windows\system32\OpenSSH\ssh.exe;C:\sqlite;C:\Users\ПК\AppData\Local\Microsoft\WindowsApps;D:\WebStorm 2022.1.4\bin;;C:\Program Files (x86)\OpenVPN\bin;C:\Program Files\Python310\Scripts\;C:\Program Files\Python310\;C:\Users\ПК\AppData\Roaming\npm;C:\php7;C:\Program Files\MySQL\MySQL Server 8.1\bin;c:\windows\system32\OpenSSH\;C:\sqlite;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.2+7-44, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=63.0}
2024-04-15 06:05:18.245 [main] DEBUG org.hibernate.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled
2024-04-15 06:05:18.245 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
2024-04-15 06:05:18.245 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5ccb85d6] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6411504a]
2024-04-15 06:05:18.245 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Doctor] is safe
2024-04-15 06:05:18.245 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Doctor
2024-04-15 06:05:18.253 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Patient] is safe
2024-04-15 06:05:18.253 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Patient
2024-04-15 06:05:18.259 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Disease] is safe
2024-04-15 06:05:18.259 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Disease
2024-04-15 06:05:18.264 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:18.264 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:18.264 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:18.264 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:18.264 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:18.264 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:18.264 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Visit] is safe
2024-04-15 06:05:18.264 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Visit
2024-04-15 06:05:18.269 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:18.269 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:18.269 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:18.269 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:18.269 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:18.269 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:18.269 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Doctor
2024-04-15 06:05:18.269 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from doctor where id =?
2024-04-15 06:05:18.269 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select doctor_.id, doctor_.date_in as date_in2_1_, doctor_.name as name3_1_, doctor_.phone as phone4_1_, doctor_.room as room5_1_, doctor_.speciality as speciali6_1_ from doctor doctor_ where doctor_.id=?
2024-04-15 06:05:18.270 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into doctor (date_in, name, phone, room, speciality, id) values (?, ?, ?, ?, ?, ?)
2024-04-15 06:05:18.270 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update doctor set date_in=?, name=?, phone=?, room=?, speciality=? where id=?
2024-04-15 06:05:18.270 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from doctor where id=?
2024-04-15 06:05:18.270 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into doctor (date_in, name, phone, room, speciality) values (?, ?, ?, ?, ?)
2024-04-15 06:05:18.270 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fd7a37]
2024-04-15 06:05:18.270 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date_in
2024-04-15 06:05:18.270 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-04-15 06:05:18.270 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : phone
2024-04-15 06:05:18.270 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : room
2024-04-15 06:05:18.270 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : speciality
2024-04-15 06:05:18.270 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:05:18.270 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:05:18.270 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Doctor)
    - Returns
       - EntityReturnImpl(entity=entity.Doctor, querySpaceUid=<gen:0>, path=entity.Doctor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Doctor)
          - SQL table alias mapping - doctor0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2024-04-15 06:05:18.270 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Doctor [NONE]: select doctor0_.id as id1_1_0_, doctor0_.date_in as date_in2_1_0_, doctor0_.name as name3_1_0_, doctor0_.phone as phone4_1_0_, doctor0_.room as room5_1_0_, doctor0_.speciality as speciali6_1_0_ from doctor doctor0_ where doctor0_.id=?
2024-04-15 06:05:18.271 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Patient
2024-04-15 06:05:18.271 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select card from patient where card =?
2024-04-15 06:05:18.271 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select patient_.card, patient_.birthday as birthday2_2_, patient_.male as male3_2_, patient_.name as name4_2_ from patient patient_ where patient_.card=?
2024-04-15 06:05:18.271 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into patient (birthday, male, name, card) values (?, ?, ?, ?)
2024-04-15 06:05:18.271 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update patient set birthday=?, male=?, name=? where card=?
2024-04-15 06:05:18.271 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from patient where card=?
2024-04-15 06:05:18.271 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into patient (birthday, male, name) values (?, ?, ?)
2024-04-15 06:05:18.271 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58a84a12]
2024-04-15 06:05:18.271 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : birthday
2024-04-15 06:05:18.271 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : male
2024-04-15 06:05:18.271 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-04-15 06:05:18.271 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:05:18.271 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:05:18.272 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Patient)
    - Returns
       - EntityReturnImpl(entity=entity.Patient, querySpaceUid=<gen:0>, path=entity.Patient)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Patient)
          - SQL table alias mapping - patient0_
          - alias suffix - 0_
          - suffixed key columns - {card1_2_0_}

2024-04-15 06:05:18.272 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Patient [NONE]: select patient0_.card as card1_2_0_, patient0_.birthday as birthday2_2_0_, patient0_.male as male3_2_0_, patient0_.name as name4_2_0_ from patient patient0_ where patient0_.card=?
2024-04-15 06:05:18.272 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Disease
2024-04-15 06:05:18.272 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id_disease from disease where id_disease =?
2024-04-15 06:05:18.272 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select disease_.id_disease, disease_.name as name2_0_, disease_.sign as sign3_0_ from disease disease_ where disease_.id_disease=?
2024-04-15 06:05:18.272 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into disease (name, sign, id_disease) values (?, ?, ?)
2024-04-15 06:05:18.272 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update disease set name=?, sign=? where id_disease=?
2024-04-15 06:05:18.272 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from disease where id_disease=?
2024-04-15 06:05:18.272 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into disease (name, sign) values (?, ?)
2024-04-15 06:05:18.272 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6436e181]
2024-04-15 06:05:18.272 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-04-15 06:05:18.272 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : sign
2024-04-15 06:05:18.272 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:05:18.272 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:05:18.272 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Disease)
    - Returns
       - EntityReturnImpl(entity=entity.Disease, querySpaceUid=<gen:0>, path=entity.Disease)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Disease)
          - SQL table alias mapping - disease0_
          - alias suffix - 0_
          - suffixed key columns - {id_disea1_0_0_}

2024-04-15 06:05:18.272 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Disease [NONE]: select disease0_.id_disease as id_disea1_0_0_, disease0_.name as name2_0_0_, disease0_.sign as sign3_0_0_ from disease disease0_ where disease0_.id_disease=?
2024-04-15 06:05:18.272 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Visit
2024-04-15 06:05:18.272 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from visit where id =?
2024-04-15 06:05:18.272 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select visit_.id, visit_.date as date2_3_, visit_.id_disease as id_disea3_3_, visit_.id_doctor as id_docto4_3_, visit_.id_patient as id_patie5_3_ from visit visit_ where visit_.id=?
2024-04-15 06:05:18.272 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into visit (date, id_disease, id_doctor, id_patient, id) values (?, ?, ?, ?, ?)
2024-04-15 06:05:18.272 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update visit set date=?, id_disease=?, id_doctor=?, id_patient=? where id=?
2024-04-15 06:05:18.273 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from visit where id=?
2024-04-15 06:05:18.273 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into visit (date, id_disease, id_doctor, id_patient) values (?, ?, ?, ?)
2024-04-15 06:05:18.273 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b649efa]
2024-04-15 06:05:18.273 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date
2024-04-15 06:05:18.273 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_disease
2024-04-15 06:05:18.273 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36068727]
2024-04-15 06:05:18.273 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_disease.name
2024-04-15 06:05:18.273 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_disease.sign
2024-04-15 06:05:18.273 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor
2024-04-15 06:05:18.273 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d88e6b9]
2024-04-15 06:05:18.273 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.date_in
2024-04-15 06:05:18.273 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.name
2024-04-15 06:05:18.273 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.phone
2024-04-15 06:05:18.273 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.room
2024-04-15 06:05:18.273 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.speciality
2024-04-15 06:05:18.273 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient
2024-04-15 06:05:18.273 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@208205ed]
2024-04-15 06:05:18.273 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient.birthday
2024-04-15 06:05:18.273 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient.male
2024-04-15 06:05:18.273 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient.name
2024-04-15 06:05:18.273 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:05:18.273 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:05:18.274 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Visit)
    - Returns
       - EntityReturnImpl(entity=entity.Visit, querySpaceUid=<gen:0>, path=entity.Visit)
          - EntityAttributeFetchImpl(entity=entity.Disease, querySpaceUid=<gen:1>, path=entity.Visit.id_disease)
          - EntityAttributeFetchImpl(entity=entity.Doctor, querySpaceUid=<gen:2>, path=entity.Visit.id_doctor)
          - EntityAttributeFetchImpl(entity=entity.Patient, querySpaceUid=<gen:3>, path=entity.Visit.id_patient)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Visit)
          - SQL table alias mapping - visit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(id_disease)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=entity.Disease)
                - SQL table alias mapping - disease1_
                - alias suffix - 1_
                - suffixed key columns - {id_disea1_0_1_}
          - JOIN (JoinDefinedByMetadata(id_doctor)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=entity.Doctor)
                - SQL table alias mapping - doctor2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}
          - JOIN (JoinDefinedByMetadata(id_patient)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=entity.Patient)
                - SQL table alias mapping - patient3_
                - alias suffix - 3_
                - suffixed key columns - {card1_2_3_}

2024-04-15 06:05:18.274 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Visit [NONE]: select visit0_.id as id1_3_0_, visit0_.date as date2_3_0_, visit0_.id_disease as id_disea3_3_0_, visit0_.id_doctor as id_docto4_3_0_, visit0_.id_patient as id_patie5_3_0_, disease1_.id_disease as id_disea1_0_1_, disease1_.name as name2_0_1_, disease1_.sign as sign3_0_1_, doctor2_.id as id1_1_2_, doctor2_.date_in as date_in2_1_2_, doctor2_.name as name3_1_2_, doctor2_.phone as phone4_1_2_, doctor2_.room as room5_1_2_, doctor2_.speciality as speciali6_1_2_, patient3_.card as card1_2_3_, patient3_.birthday as birthday2_2_3_, patient3_.male as male3_2_3_, patient3_.name as name4_2_3_ from visit visit0_ left outer join disease disease1_ on visit0_.id_disease=disease1_.id_disease left outer join doctor doctor2_ on visit0_.id_doctor=doctor2_.id left outer join patient patient3_ on visit0_.id_patient=patient3_.card where visit0_.id=?
2024-04-15 06:05:18.275 [main] DEBUG org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator - No actions specified; doing nothing
2024-04-15 06:05:18.275 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2024-04-15 06:05:18.275 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-04-15 06:05:18.276 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 06:05:18.276 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 06:05:18.276 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 4 named HQL queries
2024-04-15 06:05:18.276 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: visit.getAll
2024-04-15 06:05:18.276 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2024-04-15 06:05:18.276 [main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@176555c
2024-04-15 06:05:18.276 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT v from entity.Visit v
2024-04-15 06:05:18.276 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.277 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Visit'
       |     \-[ALIAS] Node: 'v'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'v'

2024-04-15 06:05:18.277 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:05:18.277 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Visit (v) -> visit0_
2024-04-15 06:05:18.277 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : v -> visit0_.id
2024-04-15 06:05:18.277 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:05:18.277 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} visit0_.id ) ( FromClause{level=1} visit visit0_ ) )
2024-04-15 06:05:18.277 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Visit): [visit]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Visit)
    |  | originalText: v
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:05:18.277 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [visit visit0_]
2024-04-15 06:05:18.277 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:05:18.277 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (visit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'visit0_.id as id1_3_' {alias=v, className=entity.Visit, tableAlias=visit0_}
    |  \-[SQL_TOKEN] SqlFragment: 'visit0_.date as date2_3_, visit0_.id_disease as id_disea3_3_, visit0_.id_doctor as id_docto4_3_, visit0_.id_patient as id_patie5_3_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[v], fromElementByTableAlias=[visit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'visit visit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=v,role=null,tableName=visit,tableAlias=visit0_,origin=null,columns={,className=entity.Visit}}

2024-04-15 06:05:18.278 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.278 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT v from entity.Visit v
2024-04-15 06:05:18.278 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select visit0_.id as id1_3_, visit0_.date as date2_3_, visit0_.id_disease as id_disea3_3_, visit0_.id_doctor as id_docto4_3_, visit0_.id_patient as id_patie5_3_ from visit visit0_
2024-04-15 06:05:18.278 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.278 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: disease.getAll
2024-04-15 06:05:18.278 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT c from entity.Disease c
2024-04-15 06:05:18.278 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.278 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Disease'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'c'

2024-04-15 06:05:18.278 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:05:18.278 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Disease (c) -> disease0_
2024-04-15 06:05:18.278 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : c -> disease0_.id_disease
2024-04-15 06:05:18.279 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:05:18.279 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} disease0_.id_disease ) ( FromClause{level=1} disease disease0_ ) )
2024-04-15 06:05:18.279 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Disease): [disease]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Disease)
    |  | originalText: c
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:05:18.279 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [disease disease0_]
2024-04-15 06:05:18.279 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:05:18.279 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (disease)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'disease0_.id_disease as id_disea1_0_' {alias=c, className=entity.Disease, tableAlias=disease0_}
    |  \-[SQL_TOKEN] SqlFragment: 'disease0_.name as name2_0_, disease0_.sign as sign3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[disease0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'disease disease0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=disease,tableAlias=disease0_,origin=null,columns={,className=entity.Disease}}

2024-04-15 06:05:18.279 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.279 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT c from entity.Disease c
2024-04-15 06:05:18.279 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select disease0_.id_disease as id_disea1_0_, disease0_.name as name2_0_, disease0_.sign as sign3_0_ from disease disease0_
2024-04-15 06:05:18.279 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.279 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: doctor.getAll
2024-04-15 06:05:18.279 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT s from entity.Doctor s
2024-04-15 06:05:18.280 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.280 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Doctor'
       |     \-[ALIAS] Node: 's'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 's'

2024-04-15 06:05:18.280 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:05:18.280 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Doctor (s) -> doctor0_
2024-04-15 06:05:18.280 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : s -> doctor0_.id
2024-04-15 06:05:18.280 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:05:18.280 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} doctor0_.id ) ( FromClause{level=1} doctor doctor0_ ) )
2024-04-15 06:05:18.281 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Doctor): [doctor]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Doctor)
    |  | originalText: s
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:05:18.281 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [doctor doctor0_]
2024-04-15 06:05:18.281 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:05:18.281 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (doctor)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'doctor0_.id as id1_1_' {alias=s, className=entity.Doctor, tableAlias=doctor0_}
    |  \-[SQL_TOKEN] SqlFragment: 'doctor0_.date_in as date_in2_1_, doctor0_.name as name3_1_, doctor0_.phone as phone4_1_, doctor0_.room as room5_1_, doctor0_.speciality as speciali6_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[doctor0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'doctor doctor0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=doctor,tableAlias=doctor0_,origin=null,columns={,className=entity.Doctor}}

2024-04-15 06:05:18.281 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.281 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT s from entity.Doctor s
2024-04-15 06:05:18.281 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select doctor0_.id as id1_1_, doctor0_.date_in as date_in2_1_, doctor0_.name as name3_1_, doctor0_.phone as phone4_1_, doctor0_.room as room5_1_, doctor0_.speciality as speciali6_1_ from doctor doctor0_
2024-04-15 06:05:18.281 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.281 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: patient.getAll
2024-04-15 06:05:18.281 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT p from entity.Patient p
2024-04-15 06:05:18.281 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.282 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Patient'
       |     \-[ALIAS] Node: 'p'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'p'

2024-04-15 06:05:18.282 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:05:18.282 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Patient (p) -> patient0_
2024-04-15 06:05:18.282 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : p -> patient0_.card
2024-04-15 06:05:18.282 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:05:18.282 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} patient0_.card ) ( FromClause{level=1} patient patient0_ ) )
2024-04-15 06:05:18.282 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Patient): [patient]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Patient)
    |  | originalText: p
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:05:18.282 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [patient patient0_]
2024-04-15 06:05:18.282 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:05:18.283 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (patient)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'patient0_.card as card1_2_' {alias=p, className=entity.Patient, tableAlias=patient0_}
    |  \-[SQL_TOKEN] SqlFragment: 'patient0_.birthday as birthday2_2_, patient0_.male as male3_2_, patient0_.name as name4_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[patient0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'patient patient0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=patient,tableAlias=patient0_,origin=null,columns={,className=entity.Patient}}

2024-04-15 06:05:18.283 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.283 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT p from entity.Patient p
2024-04-15 06:05:18.283 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select patient0_.card as card1_2_, patient0_.birthday as birthday2_2_, patient0_.male as male3_2_, patient0_.name as name4_2_ from patient patient0_
2024-04-15 06:05:18.283 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.283 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named SQL queries
2024-04-15 06:05:18.283 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-04-15 06:05:18.283 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: 50994974-d602-4299-9a45-cd324c8ce8c4 (<unnamed>)
2024-04-15 06:05:18.283 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2024-04-15 06:05:18.289 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT p FROM entity.Patient p
2024-04-15 06:05:18.290 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.290 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Patient'
       |     \-[ALIAS] Node: 'p'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'p'

2024-04-15 06:05:18.290 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:05:18.290 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Patient (p) -> patient0_
2024-04-15 06:05:18.290 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : p -> patient0_.card
2024-04-15 06:05:18.290 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:05:18.291 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} patient0_.card ) ( FromClause{level=1} patient patient0_ ) )
2024-04-15 06:05:18.291 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Patient): [patient]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Patient)
    |  | originalText: p
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:05:18.291 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [patient patient0_]
2024-04-15 06:05:18.291 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:05:18.292 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (patient)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'patient0_.card as card1_2_' {alias=p, className=entity.Patient, tableAlias=patient0_}
    |  \-[SQL_TOKEN] SqlFragment: 'patient0_.birthday as birthday2_2_, patient0_.male as male3_2_, patient0_.name as name4_2_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[patient0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'patient patient0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=patient,tableAlias=patient0_,origin=null,columns={,className=entity.Patient}}

2024-04-15 06:05:18.292 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.292 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT p FROM entity.Patient p
2024-04-15 06:05:18.292 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select patient0_.card as card1_2_, patient0_.birthday as birthday2_2_, patient0_.male as male3_2_, patient0_.name as name4_2_ from patient patient0_
2024-04-15 06:05:18.292 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:18.298 [main] DEBUG org.hibernate.SQL - 
    select
        patient0_.card as card1_2_,
        patient0_.birthday as birthday2_2_,
        patient0_.male as male3_2_,
        patient0_.name as name4_2_ 
    from
        patient patient0_
2024-04-15 06:05:18.302 [main] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-04-15 06:05:18.304 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[entity.Patient#1]
2024-04-15 06:05:18.309 [main] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-04-15 06:05:18.309 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[entity.Patient#2]
2024-04-15 06:05:18.310 [main] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-04-15 06:05:18.310 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[entity.Patient#3]
2024-04-15 06:05:18.310 [main] DEBUG org.hibernate.loader.Loader - Result set row: 3
2024-04-15 06:05:18.310 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[entity.Patient#4]
2024-04-15 06:05:18.312 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [entity.Patient#1]
2024-04-15 06:05:18.312 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `birthday` : value = 1980-05-10
2024-04-15 06:05:18.313 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`birthday`)  - enhanced for lazy-loading? - false
2024-04-15 06:05:18.313 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `male` : value = true
2024-04-15 06:05:18.313 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`male`)  - enhanced for lazy-loading? - false
2024-04-15 06:05:18.313 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Иванов Иван Иванович
2024-04-15 06:05:18.313 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-04-15 06:05:18.315 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [entity.Patient#1]
2024-04-15 06:05:18.315 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [entity.Patient#2]
2024-04-15 06:05:18.315 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `birthday` : value = 1995-12-25
2024-04-15 06:05:18.315 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`birthday`)  - enhanced for lazy-loading? - false
2024-04-15 06:05:18.315 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `male` : value = false
2024-04-15 06:05:18.315 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`male`)  - enhanced for lazy-loading? - false
2024-04-15 06:05:18.315 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Петрова Анна Сергеевна
2024-04-15 06:05:18.315 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-04-15 06:05:18.315 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [entity.Patient#2]
2024-04-15 06:05:18.315 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [entity.Patient#3]
2024-04-15 06:05:18.315 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `birthday` : value = 1976-09-03
2024-04-15 06:05:18.315 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`birthday`)  - enhanced for lazy-loading? - false
2024-04-15 06:05:18.315 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `male` : value = true
2024-04-15 06:05:18.315 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`male`)  - enhanced for lazy-loading? - false
2024-04-15 06:05:18.315 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Сидоров Петр Александрович
2024-04-15 06:05:18.315 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-04-15 06:05:18.315 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [entity.Patient#3]
2024-04-15 06:05:18.315 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [entity.Patient#4]
2024-04-15 06:05:18.315 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `birthday` : value = 1980-04-10
2024-04-15 06:05:18.315 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`birthday`)  - enhanced for lazy-loading? - false
2024-04-15 06:05:18.315 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `male` : value = true
2024-04-15 06:05:18.315 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`male`)  - enhanced for lazy-loading? - false
2024-04-15 06:05:18.315 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Петров Иван Петрович
2024-04-15 06:05:18.315 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-04-15 06:05:18.315 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [entity.Patient#4]
2024-04-15 06:05:18.320 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-04-15 06:05:18.321 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-04-15 06:05:18.321 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
2024-04-15 06:05:18.322 [main] DEBUG org.hibernate.event.internal.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2024-04-15 06:05:18.333 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
2024-04-15 06:05:18.333 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
2024-04-15 06:05:18.334 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
2024-04-15 06:05:18.338 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2024-04-15 06:05:18.338 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-04-15 06:05:18.339 [main] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
2024-04-15 06:05:18.340 [main] DEBUG org.hibernate.internal.util.EntityPrinter - entity.Patient{birthday=1980-05-10, name=Иванов Иван Иванович, card=1, male=true}
2024-04-15 06:05:18.340 [main] DEBUG org.hibernate.internal.util.EntityPrinter - entity.Patient{birthday=1995-12-25, name=Петрова Анна Сергеевна, card=2, male=false}
2024-04-15 06:05:18.340 [main] DEBUG org.hibernate.internal.util.EntityPrinter - entity.Patient{birthday=1976-09-03, name=Сидоров Петр Александрович, card=3, male=true}
2024-04-15 06:05:18.340 [main] DEBUG org.hibernate.internal.util.EntityPrinter - entity.Patient{birthday=1980-04-10, name=Петров Иван Петрович, card=4, male=true}
2024-04-15 06:05:18.341 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-04-15 06:05:18.341 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-04-15 06:05:18.342 [main] INFO  repository.PatientRepository - Successful
2024-04-15 06:05:52.521 [main] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-04-15 06:05:52.600 [main] DEBUG org.hibernate.jpa.HibernatePersistenceProvider - Located and parsed 1 persistence units; checking each
2024-04-15 06:05:52.602 [main] DEBUG org.hibernate.jpa.HibernatePersistenceProvider - Checking persistence-unit [name=TST, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [TST]
2024-04-15 06:05:52.602 [main] DEBUG org.hibernate.jpa.boot.spi.ProviderChecker - Persistence-unit [TST] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2024-04-15 06:05:52.607 [main] DEBUG org.hibernate.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: TST
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/IntellijIdea/Kem%20Rudolf/Lab2Rizhkov/target/classes
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		entity.Visit
		entity.Doctor
		entity.Disease
		entity.Patient]
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.sqlite.JDBC
		hibernate.dialect: org.hibernate.dialect.SQLiteDialect
		javax.persistence.jdbc.url: jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db
		hibernate.id.new_generator_mappings: false
		hibernate.show_sql: false
		hibernate.format_sql: true]
2024-04-15 06:05:52.614 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2024-04-15 06:05:52.615 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2024-04-15 06:05:52.618 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-04-15 06:05:52.652 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.5.Final
2024-04-15 06:05:52.654 [main] DEBUG org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2024-04-15 06:05:52.798 [main] DEBUG org.hibernate.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2024-04-15 06:05:52.815 [main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-04-15 06:05:52.817 [main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2024-04-15 06:05:52.840 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-04-15 06:05:52.906 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@53ab0286
2024-04-15 06:05:52.906 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@53ab0286
2024-04-15 06:05:52.906 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@53ab0286
2024-04-15 06:05:52.906 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@172ca72b
2024-04-15 06:05:52.907 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5e8f9e2d
2024-04-15 06:05:52.907 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@4204541c
2024-04-15 06:05:52.908 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@69c79f09
2024-04-15 06:05:52.908 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@69c79f09
2024-04-15 06:05:52.908 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@69c79f09
2024-04-15 06:05:52.909 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@62679465
2024-04-15 06:05:52.909 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@62679465
2024-04-15 06:05:52.909 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@62679465
2024-04-15 06:05:52.910 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2552f2cb
2024-04-15 06:05:52.910 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2552f2cb
2024-04-15 06:05:52.910 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2552f2cb
2024-04-15 06:05:52.911 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@94f6bfb
2024-04-15 06:05:52.911 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@94f6bfb
2024-04-15 06:05:52.911 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@94f6bfb
2024-04-15 06:05:52.912 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5f59185e
2024-04-15 06:05:52.912 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5f59185e
2024-04-15 06:05:52.912 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5f59185e
2024-04-15 06:05:52.913 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@28a0fd6c
2024-04-15 06:05:52.913 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@28a0fd6c
2024-04-15 06:05:52.913 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@28a0fd6c
2024-04-15 06:05:52.914 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6b5966e1
2024-04-15 06:05:52.914 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6b5966e1
2024-04-15 06:05:52.914 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6b5966e1
2024-04-15 06:05:52.915 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@37f21974
2024-04-15 06:05:52.915 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@37f21974
2024-04-15 06:05:52.916 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@362a019c
2024-04-15 06:05:52.916 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@362a019c
2024-04-15 06:05:52.917 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5ab14cb9
2024-04-15 06:05:52.917 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5ab14cb9
2024-04-15 06:05:52.917 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@31024624
2024-04-15 06:05:52.918 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@40dd3977
2024-04-15 06:05:52.919 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@591e58fa
2024-04-15 06:05:52.919 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@591e58fa
2024-04-15 06:05:52.919 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@493dfb8e
2024-04-15 06:05:52.920 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@493dfb8e
2024-04-15 06:05:52.922 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@361c294e
2024-04-15 06:05:52.922 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@361c294e
2024-04-15 06:05:52.923 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7876d598
2024-04-15 06:05:52.923 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7876d598
2024-04-15 06:05:52.924 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@332a7fce
2024-04-15 06:05:52.924 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@332a7fce
2024-04-15 06:05:52.925 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2416a51
2024-04-15 06:05:52.925 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2416a51
2024-04-15 06:05:52.926 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1fc0053e
2024-04-15 06:05:52.926 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1fc0053e
2024-04-15 06:05:52.927 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@18e7143f
2024-04-15 06:05:52.927 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@18e7143f
2024-04-15 06:05:52.928 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@8a589a2
2024-04-15 06:05:52.928 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@8a589a2
2024-04-15 06:05:52.929 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@11dee337
2024-04-15 06:05:52.929 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@11dee337
2024-04-15 06:05:52.930 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6bab2585
2024-04-15 06:05:52.930 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6bab2585
2024-04-15 06:05:52.931 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@62923ee6
2024-04-15 06:05:52.931 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@62923ee6
2024-04-15 06:05:52.931 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@62923ee6
2024-04-15 06:05:52.933 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@b91d8c4
2024-04-15 06:05:52.933 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2baa8d82
2024-04-15 06:05:52.934 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2baa8d82
2024-04-15 06:05:52.934 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2baa8d82
2024-04-15 06:05:52.934 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2b52c0d6
2024-04-15 06:05:52.935 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@cdc3aae
2024-04-15 06:05:52.935 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5471388b
2024-04-15 06:05:52.935 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5471388b
2024-04-15 06:05:52.936 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@142eef62
2024-04-15 06:05:52.936 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@142eef62
2024-04-15 06:05:52.937 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@12cd9150
2024-04-15 06:05:52.937 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12cd9150
2024-04-15 06:05:52.938 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@c9413d8
2024-04-15 06:05:52.938 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@c9413d8
2024-04-15 06:05:52.939 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7caa550
2024-04-15 06:05:52.939 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7caa550
2024-04-15 06:05:52.939 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@70fab835
2024-04-15 06:05:52.940 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@53499d85
2024-04-15 06:05:52.940 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@53499d85
2024-04-15 06:05:52.941 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@53499d85
2024-04-15 06:05:52.941 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5ae76500
2024-04-15 06:05:52.942 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5ae76500
2024-04-15 06:05:52.942 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5ae76500
2024-04-15 06:05:52.943 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@60cf80e7
2024-04-15 06:05:52.943 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@54107f42
2024-04-15 06:05:52.944 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@21ec5d87
2024-04-15 06:05:52.944 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@21ec5d87
2024-04-15 06:05:52.944 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@21ec5d87
2024-04-15 06:05:52.945 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b28f282
2024-04-15 06:05:52.945 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b28f282
2024-04-15 06:05:52.945 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b28f282
2024-04-15 06:05:52.946 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@455351c4
2024-04-15 06:05:52.946 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@16423501
2024-04-15 06:05:52.947 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7db534f2
2024-04-15 06:05:52.947 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7db534f2
2024-04-15 06:05:52.948 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7eb01b12
2024-04-15 06:05:52.949 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6691490c
2024-04-15 06:05:52.949 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6691490c
2024-04-15 06:05:52.950 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5c1bd44c
2024-04-15 06:05:52.950 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c1bd44c
2024-04-15 06:05:52.951 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c4ca0f9
2024-04-15 06:05:52.951 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2755d705
2024-04-15 06:05:52.952 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@4cc547a
2024-04-15 06:05:52.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@61a002b1
2024-04-15 06:05:52.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@61a002b1
2024-04-15 06:05:52.955 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6f70f32f
2024-04-15 06:05:52.955 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@548e76f1
2024-04-15 06:05:52.955 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5aabbb29
2024-04-15 06:05:52.955 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@72c927f1
2024-04-15 06:05:52.955 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1ac85b0c
2024-04-15 06:05:52.955 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3dd69f5a
2024-04-15 06:05:52.955 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3aa3193a
2024-04-15 06:05:52.956 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1ee4730
2024-04-15 06:05:52.969 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
2024-04-15 06:05:52.977 [main] DEBUG org.hibernate.boot.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@2db2cd5] into BootstrapContext; was [null]
2024-04-15 06:05:52.977 [main] DEBUG org.hibernate.boot.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@70e659aa] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@615f972]
2024-04-15 06:05:53.013 [main] DEBUG org.hibernate.boot.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2024-04-15 06:05:53.013 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2024-04-15 06:05:53.022 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-04-15 06:05:53.022 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-04-15 06:05:53.022 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-04-15 06:05:53.022 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-04-15 06:05:53.023 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-04-15 06:05:53.023 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-04-15 06:05:53.024 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-04-15 06:05:53.025 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-04-15 06:05:53.025 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2024-04-15 06:05:53.026 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-04-15 06:05:53.026 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-04-15 06:05:53.026 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2024-04-15 06:05:53.027 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-04-15 06:05:53.027 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-04-15 06:05:53.030 [main] WARN  org.hibernate.orm.connections.pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2024-04-15 06:05:53.032 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: using driver [org.sqlite.JDBC] at URL [jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db]
2024-04-15 06:05:53.032 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001001: Connection properties: {}
2024-04-15 06:05:53.032 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001003: Autocommit mode: false
2024-04-15 06:05:53.034 [main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
2024-04-15 06:05:53.034 [main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
2024-04-15 06:05:53.086 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Database ->
       name : SQLite
    version : 3.7.2
      major : 3
      minor : 0
2024-04-15 06:05:53.086 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Driver ->
       name : SQLiteJDBC
    version : native
      major : 1
      minor : 1
2024-04-15 06:05:53.086 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - JDBC version : 2.1
2024-04-15 06:05:53.087 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
2024-04-15 06:05:53.095 [main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-04-15 06:05:53.096 [main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-04-15 06:05:53.100 [main] DEBUG org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver - Unable to use Java 1.7 Connection#getSchema
2024-04-15 06:05:53.101 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl - Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.SQLiteDialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:315) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:273) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79) ~[javax.persistence-api-2.2.jar:2.2]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54) ~[javax.persistence-api-2.2.jar:2.2]
	at repository.DoctorRepository.<init>(DoctorRepository.java:15) ~[classes/:?]
	at Main.main(Main.java:21) ~[classes/:?]
2024-04-15 06:05:53.120 [main] DEBUG org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
2024-04-15 06:05:53.122 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2024-04-15 06:05:53.122 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-04-15 06:05:53.127 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c2772d1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@37d00a23]
2024-04-15 06:05:53.154 [main] DEBUG org.hibernate.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-04-15 06:05:53.164 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Doctor
2024-04-15 06:05:53.180 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: doctor.getAll => SELECT s from Doctor s
2024-04-15 06:05:53.186 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:05:53.189 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Doctor
2024-04-15 06:05:53.190 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Doctor on table doctor
2024-04-15 06:05:53.206 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=id, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.209 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Doctor] is safe
2024-04-15 06:05:53.210 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Doctor
2024-04-15 06:05:53.212 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-04-15 06:05:53.214 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:id]
2024-04-15 06:05:53.216 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-04-15 06:05:53.219 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-04-15 06:05:53.221 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2024-04-15 06:05:53.222 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=date_in, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.223 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property date_in with lazy=false
2024-04-15 06:05:53.223 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:date_in]
2024-04-15 06:05:53.224 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for date_in
2024-04-15 06:05:53.224 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property date_in
2024-04-15 06:05:53.224 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.224 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-04-15 06:05:53.225 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:name]
2024-04-15 06:05:53.225 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-04-15 06:05:53.225 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-04-15 06:05:53.225 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=phone, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.226 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property phone with lazy=false
2024-04-15 06:05:53.226 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:phone]
2024-04-15 06:05:53.226 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for phone
2024-04-15 06:05:53.227 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property phone
2024-04-15 06:05:53.227 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=room, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.227 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property room with lazy=false
2024-04-15 06:05:53.227 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:room]
2024-04-15 06:05:53.227 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for room
2024-04-15 06:05:53.227 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property room
2024-04-15 06:05:53.227 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=speciality, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.227 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property speciality with lazy=false
2024-04-15 06:05:53.228 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:speciality]
2024-04-15 06:05:53.228 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for speciality
2024-04-15 06:05:53.228 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property speciality
2024-04-15 06:05:53.234 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Patient
2024-04-15 06:05:53.234 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: patient.getAll => SELECT p from Patient p
2024-04-15 06:05:53.234 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:05:53.235 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Patient
2024-04-15 06:05:53.235 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Patient on table patient
2024-04-15 06:05:53.236 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=card, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.236 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Patient] is safe
2024-04-15 06:05:53.236 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Patient
2024-04-15 06:05:53.237 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property card with lazy=false
2024-04-15 06:05:53.237 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:card]
2024-04-15 06:05:53.237 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for card
2024-04-15 06:05:53.237 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property card
2024-04-15 06:05:53.237 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(card)]), card, identity, , ...)
2024-04-15 06:05:53.237 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=birthday, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.237 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property birthday with lazy=false
2024-04-15 06:05:53.238 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:birthday]
2024-04-15 06:05:53.238 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for birthday
2024-04-15 06:05:53.238 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property birthday
2024-04-15 06:05:53.238 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=male, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.238 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property male with lazy=false
2024-04-15 06:05:53.238 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:male]
2024-04-15 06:05:53.238 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for male
2024-04-15 06:05:53.238 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property male
2024-04-15 06:05:53.239 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.239 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-04-15 06:05:53.239 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:name]
2024-04-15 06:05:53.239 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-04-15 06:05:53.239 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-04-15 06:05:53.240 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Disease
2024-04-15 06:05:53.240 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: disease.getAll => SELECT c from Disease c
2024-04-15 06:05:53.240 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:05:53.241 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Disease
2024-04-15 06:05:53.241 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Disease on table disease
2024-04-15 06:05:53.241 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(disease), mappingColumn=id_disease, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.242 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Disease] is safe
2024-04-15 06:05:53.242 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Disease
2024-04-15 06:05:53.242 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id_disease with lazy=false
2024-04-15 06:05:53.242 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Disease:id_disease]
2024-04-15 06:05:53.242 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id_disease
2024-04-15 06:05:53.243 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_disease
2024-04-15 06:05:53.243 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_disease)]), id_disease, identity, , ...)
2024-04-15 06:05:53.243 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(disease), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.243 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-04-15 06:05:53.243 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Disease:name]
2024-04-15 06:05:53.243 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-04-15 06:05:53.243 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-04-15 06:05:53.244 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(disease), mappingColumn=sign, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.244 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property sign with lazy=false
2024-04-15 06:05:53.244 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Disease:sign]
2024-04-15 06:05:53.244 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for sign
2024-04-15 06:05:53.244 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property sign
2024-04-15 06:05:53.244 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Visit
2024-04-15 06:05:53.245 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: visit.getAll => SELECT v from Visit v
2024-04-15 06:05:53.245 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:05:53.245 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Visit
2024-04-15 06:05:53.246 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Visit on table visit
2024-04-15 06:05:53.252 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.252 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Visit] is safe
2024-04-15 06:05:53.252 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Visit
2024-04-15 06:05:53.252 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-04-15 06:05:53.252 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Visit:id]
2024-04-15 06:05:53.253 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-04-15 06:05:53.253 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-04-15 06:05:53.253 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2024-04-15 06:05:53.253 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=date, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.253 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property date with lazy=false
2024-04-15 06:05:53.253 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Visit:date]
2024-04-15 06:05:53.253 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for date
2024-04-15 06:05:53.254 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property date
2024-04-15 06:05:53.255 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='id_disease', referencedColumn='', mappedBy=''}
2024-04-15 06:05:53.257 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id_disease, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.261 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_disease
2024-04-15 06:05:53.263 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='id_doctor', referencedColumn='', mappedBy=''}
2024-04-15 06:05:53.263 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id_doctor, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.263 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_doctor
2024-04-15 06:05:53.263 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='id_patient', referencedColumn='', mappedBy=''}
2024-04-15 06:05:53.263 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id_patient, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.264 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_patient
2024-04-15 06:05:53.265 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-04-15 06:05:53.265 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for date_in
2024-04-15 06:05:53.265 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-04-15 06:05:53.266 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for phone
2024-04-15 06:05:53.266 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for room
2024-04-15 06:05:53.266 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for speciality
2024-04-15 06:05:53.266 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for card
2024-04-15 06:05:53.266 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for birthday
2024-04-15 06:05:53.266 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for male
2024-04-15 06:05:53.266 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-04-15 06:05:53.266 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id_disease
2024-04-15 06:05:53.266 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-04-15 06:05:53.266 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for sign
2024-04-15 06:05:53.266 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-04-15 06:05:53.266 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for date
2024-04-15 06:05:53.271 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [doctor]
2024-04-15 06:05:53.271 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [card] to be non-null as it is part of the primary key for table [patient]
2024-04-15 06:05:53.271 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_disease] to be non-null as it is part of the primary key for table [disease]
2024-04-15 06:05:53.271 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [visit]
2024-04-15 06:05:53.272 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Disease
2024-04-15 06:05:53.275 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Doctor
2024-04-15 06:05:53.275 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Patient
2024-04-15 06:05:53.277 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Disease
2024-04-15 06:05:53.277 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Doctor
2024-04-15 06:05:53.277 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Patient
2024-04-15 06:05:53.314 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Building session factory
2024-04-15 06:05:53.316 [main] DEBUG org.hibernate.cfg.Settings - SessionFactory name : null
2024-04-15 06:05:53.316 [main] DEBUG org.hibernate.cfg.Settings - Automatic flush during beforeCompletion(): enabled
2024-04-15 06:05:53.316 [main] DEBUG org.hibernate.cfg.Settings - Automatic session close at end of transaction: disabled
2024-04-15 06:05:53.316 [main] DEBUG org.hibernate.cfg.Settings - Statistics: disabled
2024-04-15 06:05:53.316 [main] DEBUG org.hibernate.cfg.Settings - Deleted entity synthetic identifier rollback: disabled
2024-04-15 06:05:53.316 [main] DEBUG org.hibernate.cfg.Settings - Default entity-mode: pojo
2024-04-15 06:05:53.316 [main] DEBUG org.hibernate.cfg.Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2024-04-15 06:05:53.316 [main] DEBUG org.hibernate.cfg.Settings - Allow initialization of lazy state outside session : disabled
2024-04-15 06:05:53.316 [main] DEBUG org.hibernate.cfg.Settings - Using BatchFetchStyle : LEGACY
2024-04-15 06:05:53.316 [main] DEBUG org.hibernate.cfg.Settings - Default batch fetch size: -1
2024-04-15 06:05:53.316 [main] DEBUG org.hibernate.cfg.Settings - Maximum outer join fetch depth: null
2024-04-15 06:05:53.316 [main] DEBUG org.hibernate.cfg.Settings - Default null ordering: NONE
2024-04-15 06:05:53.316 [main] DEBUG org.hibernate.cfg.Settings - Order SQL updates by primary key: disabled
2024-04-15 06:05:53.317 [main] DEBUG org.hibernate.cfg.Settings - Order SQL inserts for batching: disabled
2024-04-15 06:05:53.317 [main] DEBUG org.hibernate.cfg.Settings - multi-tenancy strategy : NONE
2024-04-15 06:05:53.317 [main] DEBUG org.hibernate.cfg.Settings - JTA Track by Thread: enabled
2024-04-15 06:05:53.317 [main] DEBUG org.hibernate.cfg.Settings - Query language substitutions: {}
2024-04-15 06:05:53.317 [main] DEBUG org.hibernate.cfg.Settings - Named query checking : enabled
2024-04-15 06:05:53.317 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache: disabled
2024-04-15 06:05:53.317 [main] DEBUG org.hibernate.cfg.Settings - Second-level query cache: disabled
2024-04-15 06:05:53.317 [main] DEBUG org.hibernate.cfg.Settings - Second-level query cache factory: null
2024-04-15 06:05:53.317 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache region prefix: null
2024-04-15 06:05:53.317 [main] DEBUG org.hibernate.cfg.Settings - Optimize second-level cache for minimal puts: disabled
2024-04-15 06:05:53.317 [main] DEBUG org.hibernate.cfg.Settings - Structured second-level cache entries: disabled
2024-04-15 06:05:53.317 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache direct-reference entries: disabled
2024-04-15 06:05:53.318 [main] DEBUG org.hibernate.cfg.Settings - Automatic eviction of collection cache: disabled
2024-04-15 06:05:53.318 [main] DEBUG org.hibernate.cfg.Settings - JDBC batch size: 1
2024-04-15 06:05:53.318 [main] DEBUG org.hibernate.cfg.Settings - JDBC batch updates for versioned data: enabled
2024-04-15 06:05:53.318 [main] DEBUG org.hibernate.cfg.Settings - Scrollable result sets: disabled
2024-04-15 06:05:53.318 [main] DEBUG org.hibernate.cfg.Settings - Wrap result sets: disabled
2024-04-15 06:05:53.318 [main] DEBUG org.hibernate.cfg.Settings - JDBC3 getGeneratedKeys(): disabled
2024-04-15 06:05:53.318 [main] DEBUG org.hibernate.cfg.Settings - JDBC result set fetch size: null
2024-04-15 06:05:53.318 [main] DEBUG org.hibernate.cfg.Settings - Connection release mode: AFTER_TRANSACTION
2024-04-15 06:05:53.318 [main] DEBUG org.hibernate.cfg.Settings - Generate SQL with comments: disabled
2024-04-15 06:05:53.318 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - query : disabled
2024-04-15 06:05:53.318 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - closed-handling : disabled
2024-04-15 06:05:53.318 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - lists : disabled
2024-04-15 06:05:53.318 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - transactions : disabled
2024-04-15 06:05:53.369 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-04-15 06:05:53.370 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-04-15 06:05:53.379 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2024-04-15 06:05:53.380 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {hibernate.format_sql=true, hibernate.id.new_generator_mappings=false, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, java.class.path=D:\IntellijIdea\Kem Rudolf\Lab2Rizhkov\target\classes;C:\Users\ПК\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\ПК\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\ПК\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\ПК\.m2\repository\net\bytebuddy\byte-buddy\1.12.7\byte-buddy-1.12.7.jar;C:\Users\ПК\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ПК\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\ПК\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\ПК\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\ПК\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\ПК\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\ПК\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\ПК\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\ПК\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\ПК\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\ПК\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\ПК\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\ПК\.m2\repository\org\xerial\sqlite-jdbc\3.7.2\sqlite-jdbc-3.7.2.jar;C:\Users\ПК\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\ПК\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.2\log4j-core-2.17.2.jar;C:\Users\ПК\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Yekaterinburg, javax.persistence.jdbc.url=jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Users\ПК\.jdks\openjdk-19.0.2\bin, sun.java.command=Main, jdk.debug=release, jakarta.persistence.jdbc.driver=org.sqlite.JDBC, sun.cpu.endian=little, user.home=C:\Users\ПК, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\ПК\.jdks\openjdk-19.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=TST, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=org.sqlite.JDBC, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.2+7-44, user.name=ПК, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TST, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=org.sqlite.JDBC, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\90C5~1\AppData\Local\Temp\, java.version=19.0.2, user.dir=D:\IntellijIdea\Kem Rudolf\Lab2Rizhkov, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@455824ad, native.encoding=Cp1251, java.library.path=C:\Users\ПК\.jdks\openjdk-19.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Python310;C:\Program Files\Python310\Scripts;D:\nodejs\;C:\php7;C:\Program Files (x86)\dotnet\;C:\Program Files\MySQL\MySQL Server 8.1\bin;c:\windows\system32\OpenSSH\ssh.exe;C:\sqlite;C:\Users\ПК\AppData\Local\Microsoft\WindowsApps;D:\WebStorm 2022.1.4\bin;;C:\Program Files (x86)\OpenVPN\bin;C:\Program Files\Python310\Scripts\;C:\Program Files\Python310\;C:\Users\ПК\AppData\Roaming\npm;C:\php7;C:\Program Files\MySQL\MySQL Server 8.1\bin;c:\windows\system32\OpenSSH\;C:\sqlite;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.2+7-44, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=63.0}
2024-04-15 06:05:53.391 [main] DEBUG org.hibernate.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled
2024-04-15 06:05:53.392 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
2024-04-15 06:05:53.392 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c2772d1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@49a26d19]
2024-04-15 06:05:53.435 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Doctor] is safe
2024-04-15 06:05:53.435 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Doctor
2024-04-15 06:05:53.596 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Patient] is safe
2024-04-15 06:05:53.597 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Patient
2024-04-15 06:05:53.607 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Disease] is safe
2024-04-15 06:05:53.608 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Disease
2024-04-15 06:05:53.618 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:53.620 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:53.620 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:53.620 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:53.620 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:53.621 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:53.621 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Visit] is safe
2024-04-15 06:05:53.621 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Visit
2024-04-15 06:05:53.628 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:53.628 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:53.628 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:53.628 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:53.629 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:53.629 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:53.642 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Doctor
2024-04-15 06:05:53.642 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from doctor where id =?
2024-04-15 06:05:53.642 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select doctor_.id, doctor_.date_in as date_in2_1_, doctor_.name as name3_1_, doctor_.phone as phone4_1_, doctor_.room as room5_1_, doctor_.speciality as speciali6_1_ from doctor doctor_ where doctor_.id=?
2024-04-15 06:05:53.642 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into doctor (date_in, name, phone, room, speciality, id) values (?, ?, ?, ?, ?, ?)
2024-04-15 06:05:53.642 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update doctor set date_in=?, name=?, phone=?, room=?, speciality=? where id=?
2024-04-15 06:05:53.642 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from doctor where id=?
2024-04-15 06:05:53.643 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into doctor (date_in, name, phone, room, speciality) values (?, ?, ?, ?, ?)
2024-04-15 06:05:53.659 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47d023b7]
2024-04-15 06:05:53.660 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date_in
2024-04-15 06:05:53.660 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-04-15 06:05:53.660 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : phone
2024-04-15 06:05:53.660 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : room
2024-04-15 06:05:53.660 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : speciality
2024-04-15 06:05:53.661 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:05:53.668 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:05:53.671 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Doctor)
    - Returns
       - EntityReturnImpl(entity=entity.Doctor, querySpaceUid=<gen:0>, path=entity.Doctor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Doctor)
          - SQL table alias mapping - doctor0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2024-04-15 06:05:53.676 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Doctor [NONE]: select doctor0_.id as id1_1_0_, doctor0_.date_in as date_in2_1_0_, doctor0_.name as name3_1_0_, doctor0_.phone as phone4_1_0_, doctor0_.room as room5_1_0_, doctor0_.speciality as speciali6_1_0_ from doctor doctor0_ where doctor0_.id=?
2024-04-15 06:05:53.676 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Patient
2024-04-15 06:05:53.676 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select card from patient where card =?
2024-04-15 06:05:53.676 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select patient_.card, patient_.birthday as birthday2_2_, patient_.male as male3_2_, patient_.name as name4_2_ from patient patient_ where patient_.card=?
2024-04-15 06:05:53.676 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into patient (birthday, male, name, card) values (?, ?, ?, ?)
2024-04-15 06:05:53.676 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update patient set birthday=?, male=?, name=? where card=?
2024-04-15 06:05:53.677 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from patient where card=?
2024-04-15 06:05:53.677 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into patient (birthday, male, name) values (?, ?, ?)
2024-04-15 06:05:53.677 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4730e0f0]
2024-04-15 06:05:53.677 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : birthday
2024-04-15 06:05:53.677 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : male
2024-04-15 06:05:53.677 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-04-15 06:05:53.677 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:05:53.677 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:05:53.677 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Patient)
    - Returns
       - EntityReturnImpl(entity=entity.Patient, querySpaceUid=<gen:0>, path=entity.Patient)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Patient)
          - SQL table alias mapping - patient0_
          - alias suffix - 0_
          - suffixed key columns - {card1_2_0_}

2024-04-15 06:05:53.678 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Patient [NONE]: select patient0_.card as card1_2_0_, patient0_.birthday as birthday2_2_0_, patient0_.male as male3_2_0_, patient0_.name as name4_2_0_ from patient patient0_ where patient0_.card=?
2024-04-15 06:05:53.678 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Disease
2024-04-15 06:05:53.678 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id_disease from disease where id_disease =?
2024-04-15 06:05:53.678 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select disease_.id_disease, disease_.name as name2_0_, disease_.sign as sign3_0_ from disease disease_ where disease_.id_disease=?
2024-04-15 06:05:53.678 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into disease (name, sign, id_disease) values (?, ?, ?)
2024-04-15 06:05:53.678 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update disease set name=?, sign=? where id_disease=?
2024-04-15 06:05:53.678 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from disease where id_disease=?
2024-04-15 06:05:53.678 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into disease (name, sign) values (?, ?)
2024-04-15 06:05:53.678 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b7332a7]
2024-04-15 06:05:53.679 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-04-15 06:05:53.679 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : sign
2024-04-15 06:05:53.679 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:05:53.679 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:05:53.679 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Disease)
    - Returns
       - EntityReturnImpl(entity=entity.Disease, querySpaceUid=<gen:0>, path=entity.Disease)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Disease)
          - SQL table alias mapping - disease0_
          - alias suffix - 0_
          - suffixed key columns - {id_disea1_0_0_}

2024-04-15 06:05:53.679 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Disease [NONE]: select disease0_.id_disease as id_disea1_0_0_, disease0_.name as name2_0_0_, disease0_.sign as sign3_0_0_ from disease disease0_ where disease0_.id_disease=?
2024-04-15 06:05:53.680 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Visit
2024-04-15 06:05:53.680 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from visit where id =?
2024-04-15 06:05:53.680 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select visit_.id, visit_.date as date2_3_, visit_.id_disease as id_disea3_3_, visit_.id_doctor as id_docto4_3_, visit_.id_patient as id_patie5_3_ from visit visit_ where visit_.id=?
2024-04-15 06:05:53.680 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into visit (date, id_disease, id_doctor, id_patient, id) values (?, ?, ?, ?, ?)
2024-04-15 06:05:53.680 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update visit set date=?, id_disease=?, id_doctor=?, id_patient=? where id=?
2024-04-15 06:05:53.680 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from visit where id=?
2024-04-15 06:05:53.680 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into visit (date, id_disease, id_doctor, id_patient) values (?, ?, ?, ?)
2024-04-15 06:05:53.680 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37b56ac7]
2024-04-15 06:05:53.680 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date
2024-04-15 06:05:53.680 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_disease
2024-04-15 06:05:53.683 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54067fdc]
2024-04-15 06:05:53.684 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_disease.name
2024-04-15 06:05:53.684 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_disease.sign
2024-04-15 06:05:53.685 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor
2024-04-15 06:05:53.685 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d5556bf]
2024-04-15 06:05:53.685 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.date_in
2024-04-15 06:05:53.685 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.name
2024-04-15 06:05:53.685 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.phone
2024-04-15 06:05:53.685 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.room
2024-04-15 06:05:53.685 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.speciality
2024-04-15 06:05:53.685 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient
2024-04-15 06:05:53.685 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b112b13]
2024-04-15 06:05:53.685 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient.birthday
2024-04-15 06:05:53.685 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient.male
2024-04-15 06:05:53.685 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient.name
2024-04-15 06:05:53.686 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:05:53.686 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:05:53.687 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Visit)
    - Returns
       - EntityReturnImpl(entity=entity.Visit, querySpaceUid=<gen:0>, path=entity.Visit)
          - EntityAttributeFetchImpl(entity=entity.Disease, querySpaceUid=<gen:1>, path=entity.Visit.id_disease)
          - EntityAttributeFetchImpl(entity=entity.Doctor, querySpaceUid=<gen:2>, path=entity.Visit.id_doctor)
          - EntityAttributeFetchImpl(entity=entity.Patient, querySpaceUid=<gen:3>, path=entity.Visit.id_patient)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Visit)
          - SQL table alias mapping - visit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(id_disease)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=entity.Disease)
                - SQL table alias mapping - disease1_
                - alias suffix - 1_
                - suffixed key columns - {id_disea1_0_1_}
          - JOIN (JoinDefinedByMetadata(id_doctor)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=entity.Doctor)
                - SQL table alias mapping - doctor2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}
          - JOIN (JoinDefinedByMetadata(id_patient)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=entity.Patient)
                - SQL table alias mapping - patient3_
                - alias suffix - 3_
                - suffixed key columns - {card1_2_3_}

2024-04-15 06:05:53.688 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Visit [NONE]: select visit0_.id as id1_3_0_, visit0_.date as date2_3_0_, visit0_.id_disease as id_disea3_3_0_, visit0_.id_doctor as id_docto4_3_0_, visit0_.id_patient as id_patie5_3_0_, disease1_.id_disease as id_disea1_0_1_, disease1_.name as name2_0_1_, disease1_.sign as sign3_0_1_, doctor2_.id as id1_1_2_, doctor2_.date_in as date_in2_1_2_, doctor2_.name as name3_1_2_, doctor2_.phone as phone4_1_2_, doctor2_.room as room5_1_2_, doctor2_.speciality as speciali6_1_2_, patient3_.card as card1_2_3_, patient3_.birthday as birthday2_2_3_, patient3_.male as male3_2_3_, patient3_.name as name4_2_3_ from visit visit0_ left outer join disease disease1_ on visit0_.id_disease=disease1_.id_disease left outer join doctor doctor2_ on visit0_.id_doctor=doctor2_.id left outer join patient patient3_ on visit0_.id_patient=patient3_.card where visit0_.id=?
2024-04-15 06:05:53.706 [main] DEBUG org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator - No actions specified; doing nothing
2024-04-15 06:05:53.707 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2024-04-15 06:05:53.707 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-04-15 06:05:53.709 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 06:05:53.710 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 06:05:53.710 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 4 named HQL queries
2024-04-15 06:05:53.711 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: visit.getAll
2024-04-15 06:05:53.714 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2024-04-15 06:05:53.719 [main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7c781c42
2024-04-15 06:05:53.734 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT v from entity.Visit v
2024-04-15 06:05:53.737 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:53.744 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Visit'
       |     \-[ALIAS] Node: 'v'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'v'

2024-04-15 06:05:53.756 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:05:53.764 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Visit (v) -> visit0_
2024-04-15 06:05:53.765 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : v -> visit0_.id
2024-04-15 06:05:53.766 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:05:53.766 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} visit0_.id ) ( FromClause{level=1} visit visit0_ ) )
2024-04-15 06:05:53.771 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Visit): [visit]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Visit)
    |  | originalText: v
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:05:53.773 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [visit visit0_]
2024-04-15 06:05:53.773 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:05:53.774 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (visit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'visit0_.id as id1_3_' {alias=v, className=entity.Visit, tableAlias=visit0_}
    |  \-[SQL_TOKEN] SqlFragment: 'visit0_.date as date2_3_, visit0_.id_disease as id_disea3_3_, visit0_.id_doctor as id_docto4_3_, visit0_.id_patient as id_patie5_3_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[v], fromElementByTableAlias=[visit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'visit visit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=v,role=null,tableName=visit,tableAlias=visit0_,origin=null,columns={,className=entity.Visit}}

2024-04-15 06:05:53.774 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:53.778 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT v from entity.Visit v
2024-04-15 06:05:53.779 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select visit0_.id as id1_3_, visit0_.date as date2_3_, visit0_.id_disease as id_disea3_3_, visit0_.id_doctor as id_docto4_3_, visit0_.id_patient as id_patie5_3_ from visit visit0_
2024-04-15 06:05:53.779 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:53.783 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: disease.getAll
2024-04-15 06:05:53.783 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT c from entity.Disease c
2024-04-15 06:05:53.784 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:53.784 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Disease'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'c'

2024-04-15 06:05:53.784 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:05:53.785 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Disease (c) -> disease0_
2024-04-15 06:05:53.785 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : c -> disease0_.id_disease
2024-04-15 06:05:53.785 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:05:53.785 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} disease0_.id_disease ) ( FromClause{level=1} disease disease0_ ) )
2024-04-15 06:05:53.785 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Disease): [disease]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Disease)
    |  | originalText: c
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:05:53.785 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [disease disease0_]
2024-04-15 06:05:53.785 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:05:53.786 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (disease)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'disease0_.id_disease as id_disea1_0_' {alias=c, className=entity.Disease, tableAlias=disease0_}
    |  \-[SQL_TOKEN] SqlFragment: 'disease0_.name as name2_0_, disease0_.sign as sign3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[disease0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'disease disease0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=disease,tableAlias=disease0_,origin=null,columns={,className=entity.Disease}}

2024-04-15 06:05:53.786 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:53.786 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT c from entity.Disease c
2024-04-15 06:05:53.786 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select disease0_.id_disease as id_disea1_0_, disease0_.name as name2_0_, disease0_.sign as sign3_0_ from disease disease0_
2024-04-15 06:05:53.786 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:53.786 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: doctor.getAll
2024-04-15 06:05:53.787 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT s from entity.Doctor s
2024-04-15 06:05:53.787 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:53.788 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Doctor'
       |     \-[ALIAS] Node: 's'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 's'

2024-04-15 06:05:53.788 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:05:53.788 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Doctor (s) -> doctor0_
2024-04-15 06:05:53.788 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : s -> doctor0_.id
2024-04-15 06:05:53.788 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:05:53.788 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} doctor0_.id ) ( FromClause{level=1} doctor doctor0_ ) )
2024-04-15 06:05:53.789 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Doctor): [doctor]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Doctor)
    |  | originalText: s
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:05:53.789 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [doctor doctor0_]
2024-04-15 06:05:53.789 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:05:53.789 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (doctor)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'doctor0_.id as id1_1_' {alias=s, className=entity.Doctor, tableAlias=doctor0_}
    |  \-[SQL_TOKEN] SqlFragment: 'doctor0_.date_in as date_in2_1_, doctor0_.name as name3_1_, doctor0_.phone as phone4_1_, doctor0_.room as room5_1_, doctor0_.speciality as speciali6_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[doctor0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'doctor doctor0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=doctor,tableAlias=doctor0_,origin=null,columns={,className=entity.Doctor}}

2024-04-15 06:05:53.789 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:53.789 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT s from entity.Doctor s
2024-04-15 06:05:53.789 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select doctor0_.id as id1_1_, doctor0_.date_in as date_in2_1_, doctor0_.name as name3_1_, doctor0_.phone as phone4_1_, doctor0_.room as room5_1_, doctor0_.speciality as speciali6_1_ from doctor doctor0_
2024-04-15 06:05:53.789 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:53.789 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: patient.getAll
2024-04-15 06:05:53.789 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT p from entity.Patient p
2024-04-15 06:05:53.790 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:53.790 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Patient'
       |     \-[ALIAS] Node: 'p'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'p'

2024-04-15 06:05:53.790 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:05:53.790 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Patient (p) -> patient0_
2024-04-15 06:05:53.790 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : p -> patient0_.card
2024-04-15 06:05:53.790 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:05:53.791 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} patient0_.card ) ( FromClause{level=1} patient patient0_ ) )
2024-04-15 06:05:53.791 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Patient): [patient]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Patient)
    |  | originalText: p
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:05:53.791 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [patient patient0_]
2024-04-15 06:05:53.791 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:05:53.791 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (patient)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'patient0_.card as card1_2_' {alias=p, className=entity.Patient, tableAlias=patient0_}
    |  \-[SQL_TOKEN] SqlFragment: 'patient0_.birthday as birthday2_2_, patient0_.male as male3_2_, patient0_.name as name4_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[patient0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'patient patient0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=patient,tableAlias=patient0_,origin=null,columns={,className=entity.Patient}}

2024-04-15 06:05:53.791 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:53.791 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT p from entity.Patient p
2024-04-15 06:05:53.791 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select patient0_.card as card1_2_, patient0_.birthday as birthday2_2_, patient0_.male as male3_2_, patient0_.name as name4_2_ from patient patient0_
2024-04-15 06:05:53.791 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:53.792 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named SQL queries
2024-04-15 06:05:53.795 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-04-15 06:05:53.799 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@32f96bba
2024-04-15 06:05:53.800 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: 0fe87e76-232d-426f-b883-c973077cadc9 (<unnamed>)
2024-04-15 06:05:53.801 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2024-04-15 06:05:53.841 [main] DEBUG org.hibernate.jpa.HibernatePersistenceProvider - Located and parsed 1 persistence units; checking each
2024-04-15 06:05:53.841 [main] DEBUG org.hibernate.jpa.HibernatePersistenceProvider - Checking persistence-unit [name=TST, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [TST]
2024-04-15 06:05:53.841 [main] DEBUG org.hibernate.jpa.boot.spi.ProviderChecker - Persistence-unit [TST] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2024-04-15 06:05:53.841 [main] DEBUG org.hibernate.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: TST
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/IntellijIdea/Kem%20Rudolf/Lab2Rizhkov/target/classes
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		entity.Visit
		entity.Doctor
		entity.Disease
		entity.Patient]
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.sqlite.JDBC
		hibernate.dialect: org.hibernate.dialect.SQLiteDialect
		javax.persistence.jdbc.url: jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db
		hibernate.id.new_generator_mappings: false
		hibernate.show_sql: false
		hibernate.format_sql: true]
2024-04-15 06:05:53.842 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2024-04-15 06:05:53.842 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2024-04-15 06:05:53.842 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-04-15 06:05:53.843 [main] DEBUG org.hibernate.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2024-04-15 06:05:53.843 [main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-04-15 06:05:53.843 [main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2024-04-15 06:05:53.843 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@53ab0286
2024-04-15 06:05:53.843 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@53ab0286
2024-04-15 06:05:53.843 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@53ab0286
2024-04-15 06:05:53.843 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@172ca72b
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5e8f9e2d
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@4204541c
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@69c79f09
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@69c79f09
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@69c79f09
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@62679465
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@62679465
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@62679465
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2552f2cb
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2552f2cb
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2552f2cb
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@94f6bfb
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@94f6bfb
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@94f6bfb
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5f59185e
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5f59185e
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5f59185e
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@28a0fd6c
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@28a0fd6c
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@28a0fd6c
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6b5966e1
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6b5966e1
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6b5966e1
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@37f21974
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@37f21974
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@362a019c
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@362a019c
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5ab14cb9
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5ab14cb9
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@31024624
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@40dd3977
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@591e58fa
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@591e58fa
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@493dfb8e
2024-04-15 06:05:53.844 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@493dfb8e
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@361c294e
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@361c294e
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7876d598
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7876d598
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@332a7fce
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@332a7fce
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2416a51
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2416a51
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1fc0053e
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1fc0053e
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@18e7143f
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@18e7143f
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@8a589a2
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@8a589a2
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@11dee337
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@11dee337
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6bab2585
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6bab2585
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@62923ee6
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@62923ee6
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@62923ee6
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@b91d8c4
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2baa8d82
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2baa8d82
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2baa8d82
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2b52c0d6
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@cdc3aae
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5471388b
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5471388b
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@142eef62
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@142eef62
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@12cd9150
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12cd9150
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@c9413d8
2024-04-15 06:05:53.845 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@c9413d8
2024-04-15 06:05:53.846 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7caa550
2024-04-15 06:05:53.846 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7caa550
2024-04-15 06:05:53.846 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@70fab835
2024-04-15 06:05:53.846 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@53499d85
2024-04-15 06:05:53.846 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@53499d85
2024-04-15 06:05:53.846 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@53499d85
2024-04-15 06:05:53.846 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5ae76500
2024-04-15 06:05:53.846 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5ae76500
2024-04-15 06:05:53.846 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5ae76500
2024-04-15 06:05:53.846 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@60cf80e7
2024-04-15 06:05:53.846 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@54107f42
2024-04-15 06:05:53.846 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@21ec5d87
2024-04-15 06:05:53.846 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@21ec5d87
2024-04-15 06:05:53.846 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@21ec5d87
2024-04-15 06:05:53.846 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b28f282
2024-04-15 06:05:53.846 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b28f282
2024-04-15 06:05:53.846 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b28f282
2024-04-15 06:05:53.846 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@455351c4
2024-04-15 06:05:53.846 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@16423501
2024-04-15 06:05:53.846 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7db534f2
2024-04-15 06:05:53.846 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7db534f2
2024-04-15 06:05:53.846 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7eb01b12
2024-04-15 06:05:53.846 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6691490c
2024-04-15 06:05:53.846 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6691490c
2024-04-15 06:05:53.846 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5c1bd44c
2024-04-15 06:05:53.846 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c1bd44c
2024-04-15 06:05:53.847 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c4ca0f9
2024-04-15 06:05:53.847 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2755d705
2024-04-15 06:05:53.847 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@4cc547a
2024-04-15 06:05:53.847 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@61a002b1
2024-04-15 06:05:53.847 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@61a002b1
2024-04-15 06:05:53.847 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7235f92b
2024-04-15 06:05:53.847 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7885776b
2024-04-15 06:05:53.847 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@497d4c96
2024-04-15 06:05:53.847 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3472947a
2024-04-15 06:05:53.847 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@69d3cf7e
2024-04-15 06:05:53.847 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3a3ed300
2024-04-15 06:05:53.847 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1984212d
2024-04-15 06:05:53.847 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@39f5b723
2024-04-15 06:05:53.852 [main] DEBUG org.hibernate.boot.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@65cf4d6d] into BootstrapContext; was [null]
2024-04-15 06:05:53.852 [main] DEBUG org.hibernate.boot.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1b410308] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4b0bd001]
2024-04-15 06:05:53.860 [main] DEBUG org.hibernate.boot.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2024-04-15 06:05:53.860 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2024-04-15 06:05:53.860 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-04-15 06:05:53.860 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-04-15 06:05:53.860 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-04-15 06:05:53.860 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-04-15 06:05:53.860 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-04-15 06:05:53.860 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-04-15 06:05:53.860 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-04-15 06:05:53.860 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-04-15 06:05:53.860 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2024-04-15 06:05:53.860 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-04-15 06:05:53.860 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-04-15 06:05:53.860 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2024-04-15 06:05:53.860 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-04-15 06:05:53.860 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-04-15 06:05:53.861 [main] WARN  org.hibernate.orm.connections.pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2024-04-15 06:05:53.861 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: using driver [org.sqlite.JDBC] at URL [jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db]
2024-04-15 06:05:53.861 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001001: Connection properties: {}
2024-04-15 06:05:53.861 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001003: Autocommit mode: false
2024-04-15 06:05:53.861 [main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
2024-04-15 06:05:53.861 [main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
2024-04-15 06:05:53.862 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Database ->
       name : SQLite
    version : 3.7.2
      major : 3
      minor : 0
2024-04-15 06:05:53.862 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Driver ->
       name : SQLiteJDBC
    version : native
      major : 1
      minor : 1
2024-04-15 06:05:53.863 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - JDBC version : 2.1
2024-04-15 06:05:53.863 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
2024-04-15 06:05:53.863 [main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-04-15 06:05:53.863 [main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-04-15 06:05:53.863 [main] DEBUG org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver - Unable to use Java 1.7 Connection#getSchema
2024-04-15 06:05:53.863 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl - Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.SQLiteDialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:315) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:273) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79) ~[javax.persistence-api-2.2.jar:2.2]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54) ~[javax.persistence-api-2.2.jar:2.2]
	at repository.PatientRepository.<init>(PatientRepository.java:16) ~[classes/:?]
	at Main.main(Main.java:22) ~[classes/:?]
2024-04-15 06:05:53.864 [main] DEBUG org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
2024-04-15 06:05:53.865 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2024-04-15 06:05:53.865 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-04-15 06:05:53.865 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@60aec68a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@25a7fedf]
2024-04-15 06:05:53.865 [main] DEBUG org.hibernate.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-04-15 06:05:53.866 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Doctor
2024-04-15 06:05:53.866 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: doctor.getAll => SELECT s from Doctor s
2024-04-15 06:05:53.866 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:05:53.866 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Doctor
2024-04-15 06:05:53.866 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Doctor on table doctor
2024-04-15 06:05:53.867 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=id, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.867 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Doctor] is safe
2024-04-15 06:05:53.867 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Doctor
2024-04-15 06:05:53.867 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-04-15 06:05:53.867 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:id]
2024-04-15 06:05:53.867 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-04-15 06:05:53.867 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-04-15 06:05:53.867 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2024-04-15 06:05:53.867 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=date_in, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.867 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property date_in with lazy=false
2024-04-15 06:05:53.867 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:date_in]
2024-04-15 06:05:53.868 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for date_in
2024-04-15 06:05:53.868 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property date_in
2024-04-15 06:05:53.868 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.868 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-04-15 06:05:53.868 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:name]
2024-04-15 06:05:53.868 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-04-15 06:05:53.868 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-04-15 06:05:53.868 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=phone, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.868 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property phone with lazy=false
2024-04-15 06:05:53.868 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:phone]
2024-04-15 06:05:53.868 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for phone
2024-04-15 06:05:53.868 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property phone
2024-04-15 06:05:53.868 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=room, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.868 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property room with lazy=false
2024-04-15 06:05:53.868 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:room]
2024-04-15 06:05:53.868 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for room
2024-04-15 06:05:53.868 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property room
2024-04-15 06:05:53.868 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=speciality, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.868 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property speciality with lazy=false
2024-04-15 06:05:53.868 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:speciality]
2024-04-15 06:05:53.868 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for speciality
2024-04-15 06:05:53.869 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property speciality
2024-04-15 06:05:53.869 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Patient
2024-04-15 06:05:53.870 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: patient.getAll => SELECT p from Patient p
2024-04-15 06:05:53.870 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:05:53.870 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Patient
2024-04-15 06:05:53.870 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Patient on table patient
2024-04-15 06:05:53.870 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=card, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.870 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Patient] is safe
2024-04-15 06:05:53.870 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Patient
2024-04-15 06:05:53.871 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property card with lazy=false
2024-04-15 06:05:53.871 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:card]
2024-04-15 06:05:53.871 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for card
2024-04-15 06:05:53.871 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property card
2024-04-15 06:05:53.871 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(card)]), card, identity, , ...)
2024-04-15 06:05:53.871 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=birthday, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.871 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property birthday with lazy=false
2024-04-15 06:05:53.871 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:birthday]
2024-04-15 06:05:53.871 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for birthday
2024-04-15 06:05:53.871 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property birthday
2024-04-15 06:05:53.871 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=male, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.871 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property male with lazy=false
2024-04-15 06:05:53.871 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:male]
2024-04-15 06:05:53.871 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for male
2024-04-15 06:05:53.871 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property male
2024-04-15 06:05:53.872 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.872 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-04-15 06:05:53.872 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:name]
2024-04-15 06:05:53.872 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-04-15 06:05:53.872 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-04-15 06:05:53.872 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Disease
2024-04-15 06:05:53.872 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: disease.getAll => SELECT c from Disease c
2024-04-15 06:05:53.872 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:05:53.872 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Disease
2024-04-15 06:05:53.872 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Disease on table disease
2024-04-15 06:05:53.873 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(disease), mappingColumn=id_disease, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.873 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Disease] is safe
2024-04-15 06:05:53.873 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Disease
2024-04-15 06:05:53.873 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id_disease with lazy=false
2024-04-15 06:05:53.873 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Disease:id_disease]
2024-04-15 06:05:53.873 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id_disease
2024-04-15 06:05:53.873 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_disease
2024-04-15 06:05:53.873 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_disease)]), id_disease, identity, , ...)
2024-04-15 06:05:53.873 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(disease), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.873 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-04-15 06:05:53.874 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Disease:name]
2024-04-15 06:05:53.874 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-04-15 06:05:53.874 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-04-15 06:05:53.874 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(disease), mappingColumn=sign, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.874 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property sign with lazy=false
2024-04-15 06:05:53.874 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Disease:sign]
2024-04-15 06:05:53.874 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for sign
2024-04-15 06:05:53.874 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property sign
2024-04-15 06:05:53.874 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Visit
2024-04-15 06:05:53.874 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: visit.getAll => SELECT v from Visit v
2024-04-15 06:05:53.874 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:05:53.874 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Visit
2024-04-15 06:05:53.874 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Visit on table visit
2024-04-15 06:05:53.875 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.875 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Visit] is safe
2024-04-15 06:05:53.875 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Visit
2024-04-15 06:05:53.875 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-04-15 06:05:53.875 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Visit:id]
2024-04-15 06:05:53.875 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-04-15 06:05:53.875 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-04-15 06:05:53.875 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2024-04-15 06:05:53.875 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=date, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.875 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property date with lazy=false
2024-04-15 06:05:53.875 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Visit:date]
2024-04-15 06:05:53.875 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for date
2024-04-15 06:05:53.875 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property date
2024-04-15 06:05:53.875 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='id_disease', referencedColumn='', mappedBy=''}
2024-04-15 06:05:53.875 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id_disease, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.876 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_disease
2024-04-15 06:05:53.876 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='id_doctor', referencedColumn='', mappedBy=''}
2024-04-15 06:05:53.876 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id_doctor, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.876 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_doctor
2024-04-15 06:05:53.876 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='id_patient', referencedColumn='', mappedBy=''}
2024-04-15 06:05:53.876 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id_patient, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.876 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_patient
2024-04-15 06:05:53.876 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-04-15 06:05:53.877 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for date_in
2024-04-15 06:05:53.877 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-04-15 06:05:53.877 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for phone
2024-04-15 06:05:53.877 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for room
2024-04-15 06:05:53.877 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for speciality
2024-04-15 06:05:53.877 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for card
2024-04-15 06:05:53.877 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for birthday
2024-04-15 06:05:53.877 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for male
2024-04-15 06:05:53.877 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-04-15 06:05:53.877 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id_disease
2024-04-15 06:05:53.877 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-04-15 06:05:53.877 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for sign
2024-04-15 06:05:53.877 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-04-15 06:05:53.877 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for date
2024-04-15 06:05:53.877 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [doctor]
2024-04-15 06:05:53.877 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [card] to be non-null as it is part of the primary key for table [patient]
2024-04-15 06:05:53.877 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_disease] to be non-null as it is part of the primary key for table [disease]
2024-04-15 06:05:53.877 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [visit]
2024-04-15 06:05:53.877 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Disease
2024-04-15 06:05:53.877 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Doctor
2024-04-15 06:05:53.878 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Patient
2024-04-15 06:05:53.878 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Disease
2024-04-15 06:05:53.878 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Doctor
2024-04-15 06:05:53.878 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Patient
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Building session factory
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.cfg.Settings - SessionFactory name : null
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.cfg.Settings - Automatic flush during beforeCompletion(): enabled
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.cfg.Settings - Automatic session close at end of transaction: disabled
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.cfg.Settings - Statistics: disabled
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.cfg.Settings - Deleted entity synthetic identifier rollback: disabled
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.cfg.Settings - Default entity-mode: pojo
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.cfg.Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.cfg.Settings - Allow initialization of lazy state outside session : disabled
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.cfg.Settings - Using BatchFetchStyle : LEGACY
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.cfg.Settings - Default batch fetch size: -1
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.cfg.Settings - Maximum outer join fetch depth: null
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.cfg.Settings - Default null ordering: NONE
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.cfg.Settings - Order SQL updates by primary key: disabled
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.cfg.Settings - Order SQL inserts for batching: disabled
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.cfg.Settings - multi-tenancy strategy : NONE
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.cfg.Settings - JTA Track by Thread: enabled
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.cfg.Settings - Query language substitutions: {}
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.cfg.Settings - Named query checking : enabled
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache: disabled
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.cfg.Settings - Second-level query cache: disabled
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.cfg.Settings - Second-level query cache factory: null
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache region prefix: null
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.cfg.Settings - Optimize second-level cache for minimal puts: disabled
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.cfg.Settings - Structured second-level cache entries: disabled
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache direct-reference entries: disabled
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.cfg.Settings - Automatic eviction of collection cache: disabled
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.cfg.Settings - JDBC batch size: 1
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.cfg.Settings - JDBC batch updates for versioned data: enabled
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.cfg.Settings - Scrollable result sets: disabled
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.cfg.Settings - Wrap result sets: disabled
2024-04-15 06:05:53.879 [main] DEBUG org.hibernate.cfg.Settings - JDBC3 getGeneratedKeys(): disabled
2024-04-15 06:05:53.880 [main] DEBUG org.hibernate.cfg.Settings - JDBC result set fetch size: null
2024-04-15 06:05:53.880 [main] DEBUG org.hibernate.cfg.Settings - Connection release mode: AFTER_TRANSACTION
2024-04-15 06:05:53.880 [main] DEBUG org.hibernate.cfg.Settings - Generate SQL with comments: disabled
2024-04-15 06:05:53.880 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - query : disabled
2024-04-15 06:05:53.880 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - closed-handling : disabled
2024-04-15 06:05:53.880 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - lists : disabled
2024-04-15 06:05:53.880 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - transactions : disabled
2024-04-15 06:05:53.881 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-04-15 06:05:53.881 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-04-15 06:05:53.881 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2024-04-15 06:05:53.881 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {hibernate.format_sql=true, hibernate.id.new_generator_mappings=false, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, java.class.path=D:\IntellijIdea\Kem Rudolf\Lab2Rizhkov\target\classes;C:\Users\ПК\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\ПК\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\ПК\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\ПК\.m2\repository\net\bytebuddy\byte-buddy\1.12.7\byte-buddy-1.12.7.jar;C:\Users\ПК\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ПК\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\ПК\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\ПК\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\ПК\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\ПК\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\ПК\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\ПК\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\ПК\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\ПК\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\ПК\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\ПК\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\ПК\.m2\repository\org\xerial\sqlite-jdbc\3.7.2\sqlite-jdbc-3.7.2.jar;C:\Users\ПК\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\ПК\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.2\log4j-core-2.17.2.jar;C:\Users\ПК\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Yekaterinburg, javax.persistence.jdbc.url=jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Users\ПК\.jdks\openjdk-19.0.2\bin, sun.java.command=Main, jdk.debug=release, jakarta.persistence.jdbc.driver=org.sqlite.JDBC, sun.cpu.endian=little, user.home=C:\Users\ПК, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\ПК\.jdks\openjdk-19.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=TST, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=org.sqlite.JDBC, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.2+7-44, user.name=ПК, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TST, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=org.sqlite.JDBC, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\90C5~1\AppData\Local\Temp\, java.version=19.0.2, user.dir=D:\IntellijIdea\Kem Rudolf\Lab2Rizhkov, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@79696332, native.encoding=Cp1251, java.library.path=C:\Users\ПК\.jdks\openjdk-19.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Python310;C:\Program Files\Python310\Scripts;D:\nodejs\;C:\php7;C:\Program Files (x86)\dotnet\;C:\Program Files\MySQL\MySQL Server 8.1\bin;c:\windows\system32\OpenSSH\ssh.exe;C:\sqlite;C:\Users\ПК\AppData\Local\Microsoft\WindowsApps;D:\WebStorm 2022.1.4\bin;;C:\Program Files (x86)\OpenVPN\bin;C:\Program Files\Python310\Scripts\;C:\Program Files\Python310\;C:\Users\ПК\AppData\Roaming\npm;C:\php7;C:\Program Files\MySQL\MySQL Server 8.1\bin;c:\windows\system32\OpenSSH\;C:\sqlite;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.2+7-44, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=63.0}
2024-04-15 06:05:53.882 [main] DEBUG org.hibernate.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled
2024-04-15 06:05:53.883 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
2024-04-15 06:05:53.883 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@60aec68a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@ed2f2f6]
2024-04-15 06:05:53.883 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Doctor] is safe
2024-04-15 06:05:53.883 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Doctor
2024-04-15 06:05:53.898 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Patient] is safe
2024-04-15 06:05:53.898 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Patient
2024-04-15 06:05:53.909 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Disease] is safe
2024-04-15 06:05:53.910 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Disease
2024-04-15 06:05:53.919 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:53.919 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:53.919 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:53.919 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:53.919 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:53.919 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:53.919 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Visit] is safe
2024-04-15 06:05:53.919 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Visit
2024-04-15 06:05:53.926 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:53.926 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:53.926 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:53.926 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:53.926 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:53.926 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:53.927 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Doctor
2024-04-15 06:05:53.927 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from doctor where id =?
2024-04-15 06:05:53.927 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select doctor_.id, doctor_.date_in as date_in2_1_, doctor_.name as name3_1_, doctor_.phone as phone4_1_, doctor_.room as room5_1_, doctor_.speciality as speciali6_1_ from doctor doctor_ where doctor_.id=?
2024-04-15 06:05:53.927 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into doctor (date_in, name, phone, room, speciality, id) values (?, ?, ?, ?, ?, ?)
2024-04-15 06:05:53.927 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update doctor set date_in=?, name=?, phone=?, room=?, speciality=? where id=?
2024-04-15 06:05:53.927 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from doctor where id=?
2024-04-15 06:05:53.927 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into doctor (date_in, name, phone, room, speciality) values (?, ?, ?, ?, ?)
2024-04-15 06:05:53.927 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9ab310b]
2024-04-15 06:05:53.927 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date_in
2024-04-15 06:05:53.928 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-04-15 06:05:53.928 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : phone
2024-04-15 06:05:53.928 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : room
2024-04-15 06:05:53.928 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : speciality
2024-04-15 06:05:53.928 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:05:53.928 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:05:53.928 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Doctor)
    - Returns
       - EntityReturnImpl(entity=entity.Doctor, querySpaceUid=<gen:0>, path=entity.Doctor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Doctor)
          - SQL table alias mapping - doctor0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2024-04-15 06:05:53.928 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Doctor [NONE]: select doctor0_.id as id1_1_0_, doctor0_.date_in as date_in2_1_0_, doctor0_.name as name3_1_0_, doctor0_.phone as phone4_1_0_, doctor0_.room as room5_1_0_, doctor0_.speciality as speciali6_1_0_ from doctor doctor0_ where doctor0_.id=?
2024-04-15 06:05:53.928 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Patient
2024-04-15 06:05:53.929 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select card from patient where card =?
2024-04-15 06:05:53.929 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select patient_.card, patient_.birthday as birthday2_2_, patient_.male as male3_2_, patient_.name as name4_2_ from patient patient_ where patient_.card=?
2024-04-15 06:05:53.929 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into patient (birthday, male, name, card) values (?, ?, ?, ?)
2024-04-15 06:05:53.929 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update patient set birthday=?, male=?, name=? where card=?
2024-04-15 06:05:53.929 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from patient where card=?
2024-04-15 06:05:53.929 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into patient (birthday, male, name) values (?, ?, ?)
2024-04-15 06:05:53.929 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49fb0bbd]
2024-04-15 06:05:53.929 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : birthday
2024-04-15 06:05:53.929 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : male
2024-04-15 06:05:53.929 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-04-15 06:05:53.929 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:05:53.929 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:05:53.930 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Patient)
    - Returns
       - EntityReturnImpl(entity=entity.Patient, querySpaceUid=<gen:0>, path=entity.Patient)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Patient)
          - SQL table alias mapping - patient0_
          - alias suffix - 0_
          - suffixed key columns - {card1_2_0_}

2024-04-15 06:05:53.930 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Patient [NONE]: select patient0_.card as card1_2_0_, patient0_.birthday as birthday2_2_0_, patient0_.male as male3_2_0_, patient0_.name as name4_2_0_ from patient patient0_ where patient0_.card=?
2024-04-15 06:05:53.930 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Disease
2024-04-15 06:05:53.930 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id_disease from disease where id_disease =?
2024-04-15 06:05:53.930 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select disease_.id_disease, disease_.name as name2_0_, disease_.sign as sign3_0_ from disease disease_ where disease_.id_disease=?
2024-04-15 06:05:53.930 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into disease (name, sign, id_disease) values (?, ?, ?)
2024-04-15 06:05:53.930 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update disease set name=?, sign=? where id_disease=?
2024-04-15 06:05:53.930 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from disease where id_disease=?
2024-04-15 06:05:53.930 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into disease (name, sign) values (?, ?)
2024-04-15 06:05:53.930 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4faf104]
2024-04-15 06:05:53.931 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-04-15 06:05:53.931 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : sign
2024-04-15 06:05:53.931 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:05:53.931 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:05:53.931 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Disease)
    - Returns
       - EntityReturnImpl(entity=entity.Disease, querySpaceUid=<gen:0>, path=entity.Disease)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Disease)
          - SQL table alias mapping - disease0_
          - alias suffix - 0_
          - suffixed key columns - {id_disea1_0_0_}

2024-04-15 06:05:53.931 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Disease [NONE]: select disease0_.id_disease as id_disea1_0_0_, disease0_.name as name2_0_0_, disease0_.sign as sign3_0_0_ from disease disease0_ where disease0_.id_disease=?
2024-04-15 06:05:53.931 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Visit
2024-04-15 06:05:53.931 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from visit where id =?
2024-04-15 06:05:53.931 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select visit_.id, visit_.date as date2_3_, visit_.id_disease as id_disea3_3_, visit_.id_doctor as id_docto4_3_, visit_.id_patient as id_patie5_3_ from visit visit_ where visit_.id=?
2024-04-15 06:05:53.931 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into visit (date, id_disease, id_doctor, id_patient, id) values (?, ?, ?, ?, ?)
2024-04-15 06:05:53.931 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update visit set date=?, id_disease=?, id_doctor=?, id_patient=? where id=?
2024-04-15 06:05:53.931 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from visit where id=?
2024-04-15 06:05:53.931 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into visit (date, id_disease, id_doctor, id_patient) values (?, ?, ?, ?)
2024-04-15 06:05:53.931 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48a2db72]
2024-04-15 06:05:53.931 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date
2024-04-15 06:05:53.931 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_disease
2024-04-15 06:05:53.931 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21c747a]
2024-04-15 06:05:53.931 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_disease.name
2024-04-15 06:05:53.931 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_disease.sign
2024-04-15 06:05:53.931 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor
2024-04-15 06:05:53.931 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f38091]
2024-04-15 06:05:53.931 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.date_in
2024-04-15 06:05:53.932 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.name
2024-04-15 06:05:53.932 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.phone
2024-04-15 06:05:53.932 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.room
2024-04-15 06:05:53.932 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.speciality
2024-04-15 06:05:53.932 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient
2024-04-15 06:05:53.932 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77c3c037]
2024-04-15 06:05:53.932 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient.birthday
2024-04-15 06:05:53.932 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient.male
2024-04-15 06:05:53.932 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient.name
2024-04-15 06:05:53.932 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:05:53.932 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:05:53.932 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Visit)
    - Returns
       - EntityReturnImpl(entity=entity.Visit, querySpaceUid=<gen:0>, path=entity.Visit)
          - EntityAttributeFetchImpl(entity=entity.Disease, querySpaceUid=<gen:1>, path=entity.Visit.id_disease)
          - EntityAttributeFetchImpl(entity=entity.Doctor, querySpaceUid=<gen:2>, path=entity.Visit.id_doctor)
          - EntityAttributeFetchImpl(entity=entity.Patient, querySpaceUid=<gen:3>, path=entity.Visit.id_patient)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Visit)
          - SQL table alias mapping - visit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(id_disease)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=entity.Disease)
                - SQL table alias mapping - disease1_
                - alias suffix - 1_
                - suffixed key columns - {id_disea1_0_1_}
          - JOIN (JoinDefinedByMetadata(id_doctor)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=entity.Doctor)
                - SQL table alias mapping - doctor2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}
          - JOIN (JoinDefinedByMetadata(id_patient)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=entity.Patient)
                - SQL table alias mapping - patient3_
                - alias suffix - 3_
                - suffixed key columns - {card1_2_3_}

2024-04-15 06:05:53.933 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Visit [NONE]: select visit0_.id as id1_3_0_, visit0_.date as date2_3_0_, visit0_.id_disease as id_disea3_3_0_, visit0_.id_doctor as id_docto4_3_0_, visit0_.id_patient as id_patie5_3_0_, disease1_.id_disease as id_disea1_0_1_, disease1_.name as name2_0_1_, disease1_.sign as sign3_0_1_, doctor2_.id as id1_1_2_, doctor2_.date_in as date_in2_1_2_, doctor2_.name as name3_1_2_, doctor2_.phone as phone4_1_2_, doctor2_.room as room5_1_2_, doctor2_.speciality as speciali6_1_2_, patient3_.card as card1_2_3_, patient3_.birthday as birthday2_2_3_, patient3_.male as male3_2_3_, patient3_.name as name4_2_3_ from visit visit0_ left outer join disease disease1_ on visit0_.id_disease=disease1_.id_disease left outer join doctor doctor2_ on visit0_.id_doctor=doctor2_.id left outer join patient patient3_ on visit0_.id_patient=patient3_.card where visit0_.id=?
2024-04-15 06:05:53.933 [main] DEBUG org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator - No actions specified; doing nothing
2024-04-15 06:05:53.934 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2024-04-15 06:05:53.934 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-04-15 06:05:53.936 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 06:05:53.936 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 06:05:53.936 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 4 named HQL queries
2024-04-15 06:05:53.936 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: visit.getAll
2024-04-15 06:05:53.937 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2024-04-15 06:05:53.937 [main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7c781c42
2024-04-15 06:05:53.937 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT v from entity.Visit v
2024-04-15 06:05:53.937 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:53.938 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Visit'
       |     \-[ALIAS] Node: 'v'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'v'

2024-04-15 06:05:53.938 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:05:53.938 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Visit (v) -> visit0_
2024-04-15 06:05:53.938 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : v -> visit0_.id
2024-04-15 06:05:53.938 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:05:53.938 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} visit0_.id ) ( FromClause{level=1} visit visit0_ ) )
2024-04-15 06:05:53.938 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Visit): [visit]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Visit)
    |  | originalText: v
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:05:53.939 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [visit visit0_]
2024-04-15 06:05:53.939 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:05:53.939 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (visit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'visit0_.id as id1_3_' {alias=v, className=entity.Visit, tableAlias=visit0_}
    |  \-[SQL_TOKEN] SqlFragment: 'visit0_.date as date2_3_, visit0_.id_disease as id_disea3_3_, visit0_.id_doctor as id_docto4_3_, visit0_.id_patient as id_patie5_3_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[v], fromElementByTableAlias=[visit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'visit visit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=v,role=null,tableName=visit,tableAlias=visit0_,origin=null,columns={,className=entity.Visit}}

2024-04-15 06:05:53.939 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:53.939 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT v from entity.Visit v
2024-04-15 06:05:53.939 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select visit0_.id as id1_3_, visit0_.date as date2_3_, visit0_.id_disease as id_disea3_3_, visit0_.id_doctor as id_docto4_3_, visit0_.id_patient as id_patie5_3_ from visit visit0_
2024-04-15 06:05:53.939 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:53.939 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: disease.getAll
2024-04-15 06:05:53.939 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT c from entity.Disease c
2024-04-15 06:05:53.940 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:53.940 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Disease'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'c'

2024-04-15 06:05:53.940 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:05:53.940 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Disease (c) -> disease0_
2024-04-15 06:05:53.940 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : c -> disease0_.id_disease
2024-04-15 06:05:53.940 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:05:53.940 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} disease0_.id_disease ) ( FromClause{level=1} disease disease0_ ) )
2024-04-15 06:05:53.940 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Disease): [disease]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Disease)
    |  | originalText: c
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:05:53.941 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [disease disease0_]
2024-04-15 06:05:53.941 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:05:53.941 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (disease)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'disease0_.id_disease as id_disea1_0_' {alias=c, className=entity.Disease, tableAlias=disease0_}
    |  \-[SQL_TOKEN] SqlFragment: 'disease0_.name as name2_0_, disease0_.sign as sign3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[disease0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'disease disease0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=disease,tableAlias=disease0_,origin=null,columns={,className=entity.Disease}}

2024-04-15 06:05:53.941 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:53.941 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT c from entity.Disease c
2024-04-15 06:05:53.941 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select disease0_.id_disease as id_disea1_0_, disease0_.name as name2_0_, disease0_.sign as sign3_0_ from disease disease0_
2024-04-15 06:05:53.941 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:53.941 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: doctor.getAll
2024-04-15 06:05:53.941 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT s from entity.Doctor s
2024-04-15 06:05:53.941 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:53.942 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Doctor'
       |     \-[ALIAS] Node: 's'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 's'

2024-04-15 06:05:53.942 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:05:53.942 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Doctor (s) -> doctor0_
2024-04-15 06:05:53.942 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : s -> doctor0_.id
2024-04-15 06:05:53.942 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:05:53.942 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} doctor0_.id ) ( FromClause{level=1} doctor doctor0_ ) )
2024-04-15 06:05:53.943 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Doctor): [doctor]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Doctor)
    |  | originalText: s
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:05:53.943 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [doctor doctor0_]
2024-04-15 06:05:53.943 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:05:53.943 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (doctor)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'doctor0_.id as id1_1_' {alias=s, className=entity.Doctor, tableAlias=doctor0_}
    |  \-[SQL_TOKEN] SqlFragment: 'doctor0_.date_in as date_in2_1_, doctor0_.name as name3_1_, doctor0_.phone as phone4_1_, doctor0_.room as room5_1_, doctor0_.speciality as speciali6_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[doctor0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'doctor doctor0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=doctor,tableAlias=doctor0_,origin=null,columns={,className=entity.Doctor}}

2024-04-15 06:05:53.943 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:53.943 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT s from entity.Doctor s
2024-04-15 06:05:53.943 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select doctor0_.id as id1_1_, doctor0_.date_in as date_in2_1_, doctor0_.name as name3_1_, doctor0_.phone as phone4_1_, doctor0_.room as room5_1_, doctor0_.speciality as speciali6_1_ from doctor doctor0_
2024-04-15 06:05:53.943 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:53.943 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: patient.getAll
2024-04-15 06:05:53.944 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT p from entity.Patient p
2024-04-15 06:05:53.944 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:53.944 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Patient'
       |     \-[ALIAS] Node: 'p'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'p'

2024-04-15 06:05:53.944 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:05:53.944 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Patient (p) -> patient0_
2024-04-15 06:05:53.944 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : p -> patient0_.card
2024-04-15 06:05:53.944 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:05:53.944 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} patient0_.card ) ( FromClause{level=1} patient patient0_ ) )
2024-04-15 06:05:53.945 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Patient): [patient]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Patient)
    |  | originalText: p
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:05:53.945 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [patient patient0_]
2024-04-15 06:05:53.945 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:05:53.945 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (patient)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'patient0_.card as card1_2_' {alias=p, className=entity.Patient, tableAlias=patient0_}
    |  \-[SQL_TOKEN] SqlFragment: 'patient0_.birthday as birthday2_2_, patient0_.male as male3_2_, patient0_.name as name4_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[patient0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'patient patient0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=patient,tableAlias=patient0_,origin=null,columns={,className=entity.Patient}}

2024-04-15 06:05:53.945 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:53.945 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT p from entity.Patient p
2024-04-15 06:05:53.945 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select patient0_.card as card1_2_, patient0_.birthday as birthday2_2_, patient0_.male as male3_2_, patient0_.name as name4_2_ from patient patient0_
2024-04-15 06:05:53.945 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:53.945 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named SQL queries
2024-04-15 06:05:53.945 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-04-15 06:05:53.945 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: 152ccf41-3f5f-40f4-ae87-9ddfec51095a (<unnamed>)
2024-04-15 06:05:53.945 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2024-04-15 06:05:53.950 [main] DEBUG org.hibernate.jpa.HibernatePersistenceProvider - Located and parsed 1 persistence units; checking each
2024-04-15 06:05:53.950 [main] DEBUG org.hibernate.jpa.HibernatePersistenceProvider - Checking persistence-unit [name=TST, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [TST]
2024-04-15 06:05:53.950 [main] DEBUG org.hibernate.jpa.boot.spi.ProviderChecker - Persistence-unit [TST] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2024-04-15 06:05:53.950 [main] DEBUG org.hibernate.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: TST
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/IntellijIdea/Kem%20Rudolf/Lab2Rizhkov/target/classes
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		entity.Visit
		entity.Doctor
		entity.Disease
		entity.Patient]
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.sqlite.JDBC
		hibernate.dialect: org.hibernate.dialect.SQLiteDialect
		javax.persistence.jdbc.url: jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db
		hibernate.id.new_generator_mappings: false
		hibernate.show_sql: false
		hibernate.format_sql: true]
2024-04-15 06:05:53.950 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2024-04-15 06:05:53.950 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2024-04-15 06:05:53.950 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-04-15 06:05:53.951 [main] DEBUG org.hibernate.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2024-04-15 06:05:53.951 [main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-04-15 06:05:53.951 [main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2024-04-15 06:05:53.952 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@53ab0286
2024-04-15 06:05:53.952 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@53ab0286
2024-04-15 06:05:53.952 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@53ab0286
2024-04-15 06:05:53.952 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@172ca72b
2024-04-15 06:05:53.952 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5e8f9e2d
2024-04-15 06:05:53.952 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@4204541c
2024-04-15 06:05:53.952 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@69c79f09
2024-04-15 06:05:53.952 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@69c79f09
2024-04-15 06:05:53.952 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@69c79f09
2024-04-15 06:05:53.952 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@62679465
2024-04-15 06:05:53.952 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@62679465
2024-04-15 06:05:53.952 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@62679465
2024-04-15 06:05:53.952 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2552f2cb
2024-04-15 06:05:53.952 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2552f2cb
2024-04-15 06:05:53.952 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2552f2cb
2024-04-15 06:05:53.952 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@94f6bfb
2024-04-15 06:05:53.952 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@94f6bfb
2024-04-15 06:05:53.952 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@94f6bfb
2024-04-15 06:05:53.952 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5f59185e
2024-04-15 06:05:53.952 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5f59185e
2024-04-15 06:05:53.952 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5f59185e
2024-04-15 06:05:53.952 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@28a0fd6c
2024-04-15 06:05:53.952 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@28a0fd6c
2024-04-15 06:05:53.952 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@28a0fd6c
2024-04-15 06:05:53.952 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6b5966e1
2024-04-15 06:05:53.952 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6b5966e1
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6b5966e1
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@37f21974
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@37f21974
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@362a019c
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@362a019c
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5ab14cb9
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5ab14cb9
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@31024624
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@40dd3977
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@591e58fa
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@591e58fa
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@493dfb8e
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@493dfb8e
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@361c294e
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@361c294e
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7876d598
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7876d598
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@332a7fce
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@332a7fce
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2416a51
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2416a51
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1fc0053e
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1fc0053e
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@18e7143f
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@18e7143f
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@8a589a2
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@8a589a2
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@11dee337
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@11dee337
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6bab2585
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6bab2585
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@62923ee6
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@62923ee6
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@62923ee6
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@b91d8c4
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2baa8d82
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2baa8d82
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2baa8d82
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2b52c0d6
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@cdc3aae
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5471388b
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5471388b
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@142eef62
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@142eef62
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@12cd9150
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12cd9150
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@c9413d8
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@c9413d8
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7caa550
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7caa550
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@70fab835
2024-04-15 06:05:53.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@53499d85
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@53499d85
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@53499d85
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5ae76500
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5ae76500
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5ae76500
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@60cf80e7
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@54107f42
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@21ec5d87
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@21ec5d87
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@21ec5d87
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b28f282
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b28f282
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b28f282
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@455351c4
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@16423501
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7db534f2
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7db534f2
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7eb01b12
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6691490c
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6691490c
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5c1bd44c
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c1bd44c
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c4ca0f9
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2755d705
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@4cc547a
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@61a002b1
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@61a002b1
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7c369270
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@9f86dc3
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@41d16cc3
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@662e682a
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e43c38d
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@649f25f3
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2e62ead7
2024-04-15 06:05:53.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3b98b809
2024-04-15 06:05:53.958 [main] DEBUG org.hibernate.boot.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@e09f1b6] into BootstrapContext; was [null]
2024-04-15 06:05:53.958 [main] DEBUG org.hibernate.boot.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@557b6a37] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@11b32a14]
2024-04-15 06:05:53.963 [main] DEBUG org.hibernate.boot.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2024-04-15 06:05:53.963 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2024-04-15 06:05:53.963 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-04-15 06:05:53.963 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-04-15 06:05:53.964 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-04-15 06:05:53.964 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-04-15 06:05:53.964 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-04-15 06:05:53.964 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-04-15 06:05:53.964 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-04-15 06:05:53.964 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-04-15 06:05:53.964 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2024-04-15 06:05:53.964 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-04-15 06:05:53.964 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-04-15 06:05:53.964 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2024-04-15 06:05:53.964 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-04-15 06:05:53.964 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-04-15 06:05:53.964 [main] WARN  org.hibernate.orm.connections.pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2024-04-15 06:05:53.964 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: using driver [org.sqlite.JDBC] at URL [jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db]
2024-04-15 06:05:53.964 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001001: Connection properties: {}
2024-04-15 06:05:53.964 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001003: Autocommit mode: false
2024-04-15 06:05:53.964 [main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
2024-04-15 06:05:53.964 [main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
2024-04-15 06:05:53.965 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Database ->
       name : SQLite
    version : 3.7.2
      major : 3
      minor : 0
2024-04-15 06:05:53.965 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Driver ->
       name : SQLiteJDBC
    version : native
      major : 1
      minor : 1
2024-04-15 06:05:53.965 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - JDBC version : 2.1
2024-04-15 06:05:53.965 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
2024-04-15 06:05:53.965 [main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-04-15 06:05:53.965 [main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-04-15 06:05:53.965 [main] DEBUG org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver - Unable to use Java 1.7 Connection#getSchema
2024-04-15 06:05:53.965 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl - Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.SQLiteDialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:315) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:273) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79) ~[javax.persistence-api-2.2.jar:2.2]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54) ~[javax.persistence-api-2.2.jar:2.2]
	at repository.VisitRepository.<init>(VisitRepository.java:22) ~[classes/:?]
	at Main.main(Main.java:23) ~[classes/:?]
2024-04-15 06:05:53.966 [main] DEBUG org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
2024-04-15 06:05:53.966 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2024-04-15 06:05:53.966 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-04-15 06:05:53.966 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d88f893] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@259b85d6]
2024-04-15 06:05:53.966 [main] DEBUG org.hibernate.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-04-15 06:05:53.967 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Doctor
2024-04-15 06:05:53.967 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: doctor.getAll => SELECT s from Doctor s
2024-04-15 06:05:53.967 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:05:53.967 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Doctor
2024-04-15 06:05:53.967 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Doctor on table doctor
2024-04-15 06:05:53.967 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=id, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.967 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Doctor] is safe
2024-04-15 06:05:53.967 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Doctor
2024-04-15 06:05:53.967 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-04-15 06:05:53.967 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:id]
2024-04-15 06:05:53.967 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-04-15 06:05:53.967 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-04-15 06:05:53.967 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2024-04-15 06:05:53.967 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=date_in, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.967 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property date_in with lazy=false
2024-04-15 06:05:53.967 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:date_in]
2024-04-15 06:05:53.967 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for date_in
2024-04-15 06:05:53.968 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property date_in
2024-04-15 06:05:53.968 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.968 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-04-15 06:05:53.968 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:name]
2024-04-15 06:05:53.968 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-04-15 06:05:53.968 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-04-15 06:05:53.968 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=phone, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.968 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property phone with lazy=false
2024-04-15 06:05:53.968 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:phone]
2024-04-15 06:05:53.968 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for phone
2024-04-15 06:05:53.968 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property phone
2024-04-15 06:05:53.968 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=room, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.968 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property room with lazy=false
2024-04-15 06:05:53.968 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:room]
2024-04-15 06:05:53.968 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for room
2024-04-15 06:05:53.968 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property room
2024-04-15 06:05:53.968 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=speciality, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.968 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property speciality with lazy=false
2024-04-15 06:05:53.968 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:speciality]
2024-04-15 06:05:53.968 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for speciality
2024-04-15 06:05:53.968 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property speciality
2024-04-15 06:05:53.968 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Patient
2024-04-15 06:05:53.968 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: patient.getAll => SELECT p from Patient p
2024-04-15 06:05:53.968 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:05:53.968 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Patient
2024-04-15 06:05:53.968 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Patient on table patient
2024-04-15 06:05:53.969 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=card, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.969 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Patient] is safe
2024-04-15 06:05:53.969 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Patient
2024-04-15 06:05:53.969 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property card with lazy=false
2024-04-15 06:05:53.969 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:card]
2024-04-15 06:05:53.969 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for card
2024-04-15 06:05:53.969 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property card
2024-04-15 06:05:53.969 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(card)]), card, identity, , ...)
2024-04-15 06:05:53.969 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=birthday, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.969 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property birthday with lazy=false
2024-04-15 06:05:53.969 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:birthday]
2024-04-15 06:05:53.969 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for birthday
2024-04-15 06:05:53.969 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property birthday
2024-04-15 06:05:53.969 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=male, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.969 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property male with lazy=false
2024-04-15 06:05:53.969 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:male]
2024-04-15 06:05:53.969 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for male
2024-04-15 06:05:53.969 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property male
2024-04-15 06:05:53.970 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.970 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-04-15 06:05:53.970 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:name]
2024-04-15 06:05:53.970 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-04-15 06:05:53.970 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-04-15 06:05:53.970 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Disease
2024-04-15 06:05:53.970 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: disease.getAll => SELECT c from Disease c
2024-04-15 06:05:53.970 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:05:53.970 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Disease
2024-04-15 06:05:53.972 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Disease on table disease
2024-04-15 06:05:53.972 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(disease), mappingColumn=id_disease, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.972 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Disease] is safe
2024-04-15 06:05:53.972 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Disease
2024-04-15 06:05:53.972 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id_disease with lazy=false
2024-04-15 06:05:53.972 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Disease:id_disease]
2024-04-15 06:05:53.973 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id_disease
2024-04-15 06:05:53.973 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_disease
2024-04-15 06:05:53.973 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_disease)]), id_disease, identity, , ...)
2024-04-15 06:05:53.973 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(disease), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.973 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-04-15 06:05:53.973 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Disease:name]
2024-04-15 06:05:53.973 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-04-15 06:05:53.973 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-04-15 06:05:53.973 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(disease), mappingColumn=sign, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.973 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property sign with lazy=false
2024-04-15 06:05:53.973 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Disease:sign]
2024-04-15 06:05:53.973 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for sign
2024-04-15 06:05:53.973 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property sign
2024-04-15 06:05:53.973 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Visit
2024-04-15 06:05:53.973 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: visit.getAll => SELECT v from Visit v
2024-04-15 06:05:53.973 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:05:53.973 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Visit
2024-04-15 06:05:53.973 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Visit on table visit
2024-04-15 06:05:53.974 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.974 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Visit] is safe
2024-04-15 06:05:53.974 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Visit
2024-04-15 06:05:53.974 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-04-15 06:05:53.974 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Visit:id]
2024-04-15 06:05:53.974 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-04-15 06:05:53.974 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-04-15 06:05:53.974 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2024-04-15 06:05:53.974 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=date, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.974 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property date with lazy=false
2024-04-15 06:05:53.974 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Visit:date]
2024-04-15 06:05:53.974 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for date
2024-04-15 06:05:53.974 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property date
2024-04-15 06:05:53.974 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='id_disease', referencedColumn='', mappedBy=''}
2024-04-15 06:05:53.974 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id_disease, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.974 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_disease
2024-04-15 06:05:53.974 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='id_doctor', referencedColumn='', mappedBy=''}
2024-04-15 06:05:53.974 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id_doctor, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.974 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_doctor
2024-04-15 06:05:53.974 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='id_patient', referencedColumn='', mappedBy=''}
2024-04-15 06:05:53.974 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id_patient, insertable=true, updatable=true, unique=false}
2024-04-15 06:05:53.974 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_patient
2024-04-15 06:05:53.975 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-04-15 06:05:53.975 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for date_in
2024-04-15 06:05:53.975 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-04-15 06:05:53.975 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for phone
2024-04-15 06:05:53.975 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for room
2024-04-15 06:05:53.975 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for speciality
2024-04-15 06:05:53.975 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for card
2024-04-15 06:05:53.975 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for birthday
2024-04-15 06:05:53.975 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for male
2024-04-15 06:05:53.975 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-04-15 06:05:53.975 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id_disease
2024-04-15 06:05:53.975 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-04-15 06:05:53.975 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for sign
2024-04-15 06:05:53.975 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-04-15 06:05:53.975 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for date
2024-04-15 06:05:53.975 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [doctor]
2024-04-15 06:05:53.975 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [card] to be non-null as it is part of the primary key for table [patient]
2024-04-15 06:05:53.975 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_disease] to be non-null as it is part of the primary key for table [disease]
2024-04-15 06:05:53.975 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [visit]
2024-04-15 06:05:53.975 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Disease
2024-04-15 06:05:53.976 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Doctor
2024-04-15 06:05:53.976 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Patient
2024-04-15 06:05:53.976 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Disease
2024-04-15 06:05:53.976 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Doctor
2024-04-15 06:05:53.976 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Patient
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Building session factory
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - SessionFactory name : null
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - Automatic flush during beforeCompletion(): enabled
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - Automatic session close at end of transaction: disabled
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - Statistics: disabled
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - Deleted entity synthetic identifier rollback: disabled
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - Default entity-mode: pojo
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - Allow initialization of lazy state outside session : disabled
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - Using BatchFetchStyle : LEGACY
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - Default batch fetch size: -1
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - Maximum outer join fetch depth: null
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - Default null ordering: NONE
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - Order SQL updates by primary key: disabled
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - Order SQL inserts for batching: disabled
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - multi-tenancy strategy : NONE
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - JTA Track by Thread: enabled
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - Query language substitutions: {}
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - Named query checking : enabled
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache: disabled
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - Second-level query cache: disabled
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - Second-level query cache factory: null
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache region prefix: null
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - Optimize second-level cache for minimal puts: disabled
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - Structured second-level cache entries: disabled
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache direct-reference entries: disabled
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - Automatic eviction of collection cache: disabled
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - JDBC batch size: 1
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - JDBC batch updates for versioned data: enabled
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - Scrollable result sets: disabled
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - Wrap result sets: disabled
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - JDBC3 getGeneratedKeys(): disabled
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - JDBC result set fetch size: null
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - Connection release mode: AFTER_TRANSACTION
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - Generate SQL with comments: disabled
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - query : disabled
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - closed-handling : disabled
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - lists : disabled
2024-04-15 06:05:53.977 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - transactions : disabled
2024-04-15 06:05:53.978 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-04-15 06:05:53.979 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-04-15 06:05:53.979 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2024-04-15 06:05:53.979 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {hibernate.format_sql=true, hibernate.id.new_generator_mappings=false, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, java.class.path=D:\IntellijIdea\Kem Rudolf\Lab2Rizhkov\target\classes;C:\Users\ПК\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\ПК\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\ПК\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\ПК\.m2\repository\net\bytebuddy\byte-buddy\1.12.7\byte-buddy-1.12.7.jar;C:\Users\ПК\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ПК\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\ПК\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\ПК\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\ПК\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\ПК\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\ПК\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\ПК\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\ПК\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\ПК\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\ПК\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\ПК\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\ПК\.m2\repository\org\xerial\sqlite-jdbc\3.7.2\sqlite-jdbc-3.7.2.jar;C:\Users\ПК\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\ПК\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.2\log4j-core-2.17.2.jar;C:\Users\ПК\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Yekaterinburg, javax.persistence.jdbc.url=jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Users\ПК\.jdks\openjdk-19.0.2\bin, sun.java.command=Main, jdk.debug=release, jakarta.persistence.jdbc.driver=org.sqlite.JDBC, sun.cpu.endian=little, user.home=C:\Users\ПК, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\ПК\.jdks\openjdk-19.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=TST, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=org.sqlite.JDBC, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.2+7-44, user.name=ПК, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TST, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=org.sqlite.JDBC, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\90C5~1\AppData\Local\Temp\, java.version=19.0.2, user.dir=D:\IntellijIdea\Kem Rudolf\Lab2Rizhkov, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6411504a, native.encoding=Cp1251, java.library.path=C:\Users\ПК\.jdks\openjdk-19.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Python310;C:\Program Files\Python310\Scripts;D:\nodejs\;C:\php7;C:\Program Files (x86)\dotnet\;C:\Program Files\MySQL\MySQL Server 8.1\bin;c:\windows\system32\OpenSSH\ssh.exe;C:\sqlite;C:\Users\ПК\AppData\Local\Microsoft\WindowsApps;D:\WebStorm 2022.1.4\bin;;C:\Program Files (x86)\OpenVPN\bin;C:\Program Files\Python310\Scripts\;C:\Program Files\Python310\;C:\Users\ПК\AppData\Roaming\npm;C:\php7;C:\Program Files\MySQL\MySQL Server 8.1\bin;c:\windows\system32\OpenSSH\;C:\sqlite;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.2+7-44, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=63.0}
2024-04-15 06:05:53.979 [main] DEBUG org.hibernate.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled
2024-04-15 06:05:53.980 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
2024-04-15 06:05:53.980 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d88f893] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@554188ac]
2024-04-15 06:05:53.980 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Doctor] is safe
2024-04-15 06:05:53.980 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Doctor
2024-04-15 06:05:53.987 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Patient] is safe
2024-04-15 06:05:53.987 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Patient
2024-04-15 06:05:53.994 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Disease] is safe
2024-04-15 06:05:53.994 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Disease
2024-04-15 06:05:53.999 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:53.999 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:53.999 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:53.999 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:53.999 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:53.999 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:53.999 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Visit] is safe
2024-04-15 06:05:53.999 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Visit
2024-04-15 06:05:54.003 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:54.003 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:54.004 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:54.004 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:54.004 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:54.004 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:05:54.004 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Doctor
2024-04-15 06:05:54.004 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from doctor where id =?
2024-04-15 06:05:54.004 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select doctor_.id, doctor_.date_in as date_in2_1_, doctor_.name as name3_1_, doctor_.phone as phone4_1_, doctor_.room as room5_1_, doctor_.speciality as speciali6_1_ from doctor doctor_ where doctor_.id=?
2024-04-15 06:05:54.004 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into doctor (date_in, name, phone, room, speciality, id) values (?, ?, ?, ?, ?, ?)
2024-04-15 06:05:54.004 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update doctor set date_in=?, name=?, phone=?, room=?, speciality=? where id=?
2024-04-15 06:05:54.004 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from doctor where id=?
2024-04-15 06:05:54.004 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into doctor (date_in, name, phone, room, speciality) values (?, ?, ?, ?, ?)
2024-04-15 06:05:54.004 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b202ff]
2024-04-15 06:05:54.004 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date_in
2024-04-15 06:05:54.004 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-04-15 06:05:54.004 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : phone
2024-04-15 06:05:54.004 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : room
2024-04-15 06:05:54.004 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : speciality
2024-04-15 06:05:54.004 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:05:54.004 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:05:54.005 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Doctor)
    - Returns
       - EntityReturnImpl(entity=entity.Doctor, querySpaceUid=<gen:0>, path=entity.Doctor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Doctor)
          - SQL table alias mapping - doctor0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2024-04-15 06:05:54.005 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Doctor [NONE]: select doctor0_.id as id1_1_0_, doctor0_.date_in as date_in2_1_0_, doctor0_.name as name3_1_0_, doctor0_.phone as phone4_1_0_, doctor0_.room as room5_1_0_, doctor0_.speciality as speciali6_1_0_ from doctor doctor0_ where doctor0_.id=?
2024-04-15 06:05:54.005 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Patient
2024-04-15 06:05:54.005 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select card from patient where card =?
2024-04-15 06:05:54.005 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select patient_.card, patient_.birthday as birthday2_2_, patient_.male as male3_2_, patient_.name as name4_2_ from patient patient_ where patient_.card=?
2024-04-15 06:05:54.005 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into patient (birthday, male, name, card) values (?, ?, ?, ?)
2024-04-15 06:05:54.005 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update patient set birthday=?, male=?, name=? where card=?
2024-04-15 06:05:54.005 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from patient where card=?
2024-04-15 06:05:54.005 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into patient (birthday, male, name) values (?, ?, ?)
2024-04-15 06:05:54.005 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e700eba]
2024-04-15 06:05:54.005 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : birthday
2024-04-15 06:05:54.005 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : male
2024-04-15 06:05:54.005 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-04-15 06:05:54.005 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:05:54.005 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:05:54.005 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Patient)
    - Returns
       - EntityReturnImpl(entity=entity.Patient, querySpaceUid=<gen:0>, path=entity.Patient)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Patient)
          - SQL table alias mapping - patient0_
          - alias suffix - 0_
          - suffixed key columns - {card1_2_0_}

2024-04-15 06:05:54.005 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Patient [NONE]: select patient0_.card as card1_2_0_, patient0_.birthday as birthday2_2_0_, patient0_.male as male3_2_0_, patient0_.name as name4_2_0_ from patient patient0_ where patient0_.card=?
2024-04-15 06:05:54.005 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Disease
2024-04-15 06:05:54.005 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id_disease from disease where id_disease =?
2024-04-15 06:05:54.005 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select disease_.id_disease, disease_.name as name2_0_, disease_.sign as sign3_0_ from disease disease_ where disease_.id_disease=?
2024-04-15 06:05:54.005 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into disease (name, sign, id_disease) values (?, ?, ?)
2024-04-15 06:05:54.005 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update disease set name=?, sign=? where id_disease=?
2024-04-15 06:05:54.005 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from disease where id_disease=?
2024-04-15 06:05:54.005 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into disease (name, sign) values (?, ?)
2024-04-15 06:05:54.005 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7186b202]
2024-04-15 06:05:54.006 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-04-15 06:05:54.006 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : sign
2024-04-15 06:05:54.006 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:05:54.006 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:05:54.006 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Disease)
    - Returns
       - EntityReturnImpl(entity=entity.Disease, querySpaceUid=<gen:0>, path=entity.Disease)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Disease)
          - SQL table alias mapping - disease0_
          - alias suffix - 0_
          - suffixed key columns - {id_disea1_0_0_}

2024-04-15 06:05:54.006 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Disease [NONE]: select disease0_.id_disease as id_disea1_0_0_, disease0_.name as name2_0_0_, disease0_.sign as sign3_0_0_ from disease disease0_ where disease0_.id_disease=?
2024-04-15 06:05:54.006 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Visit
2024-04-15 06:05:54.006 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from visit where id =?
2024-04-15 06:05:54.006 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select visit_.id, visit_.date as date2_3_, visit_.id_disease as id_disea3_3_, visit_.id_doctor as id_docto4_3_, visit_.id_patient as id_patie5_3_ from visit visit_ where visit_.id=?
2024-04-15 06:05:54.006 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into visit (date, id_disease, id_doctor, id_patient, id) values (?, ?, ?, ?, ?)
2024-04-15 06:05:54.006 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update visit set date=?, id_disease=?, id_doctor=?, id_patient=? where id=?
2024-04-15 06:05:54.006 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from visit where id=?
2024-04-15 06:05:54.006 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into visit (date, id_disease, id_doctor, id_patient) values (?, ?, ?, ?)
2024-04-15 06:05:54.006 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65ef48f2]
2024-04-15 06:05:54.006 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date
2024-04-15 06:05:54.006 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_disease
2024-04-15 06:05:54.006 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72543547]
2024-04-15 06:05:54.006 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_disease.name
2024-04-15 06:05:54.006 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_disease.sign
2024-04-15 06:05:54.006 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor
2024-04-15 06:05:54.007 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22bf9122]
2024-04-15 06:05:54.007 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.date_in
2024-04-15 06:05:54.007 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.name
2024-04-15 06:05:54.007 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.phone
2024-04-15 06:05:54.007 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.room
2024-04-15 06:05:54.007 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.speciality
2024-04-15 06:05:54.007 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient
2024-04-15 06:05:54.007 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73afe2b7]
2024-04-15 06:05:54.007 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient.birthday
2024-04-15 06:05:54.007 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient.male
2024-04-15 06:05:54.007 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient.name
2024-04-15 06:05:54.007 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:05:54.007 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:05:54.007 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Visit)
    - Returns
       - EntityReturnImpl(entity=entity.Visit, querySpaceUid=<gen:0>, path=entity.Visit)
          - EntityAttributeFetchImpl(entity=entity.Disease, querySpaceUid=<gen:1>, path=entity.Visit.id_disease)
          - EntityAttributeFetchImpl(entity=entity.Doctor, querySpaceUid=<gen:2>, path=entity.Visit.id_doctor)
          - EntityAttributeFetchImpl(entity=entity.Patient, querySpaceUid=<gen:3>, path=entity.Visit.id_patient)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Visit)
          - SQL table alias mapping - visit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(id_disease)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=entity.Disease)
                - SQL table alias mapping - disease1_
                - alias suffix - 1_
                - suffixed key columns - {id_disea1_0_1_}
          - JOIN (JoinDefinedByMetadata(id_doctor)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=entity.Doctor)
                - SQL table alias mapping - doctor2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}
          - JOIN (JoinDefinedByMetadata(id_patient)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=entity.Patient)
                - SQL table alias mapping - patient3_
                - alias suffix - 3_
                - suffixed key columns - {card1_2_3_}

2024-04-15 06:05:54.007 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Visit [NONE]: select visit0_.id as id1_3_0_, visit0_.date as date2_3_0_, visit0_.id_disease as id_disea3_3_0_, visit0_.id_doctor as id_docto4_3_0_, visit0_.id_patient as id_patie5_3_0_, disease1_.id_disease as id_disea1_0_1_, disease1_.name as name2_0_1_, disease1_.sign as sign3_0_1_, doctor2_.id as id1_1_2_, doctor2_.date_in as date_in2_1_2_, doctor2_.name as name3_1_2_, doctor2_.phone as phone4_1_2_, doctor2_.room as room5_1_2_, doctor2_.speciality as speciali6_1_2_, patient3_.card as card1_2_3_, patient3_.birthday as birthday2_2_3_, patient3_.male as male3_2_3_, patient3_.name as name4_2_3_ from visit visit0_ left outer join disease disease1_ on visit0_.id_disease=disease1_.id_disease left outer join doctor doctor2_ on visit0_.id_doctor=doctor2_.id left outer join patient patient3_ on visit0_.id_patient=patient3_.card where visit0_.id=?
2024-04-15 06:05:54.008 [main] DEBUG org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator - No actions specified; doing nothing
2024-04-15 06:05:54.008 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2024-04-15 06:05:54.008 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-04-15 06:05:54.009 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 06:05:54.009 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 06:05:54.009 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 4 named HQL queries
2024-04-15 06:05:54.010 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: visit.getAll
2024-04-15 06:05:54.010 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2024-04-15 06:05:54.010 [main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7c781c42
2024-04-15 06:05:54.010 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT v from entity.Visit v
2024-04-15 06:05:54.010 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:54.010 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Visit'
       |     \-[ALIAS] Node: 'v'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'v'

2024-04-15 06:05:54.010 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:05:54.010 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Visit (v) -> visit0_
2024-04-15 06:05:54.010 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : v -> visit0_.id
2024-04-15 06:05:54.011 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:05:54.011 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} visit0_.id ) ( FromClause{level=1} visit visit0_ ) )
2024-04-15 06:05:54.011 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Visit): [visit]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Visit)
    |  | originalText: v
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:05:54.011 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [visit visit0_]
2024-04-15 06:05:54.011 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:05:54.011 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (visit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'visit0_.id as id1_3_' {alias=v, className=entity.Visit, tableAlias=visit0_}
    |  \-[SQL_TOKEN] SqlFragment: 'visit0_.date as date2_3_, visit0_.id_disease as id_disea3_3_, visit0_.id_doctor as id_docto4_3_, visit0_.id_patient as id_patie5_3_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[v], fromElementByTableAlias=[visit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'visit visit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=v,role=null,tableName=visit,tableAlias=visit0_,origin=null,columns={,className=entity.Visit}}

2024-04-15 06:05:54.011 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:54.011 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT v from entity.Visit v
2024-04-15 06:05:54.011 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select visit0_.id as id1_3_, visit0_.date as date2_3_, visit0_.id_disease as id_disea3_3_, visit0_.id_doctor as id_docto4_3_, visit0_.id_patient as id_patie5_3_ from visit visit0_
2024-04-15 06:05:54.011 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:54.011 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: disease.getAll
2024-04-15 06:05:54.011 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT c from entity.Disease c
2024-04-15 06:05:54.011 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:54.012 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Disease'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'c'

2024-04-15 06:05:54.012 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:05:54.012 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Disease (c) -> disease0_
2024-04-15 06:05:54.012 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : c -> disease0_.id_disease
2024-04-15 06:05:54.012 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:05:54.012 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} disease0_.id_disease ) ( FromClause{level=1} disease disease0_ ) )
2024-04-15 06:05:54.012 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Disease): [disease]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Disease)
    |  | originalText: c
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:05:54.012 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [disease disease0_]
2024-04-15 06:05:54.012 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:05:54.012 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (disease)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'disease0_.id_disease as id_disea1_0_' {alias=c, className=entity.Disease, tableAlias=disease0_}
    |  \-[SQL_TOKEN] SqlFragment: 'disease0_.name as name2_0_, disease0_.sign as sign3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[disease0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'disease disease0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=disease,tableAlias=disease0_,origin=null,columns={,className=entity.Disease}}

2024-04-15 06:05:54.012 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:54.012 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT c from entity.Disease c
2024-04-15 06:05:54.012 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select disease0_.id_disease as id_disea1_0_, disease0_.name as name2_0_, disease0_.sign as sign3_0_ from disease disease0_
2024-04-15 06:05:54.012 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:54.012 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: doctor.getAll
2024-04-15 06:05:54.013 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT s from entity.Doctor s
2024-04-15 06:05:54.013 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:54.013 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Doctor'
       |     \-[ALIAS] Node: 's'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 's'

2024-04-15 06:05:54.013 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:05:54.013 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Doctor (s) -> doctor0_
2024-04-15 06:05:54.013 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : s -> doctor0_.id
2024-04-15 06:05:54.013 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:05:54.013 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} doctor0_.id ) ( FromClause{level=1} doctor doctor0_ ) )
2024-04-15 06:05:54.013 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Doctor): [doctor]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Doctor)
    |  | originalText: s
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:05:54.014 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [doctor doctor0_]
2024-04-15 06:05:54.014 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:05:54.014 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (doctor)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'doctor0_.id as id1_1_' {alias=s, className=entity.Doctor, tableAlias=doctor0_}
    |  \-[SQL_TOKEN] SqlFragment: 'doctor0_.date_in as date_in2_1_, doctor0_.name as name3_1_, doctor0_.phone as phone4_1_, doctor0_.room as room5_1_, doctor0_.speciality as speciali6_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[doctor0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'doctor doctor0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=doctor,tableAlias=doctor0_,origin=null,columns={,className=entity.Doctor}}

2024-04-15 06:05:54.014 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:54.014 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT s from entity.Doctor s
2024-04-15 06:05:54.014 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select doctor0_.id as id1_1_, doctor0_.date_in as date_in2_1_, doctor0_.name as name3_1_, doctor0_.phone as phone4_1_, doctor0_.room as room5_1_, doctor0_.speciality as speciali6_1_ from doctor doctor0_
2024-04-15 06:05:54.014 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:54.014 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: patient.getAll
2024-04-15 06:05:54.014 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT p from entity.Patient p
2024-04-15 06:05:54.014 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:54.014 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Patient'
       |     \-[ALIAS] Node: 'p'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'p'

2024-04-15 06:05:54.014 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:05:54.014 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Patient (p) -> patient0_
2024-04-15 06:05:54.014 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : p -> patient0_.card
2024-04-15 06:05:54.015 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:05:54.015 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} patient0_.card ) ( FromClause{level=1} patient patient0_ ) )
2024-04-15 06:05:54.015 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Patient): [patient]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Patient)
    |  | originalText: p
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:05:54.015 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [patient patient0_]
2024-04-15 06:05:54.015 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:05:54.015 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (patient)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'patient0_.card as card1_2_' {alias=p, className=entity.Patient, tableAlias=patient0_}
    |  \-[SQL_TOKEN] SqlFragment: 'patient0_.birthday as birthday2_2_, patient0_.male as male3_2_, patient0_.name as name4_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[patient0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'patient patient0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=patient,tableAlias=patient0_,origin=null,columns={,className=entity.Patient}}

2024-04-15 06:05:54.015 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:54.015 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT p from entity.Patient p
2024-04-15 06:05:54.015 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select patient0_.card as card1_2_, patient0_.birthday as birthday2_2_, patient0_.male as male3_2_, patient0_.name as name4_2_ from patient patient0_
2024-04-15 06:05:54.015 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:54.015 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named SQL queries
2024-04-15 06:05:54.015 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-04-15 06:05:54.015 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: 421b4708-9eaa-49e4-9878-95eed603350f (<unnamed>)
2024-04-15 06:05:54.015 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2024-04-15 06:05:54.021 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT p FROM entity.Patient p
2024-04-15 06:05:54.021 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:54.022 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Patient'
       |     \-[ALIAS] Node: 'p'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'p'

2024-04-15 06:05:54.022 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:05:54.022 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Patient (p) -> patient0_
2024-04-15 06:05:54.022 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : p -> patient0_.card
2024-04-15 06:05:54.022 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:05:54.022 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} patient0_.card ) ( FromClause{level=1} patient patient0_ ) )
2024-04-15 06:05:54.022 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Patient): [patient]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Patient)
    |  | originalText: p
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:05:54.022 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [patient patient0_]
2024-04-15 06:05:54.023 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:05:54.023 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (patient)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'patient0_.card as card1_2_' {alias=p, className=entity.Patient, tableAlias=patient0_}
    |  \-[SQL_TOKEN] SqlFragment: 'patient0_.birthday as birthday2_2_, patient0_.male as male3_2_, patient0_.name as name4_2_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[patient0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'patient patient0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=patient,tableAlias=patient0_,origin=null,columns={,className=entity.Patient}}

2024-04-15 06:05:54.023 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:54.023 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT p FROM entity.Patient p
2024-04-15 06:05:54.023 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select patient0_.card as card1_2_, patient0_.birthday as birthday2_2_, patient0_.male as male3_2_, patient0_.name as name4_2_ from patient patient0_
2024-04-15 06:05:54.023 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:05:54.028 [main] DEBUG org.hibernate.SQL - 
    select
        patient0_.card as card1_2_,
        patient0_.birthday as birthday2_2_,
        patient0_.male as male3_2_,
        patient0_.name as name4_2_ 
    from
        patient patient0_
2024-04-15 06:05:54.031 [main] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-04-15 06:05:54.032 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[entity.Patient#1]
2024-04-15 06:05:54.036 [main] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-04-15 06:05:54.036 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[entity.Patient#2]
2024-04-15 06:05:54.036 [main] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-04-15 06:05:54.036 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[entity.Patient#3]
2024-04-15 06:05:54.036 [main] DEBUG org.hibernate.loader.Loader - Result set row: 3
2024-04-15 06:05:54.036 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[entity.Patient#4]
2024-04-15 06:05:54.038 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [entity.Patient#1]
2024-04-15 06:05:54.038 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `birthday` : value = 1980-05-10
2024-04-15 06:05:54.038 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`birthday`)  - enhanced for lazy-loading? - false
2024-04-15 06:05:54.038 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `male` : value = true
2024-04-15 06:05:54.038 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`male`)  - enhanced for lazy-loading? - false
2024-04-15 06:05:54.038 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Иванов Иван Иванович
2024-04-15 06:05:54.038 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-04-15 06:05:54.040 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [entity.Patient#1]
2024-04-15 06:05:54.040 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [entity.Patient#2]
2024-04-15 06:05:54.040 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `birthday` : value = 1995-12-25
2024-04-15 06:05:54.040 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`birthday`)  - enhanced for lazy-loading? - false
2024-04-15 06:05:54.040 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `male` : value = false
2024-04-15 06:05:54.040 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`male`)  - enhanced for lazy-loading? - false
2024-04-15 06:05:54.040 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Петрова Анна Сергеевна
2024-04-15 06:05:54.040 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-04-15 06:05:54.040 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [entity.Patient#2]
2024-04-15 06:05:54.040 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [entity.Patient#3]
2024-04-15 06:05:54.040 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `birthday` : value = 1976-09-03
2024-04-15 06:05:54.040 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`birthday`)  - enhanced for lazy-loading? - false
2024-04-15 06:05:54.040 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `male` : value = true
2024-04-15 06:05:54.040 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`male`)  - enhanced for lazy-loading? - false
2024-04-15 06:05:54.040 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Сидоров Петр Александрович
2024-04-15 06:05:54.040 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-04-15 06:05:54.040 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [entity.Patient#3]
2024-04-15 06:05:54.040 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [entity.Patient#4]
2024-04-15 06:05:54.040 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `birthday` : value = 1980-04-10
2024-04-15 06:05:54.040 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`birthday`)  - enhanced for lazy-loading? - false
2024-04-15 06:05:54.040 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `male` : value = true
2024-04-15 06:05:54.040 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`male`)  - enhanced for lazy-loading? - false
2024-04-15 06:05:54.040 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Петров Иван Петрович
2024-04-15 06:05:54.040 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-04-15 06:05:54.040 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [entity.Patient#4]
2024-04-15 06:05:54.042 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-04-15 06:05:54.044 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-04-15 06:05:54.044 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
2024-04-15 06:05:54.044 [main] DEBUG org.hibernate.event.internal.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2024-04-15 06:05:54.053 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
2024-04-15 06:05:54.053 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
2024-04-15 06:05:54.054 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
2024-04-15 06:05:54.057 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2024-04-15 06:05:54.057 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-04-15 06:05:54.058 [main] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
2024-04-15 06:05:54.058 [main] DEBUG org.hibernate.internal.util.EntityPrinter - entity.Patient{birthday=1980-05-10, name=Иванов Иван Иванович, card=1, male=true}
2024-04-15 06:05:54.058 [main] DEBUG org.hibernate.internal.util.EntityPrinter - entity.Patient{birthday=1995-12-25, name=Петрова Анна Сергеевна, card=2, male=false}
2024-04-15 06:05:54.058 [main] DEBUG org.hibernate.internal.util.EntityPrinter - entity.Patient{birthday=1976-09-03, name=Сидоров Петр Александрович, card=3, male=true}
2024-04-15 06:05:54.058 [main] DEBUG org.hibernate.internal.util.EntityPrinter - entity.Patient{birthday=1980-04-10, name=Петров Иван Петрович, card=4, male=true}
2024-04-15 06:05:54.059 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-04-15 06:05:54.059 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-04-15 06:05:54.060 [main] INFO  repository.PatientRepository - Successful
2024-04-15 06:06:47.311 [main] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-04-15 06:06:47.386 [main] DEBUG org.hibernate.jpa.HibernatePersistenceProvider - Located and parsed 1 persistence units; checking each
2024-04-15 06:06:47.387 [main] DEBUG org.hibernate.jpa.HibernatePersistenceProvider - Checking persistence-unit [name=TST, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [TST]
2024-04-15 06:06:47.388 [main] DEBUG org.hibernate.jpa.boot.spi.ProviderChecker - Persistence-unit [TST] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2024-04-15 06:06:47.397 [main] DEBUG org.hibernate.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: TST
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/IntellijIdea/Kem%20Rudolf/Lab2Rizhkov/target/classes
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		entity.Visit
		entity.Doctor
		entity.Disease
		entity.Patient]
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.sqlite.JDBC
		hibernate.dialect: org.hibernate.dialect.SQLiteDialect
		javax.persistence.jdbc.url: jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db
		hibernate.id.new_generator_mappings: false
		hibernate.show_sql: false
		hibernate.format_sql: true]
2024-04-15 06:06:47.401 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2024-04-15 06:06:47.402 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2024-04-15 06:06:47.405 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-04-15 06:06:47.443 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.5.Final
2024-04-15 06:06:47.444 [main] DEBUG org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2024-04-15 06:06:47.603 [main] DEBUG org.hibernate.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2024-04-15 06:06:47.626 [main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-04-15 06:06:47.628 [main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2024-04-15 06:06:47.644 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-04-15 06:06:47.712 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@53ab0286
2024-04-15 06:06:47.713 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@53ab0286
2024-04-15 06:06:47.713 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@53ab0286
2024-04-15 06:06:47.713 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@172ca72b
2024-04-15 06:06:47.714 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5e8f9e2d
2024-04-15 06:06:47.714 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@4204541c
2024-04-15 06:06:47.715 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@69c79f09
2024-04-15 06:06:47.715 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@69c79f09
2024-04-15 06:06:47.715 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@69c79f09
2024-04-15 06:06:47.716 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@62679465
2024-04-15 06:06:47.716 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@62679465
2024-04-15 06:06:47.716 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@62679465
2024-04-15 06:06:47.717 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2552f2cb
2024-04-15 06:06:47.718 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2552f2cb
2024-04-15 06:06:47.718 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2552f2cb
2024-04-15 06:06:47.718 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@94f6bfb
2024-04-15 06:06:47.719 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@94f6bfb
2024-04-15 06:06:47.719 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@94f6bfb
2024-04-15 06:06:47.719 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5f59185e
2024-04-15 06:06:47.719 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5f59185e
2024-04-15 06:06:47.720 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5f59185e
2024-04-15 06:06:47.720 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@28a0fd6c
2024-04-15 06:06:47.720 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@28a0fd6c
2024-04-15 06:06:47.721 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@28a0fd6c
2024-04-15 06:06:47.721 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6b5966e1
2024-04-15 06:06:47.721 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6b5966e1
2024-04-15 06:06:47.721 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6b5966e1
2024-04-15 06:06:47.722 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@37f21974
2024-04-15 06:06:47.722 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@37f21974
2024-04-15 06:06:47.723 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@362a019c
2024-04-15 06:06:47.723 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@362a019c
2024-04-15 06:06:47.724 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5ab14cb9
2024-04-15 06:06:47.724 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5ab14cb9
2024-04-15 06:06:47.724 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@31024624
2024-04-15 06:06:47.725 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@40dd3977
2024-04-15 06:06:47.726 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@591e58fa
2024-04-15 06:06:47.726 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@591e58fa
2024-04-15 06:06:47.726 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@493dfb8e
2024-04-15 06:06:47.727 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@493dfb8e
2024-04-15 06:06:47.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@361c294e
2024-04-15 06:06:47.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@361c294e
2024-04-15 06:06:47.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7876d598
2024-04-15 06:06:47.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7876d598
2024-04-15 06:06:47.731 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@332a7fce
2024-04-15 06:06:47.731 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@332a7fce
2024-04-15 06:06:47.731 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2416a51
2024-04-15 06:06:47.732 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2416a51
2024-04-15 06:06:47.733 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1fc0053e
2024-04-15 06:06:47.733 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1fc0053e
2024-04-15 06:06:47.734 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@18e7143f
2024-04-15 06:06:47.734 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@18e7143f
2024-04-15 06:06:47.735 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@8a589a2
2024-04-15 06:06:47.735 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@8a589a2
2024-04-15 06:06:47.736 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@11dee337
2024-04-15 06:06:47.737 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@11dee337
2024-04-15 06:06:47.737 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6bab2585
2024-04-15 06:06:47.737 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6bab2585
2024-04-15 06:06:47.738 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@62923ee6
2024-04-15 06:06:47.738 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@62923ee6
2024-04-15 06:06:47.738 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@62923ee6
2024-04-15 06:06:47.740 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@b91d8c4
2024-04-15 06:06:47.740 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2baa8d82
2024-04-15 06:06:47.740 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2baa8d82
2024-04-15 06:06:47.741 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2baa8d82
2024-04-15 06:06:47.741 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2b52c0d6
2024-04-15 06:06:47.742 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@cdc3aae
2024-04-15 06:06:47.742 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5471388b
2024-04-15 06:06:47.742 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5471388b
2024-04-15 06:06:47.743 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@142eef62
2024-04-15 06:06:47.743 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@142eef62
2024-04-15 06:06:47.744 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@12cd9150
2024-04-15 06:06:47.744 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12cd9150
2024-04-15 06:06:47.745 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@c9413d8
2024-04-15 06:06:47.745 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@c9413d8
2024-04-15 06:06:47.745 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7caa550
2024-04-15 06:06:47.746 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7caa550
2024-04-15 06:06:47.746 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@70fab835
2024-04-15 06:06:47.747 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@53499d85
2024-04-15 06:06:47.747 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@53499d85
2024-04-15 06:06:47.747 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@53499d85
2024-04-15 06:06:47.748 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5ae76500
2024-04-15 06:06:47.748 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5ae76500
2024-04-15 06:06:47.748 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5ae76500
2024-04-15 06:06:47.749 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@60cf80e7
2024-04-15 06:06:47.749 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@54107f42
2024-04-15 06:06:47.750 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@21ec5d87
2024-04-15 06:06:47.750 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@21ec5d87
2024-04-15 06:06:47.750 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@21ec5d87
2024-04-15 06:06:47.751 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b28f282
2024-04-15 06:06:47.751 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b28f282
2024-04-15 06:06:47.751 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b28f282
2024-04-15 06:06:47.751 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@455351c4
2024-04-15 06:06:47.752 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@16423501
2024-04-15 06:06:47.753 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7db534f2
2024-04-15 06:06:47.753 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7db534f2
2024-04-15 06:06:47.753 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7eb01b12
2024-04-15 06:06:47.754 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6691490c
2024-04-15 06:06:47.755 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6691490c
2024-04-15 06:06:47.755 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5c1bd44c
2024-04-15 06:06:47.756 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c1bd44c
2024-04-15 06:06:47.756 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c4ca0f9
2024-04-15 06:06:47.756 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2755d705
2024-04-15 06:06:47.757 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@4cc547a
2024-04-15 06:06:47.760 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@61a002b1
2024-04-15 06:06:47.760 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@61a002b1
2024-04-15 06:06:47.760 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6f70f32f
2024-04-15 06:06:47.760 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@548e76f1
2024-04-15 06:06:47.761 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5aabbb29
2024-04-15 06:06:47.761 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@72c927f1
2024-04-15 06:06:47.761 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1ac85b0c
2024-04-15 06:06:47.761 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3dd69f5a
2024-04-15 06:06:47.761 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3aa3193a
2024-04-15 06:06:47.761 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1ee4730
2024-04-15 06:06:47.773 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
2024-04-15 06:06:47.781 [main] DEBUG org.hibernate.boot.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@2db2cd5] into BootstrapContext; was [null]
2024-04-15 06:06:47.781 [main] DEBUG org.hibernate.boot.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@70e659aa] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@615f972]
2024-04-15 06:06:47.816 [main] DEBUG org.hibernate.boot.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2024-04-15 06:06:47.816 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2024-04-15 06:06:47.824 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-04-15 06:06:47.825 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-04-15 06:06:47.825 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-04-15 06:06:47.825 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-04-15 06:06:47.825 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-04-15 06:06:47.826 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-04-15 06:06:47.826 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-04-15 06:06:47.827 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-04-15 06:06:47.828 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2024-04-15 06:06:47.828 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-04-15 06:06:47.829 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-04-15 06:06:47.829 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2024-04-15 06:06:47.830 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-04-15 06:06:47.830 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-04-15 06:06:47.833 [main] WARN  org.hibernate.orm.connections.pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2024-04-15 06:06:47.835 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: using driver [org.sqlite.JDBC] at URL [jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db]
2024-04-15 06:06:47.835 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001001: Connection properties: {}
2024-04-15 06:06:47.835 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001003: Autocommit mode: false
2024-04-15 06:06:47.837 [main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
2024-04-15 06:06:47.837 [main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
2024-04-15 06:06:47.892 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Database ->
       name : SQLite
    version : 3.7.2
      major : 3
      minor : 0
2024-04-15 06:06:47.892 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Driver ->
       name : SQLiteJDBC
    version : native
      major : 1
      minor : 1
2024-04-15 06:06:47.892 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - JDBC version : 2.1
2024-04-15 06:06:47.893 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
2024-04-15 06:06:47.899 [main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-04-15 06:06:47.899 [main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-04-15 06:06:47.902 [main] DEBUG org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver - Unable to use Java 1.7 Connection#getSchema
2024-04-15 06:06:47.903 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl - Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.SQLiteDialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:315) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:273) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79) ~[javax.persistence-api-2.2.jar:2.2]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54) ~[javax.persistence-api-2.2.jar:2.2]
	at repository.DoctorRepository.<init>(DoctorRepository.java:15) ~[classes/:?]
	at Main.main(Main.java:21) ~[classes/:?]
2024-04-15 06:06:47.919 [main] DEBUG org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
2024-04-15 06:06:47.921 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2024-04-15 06:06:47.922 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-04-15 06:06:47.925 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c2772d1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@37d00a23]
2024-04-15 06:06:47.949 [main] DEBUG org.hibernate.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-04-15 06:06:47.958 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Doctor
2024-04-15 06:06:47.974 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: doctor.getAll => SELECT s from Doctor s
2024-04-15 06:06:47.979 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:06:47.983 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Doctor
2024-04-15 06:06:47.985 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Doctor on table doctor
2024-04-15 06:06:48.003 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=id, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.006 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Doctor] is safe
2024-04-15 06:06:48.006 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Doctor
2024-04-15 06:06:48.008 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-04-15 06:06:48.010 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:id]
2024-04-15 06:06:48.012 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-04-15 06:06:48.014 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-04-15 06:06:48.017 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2024-04-15 06:06:48.018 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=date_in, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.018 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property date_in with lazy=false
2024-04-15 06:06:48.018 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:date_in]
2024-04-15 06:06:48.018 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for date_in
2024-04-15 06:06:48.018 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property date_in
2024-04-15 06:06:48.019 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.019 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-04-15 06:06:48.019 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:name]
2024-04-15 06:06:48.019 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-04-15 06:06:48.019 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-04-15 06:06:48.020 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=phone, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.020 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property phone with lazy=false
2024-04-15 06:06:48.020 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:phone]
2024-04-15 06:06:48.020 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for phone
2024-04-15 06:06:48.020 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property phone
2024-04-15 06:06:48.020 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=room, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.020 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property room with lazy=false
2024-04-15 06:06:48.020 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:room]
2024-04-15 06:06:48.021 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for room
2024-04-15 06:06:48.021 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property room
2024-04-15 06:06:48.021 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=speciality, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.021 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property speciality with lazy=false
2024-04-15 06:06:48.021 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:speciality]
2024-04-15 06:06:48.022 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for speciality
2024-04-15 06:06:48.022 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property speciality
2024-04-15 06:06:48.027 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Patient
2024-04-15 06:06:48.027 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: patient.getAll => SELECT p from Patient p
2024-04-15 06:06:48.027 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:06:48.028 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Patient
2024-04-15 06:06:48.028 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Patient on table patient
2024-04-15 06:06:48.029 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=card, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.029 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Patient] is safe
2024-04-15 06:06:48.029 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Patient
2024-04-15 06:06:48.029 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property card with lazy=false
2024-04-15 06:06:48.029 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:card]
2024-04-15 06:06:48.029 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for card
2024-04-15 06:06:48.029 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property card
2024-04-15 06:06:48.030 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(card)]), card, identity, , ...)
2024-04-15 06:06:48.030 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=birthday, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.030 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property birthday with lazy=false
2024-04-15 06:06:48.030 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:birthday]
2024-04-15 06:06:48.030 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for birthday
2024-04-15 06:06:48.030 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property birthday
2024-04-15 06:06:48.031 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=male, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.031 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property male with lazy=false
2024-04-15 06:06:48.031 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:male]
2024-04-15 06:06:48.031 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for male
2024-04-15 06:06:48.031 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property male
2024-04-15 06:06:48.032 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.032 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-04-15 06:06:48.032 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:name]
2024-04-15 06:06:48.032 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-04-15 06:06:48.032 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-04-15 06:06:48.033 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Disease
2024-04-15 06:06:48.033 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: disease.getAll => SELECT c from Disease c
2024-04-15 06:06:48.033 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:06:48.033 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Disease
2024-04-15 06:06:48.033 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Disease on table disease
2024-04-15 06:06:48.034 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(disease), mappingColumn=id_disease, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.035 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Disease] is safe
2024-04-15 06:06:48.035 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Disease
2024-04-15 06:06:48.035 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id_disease with lazy=false
2024-04-15 06:06:48.035 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Disease:id_disease]
2024-04-15 06:06:48.035 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id_disease
2024-04-15 06:06:48.035 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_disease
2024-04-15 06:06:48.036 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_disease)]), id_disease, identity, , ...)
2024-04-15 06:06:48.036 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(disease), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.036 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-04-15 06:06:48.036 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Disease:name]
2024-04-15 06:06:48.036 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-04-15 06:06:48.036 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-04-15 06:06:48.036 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(disease), mappingColumn=sign, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.037 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property sign with lazy=false
2024-04-15 06:06:48.037 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Disease:sign]
2024-04-15 06:06:48.037 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for sign
2024-04-15 06:06:48.037 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property sign
2024-04-15 06:06:48.037 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Visit
2024-04-15 06:06:48.038 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: visit.getAll => SELECT v from Visit v
2024-04-15 06:06:48.038 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:06:48.038 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Visit
2024-04-15 06:06:48.038 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Visit on table visit
2024-04-15 06:06:48.044 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.044 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Visit] is safe
2024-04-15 06:06:48.044 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Visit
2024-04-15 06:06:48.044 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-04-15 06:06:48.045 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Visit:id]
2024-04-15 06:06:48.045 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-04-15 06:06:48.045 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-04-15 06:06:48.045 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2024-04-15 06:06:48.045 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=date, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.045 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property date with lazy=false
2024-04-15 06:06:48.046 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Visit:date]
2024-04-15 06:06:48.046 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for date
2024-04-15 06:06:48.046 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property date
2024-04-15 06:06:48.047 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='id_disease', referencedColumn='', mappedBy=''}
2024-04-15 06:06:48.049 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id_disease, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.052 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_disease
2024-04-15 06:06:48.054 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='id_doctor', referencedColumn='', mappedBy=''}
2024-04-15 06:06:48.054 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id_doctor, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.055 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_doctor
2024-04-15 06:06:48.055 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='id_patient', referencedColumn='', mappedBy=''}
2024-04-15 06:06:48.055 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id_patient, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.055 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_patient
2024-04-15 06:06:48.057 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-04-15 06:06:48.057 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for date_in
2024-04-15 06:06:48.057 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-04-15 06:06:48.057 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for phone
2024-04-15 06:06:48.057 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for room
2024-04-15 06:06:48.057 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for speciality
2024-04-15 06:06:48.057 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for card
2024-04-15 06:06:48.057 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for birthday
2024-04-15 06:06:48.057 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for male
2024-04-15 06:06:48.058 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-04-15 06:06:48.058 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id_disease
2024-04-15 06:06:48.058 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-04-15 06:06:48.058 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for sign
2024-04-15 06:06:48.058 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-04-15 06:06:48.058 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for date
2024-04-15 06:06:48.061 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [doctor]
2024-04-15 06:06:48.062 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [card] to be non-null as it is part of the primary key for table [patient]
2024-04-15 06:06:48.062 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_disease] to be non-null as it is part of the primary key for table [disease]
2024-04-15 06:06:48.062 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [visit]
2024-04-15 06:06:48.063 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Disease
2024-04-15 06:06:48.066 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Doctor
2024-04-15 06:06:48.066 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Patient
2024-04-15 06:06:48.067 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Disease
2024-04-15 06:06:48.068 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Doctor
2024-04-15 06:06:48.068 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Patient
2024-04-15 06:06:48.101 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Building session factory
2024-04-15 06:06:48.103 [main] DEBUG org.hibernate.cfg.Settings - SessionFactory name : null
2024-04-15 06:06:48.103 [main] DEBUG org.hibernate.cfg.Settings - Automatic flush during beforeCompletion(): enabled
2024-04-15 06:06:48.103 [main] DEBUG org.hibernate.cfg.Settings - Automatic session close at end of transaction: disabled
2024-04-15 06:06:48.103 [main] DEBUG org.hibernate.cfg.Settings - Statistics: disabled
2024-04-15 06:06:48.103 [main] DEBUG org.hibernate.cfg.Settings - Deleted entity synthetic identifier rollback: disabled
2024-04-15 06:06:48.103 [main] DEBUG org.hibernate.cfg.Settings - Default entity-mode: pojo
2024-04-15 06:06:48.103 [main] DEBUG org.hibernate.cfg.Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2024-04-15 06:06:48.103 [main] DEBUG org.hibernate.cfg.Settings - Allow initialization of lazy state outside session : disabled
2024-04-15 06:06:48.103 [main] DEBUG org.hibernate.cfg.Settings - Using BatchFetchStyle : LEGACY
2024-04-15 06:06:48.103 [main] DEBUG org.hibernate.cfg.Settings - Default batch fetch size: -1
2024-04-15 06:06:48.104 [main] DEBUG org.hibernate.cfg.Settings - Maximum outer join fetch depth: null
2024-04-15 06:06:48.104 [main] DEBUG org.hibernate.cfg.Settings - Default null ordering: NONE
2024-04-15 06:06:48.104 [main] DEBUG org.hibernate.cfg.Settings - Order SQL updates by primary key: disabled
2024-04-15 06:06:48.104 [main] DEBUG org.hibernate.cfg.Settings - Order SQL inserts for batching: disabled
2024-04-15 06:06:48.104 [main] DEBUG org.hibernate.cfg.Settings - multi-tenancy strategy : NONE
2024-04-15 06:06:48.104 [main] DEBUG org.hibernate.cfg.Settings - JTA Track by Thread: enabled
2024-04-15 06:06:48.104 [main] DEBUG org.hibernate.cfg.Settings - Query language substitutions: {}
2024-04-15 06:06:48.104 [main] DEBUG org.hibernate.cfg.Settings - Named query checking : enabled
2024-04-15 06:06:48.104 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache: disabled
2024-04-15 06:06:48.104 [main] DEBUG org.hibernate.cfg.Settings - Second-level query cache: disabled
2024-04-15 06:06:48.104 [main] DEBUG org.hibernate.cfg.Settings - Second-level query cache factory: null
2024-04-15 06:06:48.104 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache region prefix: null
2024-04-15 06:06:48.104 [main] DEBUG org.hibernate.cfg.Settings - Optimize second-level cache for minimal puts: disabled
2024-04-15 06:06:48.105 [main] DEBUG org.hibernate.cfg.Settings - Structured second-level cache entries: disabled
2024-04-15 06:06:48.105 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache direct-reference entries: disabled
2024-04-15 06:06:48.105 [main] DEBUG org.hibernate.cfg.Settings - Automatic eviction of collection cache: disabled
2024-04-15 06:06:48.105 [main] DEBUG org.hibernate.cfg.Settings - JDBC batch size: 1
2024-04-15 06:06:48.105 [main] DEBUG org.hibernate.cfg.Settings - JDBC batch updates for versioned data: enabled
2024-04-15 06:06:48.105 [main] DEBUG org.hibernate.cfg.Settings - Scrollable result sets: disabled
2024-04-15 06:06:48.105 [main] DEBUG org.hibernate.cfg.Settings - Wrap result sets: disabled
2024-04-15 06:06:48.105 [main] DEBUG org.hibernate.cfg.Settings - JDBC3 getGeneratedKeys(): disabled
2024-04-15 06:06:48.105 [main] DEBUG org.hibernate.cfg.Settings - JDBC result set fetch size: null
2024-04-15 06:06:48.105 [main] DEBUG org.hibernate.cfg.Settings - Connection release mode: AFTER_TRANSACTION
2024-04-15 06:06:48.105 [main] DEBUG org.hibernate.cfg.Settings - Generate SQL with comments: disabled
2024-04-15 06:06:48.105 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - query : disabled
2024-04-15 06:06:48.105 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - closed-handling : disabled
2024-04-15 06:06:48.105 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - lists : disabled
2024-04-15 06:06:48.105 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - transactions : disabled
2024-04-15 06:06:48.150 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-04-15 06:06:48.152 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-04-15 06:06:48.161 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2024-04-15 06:06:48.161 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {hibernate.format_sql=true, hibernate.id.new_generator_mappings=false, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, java.class.path=D:\IntellijIdea\Kem Rudolf\Lab2Rizhkov\target\classes;C:\Users\ПК\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\ПК\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\ПК\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\ПК\.m2\repository\net\bytebuddy\byte-buddy\1.12.7\byte-buddy-1.12.7.jar;C:\Users\ПК\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ПК\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\ПК\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\ПК\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\ПК\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\ПК\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\ПК\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\ПК\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\ПК\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\ПК\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\ПК\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\ПК\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\ПК\.m2\repository\org\xerial\sqlite-jdbc\3.7.2\sqlite-jdbc-3.7.2.jar;C:\Users\ПК\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\ПК\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.2\log4j-core-2.17.2.jar;C:\Users\ПК\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Yekaterinburg, javax.persistence.jdbc.url=jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Users\ПК\.jdks\openjdk-19.0.2\bin, sun.java.command=Main, jdk.debug=release, jakarta.persistence.jdbc.driver=org.sqlite.JDBC, sun.cpu.endian=little, user.home=C:\Users\ПК, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\ПК\.jdks\openjdk-19.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=TST, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=org.sqlite.JDBC, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.2+7-44, user.name=ПК, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TST, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=org.sqlite.JDBC, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\90C5~1\AppData\Local\Temp\, java.version=19.0.2, user.dir=D:\IntellijIdea\Kem Rudolf\Lab2Rizhkov, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@455824ad, native.encoding=Cp1251, java.library.path=C:\Users\ПК\.jdks\openjdk-19.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Python310;C:\Program Files\Python310\Scripts;D:\nodejs\;C:\php7;C:\Program Files (x86)\dotnet\;C:\Program Files\MySQL\MySQL Server 8.1\bin;c:\windows\system32\OpenSSH\ssh.exe;C:\sqlite;C:\Users\ПК\AppData\Local\Microsoft\WindowsApps;D:\WebStorm 2022.1.4\bin;;C:\Program Files (x86)\OpenVPN\bin;C:\Program Files\Python310\Scripts\;C:\Program Files\Python310\;C:\Users\ПК\AppData\Roaming\npm;C:\php7;C:\Program Files\MySQL\MySQL Server 8.1\bin;c:\windows\system32\OpenSSH\;C:\sqlite;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.2+7-44, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=63.0}
2024-04-15 06:06:48.171 [main] DEBUG org.hibernate.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled
2024-04-15 06:06:48.172 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
2024-04-15 06:06:48.174 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c2772d1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@49a26d19]
2024-04-15 06:06:48.215 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Doctor] is safe
2024-04-15 06:06:48.216 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Doctor
2024-04-15 06:06:48.385 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Patient] is safe
2024-04-15 06:06:48.385 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Patient
2024-04-15 06:06:48.398 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Disease] is safe
2024-04-15 06:06:48.398 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Disease
2024-04-15 06:06:48.408 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.409 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.410 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.410 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.410 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.410 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.410 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Visit] is safe
2024-04-15 06:06:48.410 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Visit
2024-04-15 06:06:48.418 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.418 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.418 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.418 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.418 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.418 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.428 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Doctor
2024-04-15 06:06:48.428 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from doctor where id =?
2024-04-15 06:06:48.428 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select doctor_.id, doctor_.date_in as date_in2_1_, doctor_.name as name3_1_, doctor_.phone as phone4_1_, doctor_.room as room5_1_, doctor_.speciality as speciali6_1_ from doctor doctor_ where doctor_.id=?
2024-04-15 06:06:48.428 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into doctor (date_in, name, phone, room, speciality, id) values (?, ?, ?, ?, ?, ?)
2024-04-15 06:06:48.428 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update doctor set date_in=?, name=?, phone=?, room=?, speciality=? where id=?
2024-04-15 06:06:48.428 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from doctor where id=?
2024-04-15 06:06:48.428 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into doctor (date_in, name, phone, room, speciality) values (?, ?, ?, ?, ?)
2024-04-15 06:06:48.442 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47d023b7]
2024-04-15 06:06:48.443 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date_in
2024-04-15 06:06:48.443 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-04-15 06:06:48.443 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : phone
2024-04-15 06:06:48.443 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : room
2024-04-15 06:06:48.443 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : speciality
2024-04-15 06:06:48.443 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:06:48.450 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:06:48.452 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Doctor)
    - Returns
       - EntityReturnImpl(entity=entity.Doctor, querySpaceUid=<gen:0>, path=entity.Doctor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Doctor)
          - SQL table alias mapping - doctor0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2024-04-15 06:06:48.456 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Doctor [NONE]: select doctor0_.id as id1_1_0_, doctor0_.date_in as date_in2_1_0_, doctor0_.name as name3_1_0_, doctor0_.phone as phone4_1_0_, doctor0_.room as room5_1_0_, doctor0_.speciality as speciali6_1_0_ from doctor doctor0_ where doctor0_.id=?
2024-04-15 06:06:48.457 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Patient
2024-04-15 06:06:48.457 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select card from patient where card =?
2024-04-15 06:06:48.457 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select patient_.card, patient_.birthday as birthday2_2_, patient_.male as male3_2_, patient_.name as name4_2_ from patient patient_ where patient_.card=?
2024-04-15 06:06:48.457 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into patient (birthday, male, name, card) values (?, ?, ?, ?)
2024-04-15 06:06:48.457 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update patient set birthday=?, male=?, name=? where card=?
2024-04-15 06:06:48.457 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from patient where card=?
2024-04-15 06:06:48.457 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into patient (birthday, male, name) values (?, ?, ?)
2024-04-15 06:06:48.457 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4730e0f0]
2024-04-15 06:06:48.457 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : birthday
2024-04-15 06:06:48.457 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : male
2024-04-15 06:06:48.457 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-04-15 06:06:48.458 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:06:48.458 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:06:48.458 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Patient)
    - Returns
       - EntityReturnImpl(entity=entity.Patient, querySpaceUid=<gen:0>, path=entity.Patient)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Patient)
          - SQL table alias mapping - patient0_
          - alias suffix - 0_
          - suffixed key columns - {card1_2_0_}

2024-04-15 06:06:48.458 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Patient [NONE]: select patient0_.card as card1_2_0_, patient0_.birthday as birthday2_2_0_, patient0_.male as male3_2_0_, patient0_.name as name4_2_0_ from patient patient0_ where patient0_.card=?
2024-04-15 06:06:48.458 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Disease
2024-04-15 06:06:48.458 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id_disease from disease where id_disease =?
2024-04-15 06:06:48.458 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select disease_.id_disease, disease_.name as name2_0_, disease_.sign as sign3_0_ from disease disease_ where disease_.id_disease=?
2024-04-15 06:06:48.458 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into disease (name, sign, id_disease) values (?, ?, ?)
2024-04-15 06:06:48.458 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update disease set name=?, sign=? where id_disease=?
2024-04-15 06:06:48.459 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from disease where id_disease=?
2024-04-15 06:06:48.459 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into disease (name, sign) values (?, ?)
2024-04-15 06:06:48.459 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b7332a7]
2024-04-15 06:06:48.459 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-04-15 06:06:48.459 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : sign
2024-04-15 06:06:48.459 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:06:48.459 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:06:48.459 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Disease)
    - Returns
       - EntityReturnImpl(entity=entity.Disease, querySpaceUid=<gen:0>, path=entity.Disease)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Disease)
          - SQL table alias mapping - disease0_
          - alias suffix - 0_
          - suffixed key columns - {id_disea1_0_0_}

2024-04-15 06:06:48.460 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Disease [NONE]: select disease0_.id_disease as id_disea1_0_0_, disease0_.name as name2_0_0_, disease0_.sign as sign3_0_0_ from disease disease0_ where disease0_.id_disease=?
2024-04-15 06:06:48.460 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Visit
2024-04-15 06:06:48.460 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from visit where id =?
2024-04-15 06:06:48.460 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select visit_.id, visit_.date as date2_3_, visit_.id_disease as id_disea3_3_, visit_.id_doctor as id_docto4_3_, visit_.id_patient as id_patie5_3_ from visit visit_ where visit_.id=?
2024-04-15 06:06:48.460 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into visit (date, id_disease, id_doctor, id_patient, id) values (?, ?, ?, ?, ?)
2024-04-15 06:06:48.460 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update visit set date=?, id_disease=?, id_doctor=?, id_patient=? where id=?
2024-04-15 06:06:48.460 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from visit where id=?
2024-04-15 06:06:48.460 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into visit (date, id_disease, id_doctor, id_patient) values (?, ?, ?, ?)
2024-04-15 06:06:48.460 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37b56ac7]
2024-04-15 06:06:48.460 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date
2024-04-15 06:06:48.460 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_disease
2024-04-15 06:06:48.463 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54067fdc]
2024-04-15 06:06:48.464 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_disease.name
2024-04-15 06:06:48.464 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_disease.sign
2024-04-15 06:06:48.464 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor
2024-04-15 06:06:48.464 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d5556bf]
2024-04-15 06:06:48.464 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.date_in
2024-04-15 06:06:48.464 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.name
2024-04-15 06:06:48.464 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.phone
2024-04-15 06:06:48.464 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.room
2024-04-15 06:06:48.464 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.speciality
2024-04-15 06:06:48.464 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient
2024-04-15 06:06:48.464 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b112b13]
2024-04-15 06:06:48.465 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient.birthday
2024-04-15 06:06:48.465 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient.male
2024-04-15 06:06:48.465 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient.name
2024-04-15 06:06:48.465 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:06:48.465 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:06:48.466 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Visit)
    - Returns
       - EntityReturnImpl(entity=entity.Visit, querySpaceUid=<gen:0>, path=entity.Visit)
          - EntityAttributeFetchImpl(entity=entity.Disease, querySpaceUid=<gen:1>, path=entity.Visit.id_disease)
          - EntityAttributeFetchImpl(entity=entity.Doctor, querySpaceUid=<gen:2>, path=entity.Visit.id_doctor)
          - EntityAttributeFetchImpl(entity=entity.Patient, querySpaceUid=<gen:3>, path=entity.Visit.id_patient)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Visit)
          - SQL table alias mapping - visit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(id_disease)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=entity.Disease)
                - SQL table alias mapping - disease1_
                - alias suffix - 1_
                - suffixed key columns - {id_disea1_0_1_}
          - JOIN (JoinDefinedByMetadata(id_doctor)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=entity.Doctor)
                - SQL table alias mapping - doctor2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}
          - JOIN (JoinDefinedByMetadata(id_patient)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=entity.Patient)
                - SQL table alias mapping - patient3_
                - alias suffix - 3_
                - suffixed key columns - {card1_2_3_}

2024-04-15 06:06:48.466 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Visit [NONE]: select visit0_.id as id1_3_0_, visit0_.date as date2_3_0_, visit0_.id_disease as id_disea3_3_0_, visit0_.id_doctor as id_docto4_3_0_, visit0_.id_patient as id_patie5_3_0_, disease1_.id_disease as id_disea1_0_1_, disease1_.name as name2_0_1_, disease1_.sign as sign3_0_1_, doctor2_.id as id1_1_2_, doctor2_.date_in as date_in2_1_2_, doctor2_.name as name3_1_2_, doctor2_.phone as phone4_1_2_, doctor2_.room as room5_1_2_, doctor2_.speciality as speciali6_1_2_, patient3_.card as card1_2_3_, patient3_.birthday as birthday2_2_3_, patient3_.male as male3_2_3_, patient3_.name as name4_2_3_ from visit visit0_ left outer join disease disease1_ on visit0_.id_disease=disease1_.id_disease left outer join doctor doctor2_ on visit0_.id_doctor=doctor2_.id left outer join patient patient3_ on visit0_.id_patient=patient3_.card where visit0_.id=?
2024-04-15 06:06:48.482 [main] DEBUG org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator - No actions specified; doing nothing
2024-04-15 06:06:48.482 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2024-04-15 06:06:48.483 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-04-15 06:06:48.486 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 06:06:48.486 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 06:06:48.487 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 4 named HQL queries
2024-04-15 06:06:48.487 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: visit.getAll
2024-04-15 06:06:48.490 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2024-04-15 06:06:48.494 [main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7c781c42
2024-04-15 06:06:48.509 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT v from entity.Visit v
2024-04-15 06:06:48.512 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.518 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Visit'
       |     \-[ALIAS] Node: 'v'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'v'

2024-04-15 06:06:48.530 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:06:48.539 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Visit (v) -> visit0_
2024-04-15 06:06:48.540 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : v -> visit0_.id
2024-04-15 06:06:48.541 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:06:48.541 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} visit0_.id ) ( FromClause{level=1} visit visit0_ ) )
2024-04-15 06:06:48.545 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Visit): [visit]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Visit)
    |  | originalText: v
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:06:48.547 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [visit visit0_]
2024-04-15 06:06:48.548 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:06:48.548 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (visit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'visit0_.id as id1_3_' {alias=v, className=entity.Visit, tableAlias=visit0_}
    |  \-[SQL_TOKEN] SqlFragment: 'visit0_.date as date2_3_, visit0_.id_disease as id_disea3_3_, visit0_.id_doctor as id_docto4_3_, visit0_.id_patient as id_patie5_3_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[v], fromElementByTableAlias=[visit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'visit visit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=v,role=null,tableName=visit,tableAlias=visit0_,origin=null,columns={,className=entity.Visit}}

2024-04-15 06:06:48.548 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.552 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT v from entity.Visit v
2024-04-15 06:06:48.552 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select visit0_.id as id1_3_, visit0_.date as date2_3_, visit0_.id_disease as id_disea3_3_, visit0_.id_doctor as id_docto4_3_, visit0_.id_patient as id_patie5_3_ from visit visit0_
2024-04-15 06:06:48.552 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.556 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: disease.getAll
2024-04-15 06:06:48.556 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT c from entity.Disease c
2024-04-15 06:06:48.557 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.557 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Disease'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'c'

2024-04-15 06:06:48.557 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:06:48.557 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Disease (c) -> disease0_
2024-04-15 06:06:48.558 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : c -> disease0_.id_disease
2024-04-15 06:06:48.558 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:06:48.558 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} disease0_.id_disease ) ( FromClause{level=1} disease disease0_ ) )
2024-04-15 06:06:48.558 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Disease): [disease]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Disease)
    |  | originalText: c
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:06:48.558 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [disease disease0_]
2024-04-15 06:06:48.558 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:06:48.558 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (disease)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'disease0_.id_disease as id_disea1_0_' {alias=c, className=entity.Disease, tableAlias=disease0_}
    |  \-[SQL_TOKEN] SqlFragment: 'disease0_.name as name2_0_, disease0_.sign as sign3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[disease0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'disease disease0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=disease,tableAlias=disease0_,origin=null,columns={,className=entity.Disease}}

2024-04-15 06:06:48.559 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.559 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT c from entity.Disease c
2024-04-15 06:06:48.559 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select disease0_.id_disease as id_disea1_0_, disease0_.name as name2_0_, disease0_.sign as sign3_0_ from disease disease0_
2024-04-15 06:06:48.559 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.559 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: doctor.getAll
2024-04-15 06:06:48.559 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT s from entity.Doctor s
2024-04-15 06:06:48.560 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.560 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Doctor'
       |     \-[ALIAS] Node: 's'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 's'

2024-04-15 06:06:48.560 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:06:48.561 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Doctor (s) -> doctor0_
2024-04-15 06:06:48.561 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : s -> doctor0_.id
2024-04-15 06:06:48.561 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:06:48.561 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} doctor0_.id ) ( FromClause{level=1} doctor doctor0_ ) )
2024-04-15 06:06:48.561 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Doctor): [doctor]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Doctor)
    |  | originalText: s
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:06:48.562 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [doctor doctor0_]
2024-04-15 06:06:48.562 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:06:48.562 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (doctor)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'doctor0_.id as id1_1_' {alias=s, className=entity.Doctor, tableAlias=doctor0_}
    |  \-[SQL_TOKEN] SqlFragment: 'doctor0_.date_in as date_in2_1_, doctor0_.name as name3_1_, doctor0_.phone as phone4_1_, doctor0_.room as room5_1_, doctor0_.speciality as speciali6_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[doctor0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'doctor doctor0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=doctor,tableAlias=doctor0_,origin=null,columns={,className=entity.Doctor}}

2024-04-15 06:06:48.562 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.562 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT s from entity.Doctor s
2024-04-15 06:06:48.562 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select doctor0_.id as id1_1_, doctor0_.date_in as date_in2_1_, doctor0_.name as name3_1_, doctor0_.phone as phone4_1_, doctor0_.room as room5_1_, doctor0_.speciality as speciali6_1_ from doctor doctor0_
2024-04-15 06:06:48.562 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.562 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: patient.getAll
2024-04-15 06:06:48.562 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT p from entity.Patient p
2024-04-15 06:06:48.563 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.563 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Patient'
       |     \-[ALIAS] Node: 'p'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'p'

2024-04-15 06:06:48.563 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:06:48.563 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Patient (p) -> patient0_
2024-04-15 06:06:48.564 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : p -> patient0_.card
2024-04-15 06:06:48.564 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:06:48.564 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} patient0_.card ) ( FromClause{level=1} patient patient0_ ) )
2024-04-15 06:06:48.564 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Patient): [patient]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Patient)
    |  | originalText: p
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:06:48.564 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [patient patient0_]
2024-04-15 06:06:48.564 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:06:48.565 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (patient)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'patient0_.card as card1_2_' {alias=p, className=entity.Patient, tableAlias=patient0_}
    |  \-[SQL_TOKEN] SqlFragment: 'patient0_.birthday as birthday2_2_, patient0_.male as male3_2_, patient0_.name as name4_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[patient0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'patient patient0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=patient,tableAlias=patient0_,origin=null,columns={,className=entity.Patient}}

2024-04-15 06:06:48.565 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.565 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT p from entity.Patient p
2024-04-15 06:06:48.565 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select patient0_.card as card1_2_, patient0_.birthday as birthday2_2_, patient0_.male as male3_2_, patient0_.name as name4_2_ from patient patient0_
2024-04-15 06:06:48.565 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.565 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named SQL queries
2024-04-15 06:06:48.568 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-04-15 06:06:48.572 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@32f96bba
2024-04-15 06:06:48.573 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: 4b50bd86-7233-4b88-9d47-b77065dc9333 (<unnamed>)
2024-04-15 06:06:48.573 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2024-04-15 06:06:48.617 [main] DEBUG org.hibernate.jpa.HibernatePersistenceProvider - Located and parsed 1 persistence units; checking each
2024-04-15 06:06:48.617 [main] DEBUG org.hibernate.jpa.HibernatePersistenceProvider - Checking persistence-unit [name=TST, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [TST]
2024-04-15 06:06:48.617 [main] DEBUG org.hibernate.jpa.boot.spi.ProviderChecker - Persistence-unit [TST] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2024-04-15 06:06:48.617 [main] DEBUG org.hibernate.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: TST
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/IntellijIdea/Kem%20Rudolf/Lab2Rizhkov/target/classes
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		entity.Visit
		entity.Doctor
		entity.Disease
		entity.Patient]
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.sqlite.JDBC
		hibernate.dialect: org.hibernate.dialect.SQLiteDialect
		javax.persistence.jdbc.url: jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db
		hibernate.id.new_generator_mappings: false
		hibernate.show_sql: false
		hibernate.format_sql: true]
2024-04-15 06:06:48.618 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2024-04-15 06:06:48.618 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2024-04-15 06:06:48.618 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-04-15 06:06:48.619 [main] DEBUG org.hibernate.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2024-04-15 06:06:48.619 [main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-04-15 06:06:48.619 [main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2024-04-15 06:06:48.620 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@53ab0286
2024-04-15 06:06:48.620 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@53ab0286
2024-04-15 06:06:48.620 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@53ab0286
2024-04-15 06:06:48.620 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@172ca72b
2024-04-15 06:06:48.620 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5e8f9e2d
2024-04-15 06:06:48.620 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@4204541c
2024-04-15 06:06:48.620 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@69c79f09
2024-04-15 06:06:48.620 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@69c79f09
2024-04-15 06:06:48.620 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@69c79f09
2024-04-15 06:06:48.620 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@62679465
2024-04-15 06:06:48.620 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@62679465
2024-04-15 06:06:48.620 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@62679465
2024-04-15 06:06:48.620 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2552f2cb
2024-04-15 06:06:48.620 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2552f2cb
2024-04-15 06:06:48.620 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2552f2cb
2024-04-15 06:06:48.620 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@94f6bfb
2024-04-15 06:06:48.620 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@94f6bfb
2024-04-15 06:06:48.620 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@94f6bfb
2024-04-15 06:06:48.620 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5f59185e
2024-04-15 06:06:48.620 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5f59185e
2024-04-15 06:06:48.620 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5f59185e
2024-04-15 06:06:48.620 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@28a0fd6c
2024-04-15 06:06:48.620 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@28a0fd6c
2024-04-15 06:06:48.621 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@28a0fd6c
2024-04-15 06:06:48.621 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6b5966e1
2024-04-15 06:06:48.621 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6b5966e1
2024-04-15 06:06:48.621 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6b5966e1
2024-04-15 06:06:48.621 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@37f21974
2024-04-15 06:06:48.621 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@37f21974
2024-04-15 06:06:48.621 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@362a019c
2024-04-15 06:06:48.621 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@362a019c
2024-04-15 06:06:48.621 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5ab14cb9
2024-04-15 06:06:48.621 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5ab14cb9
2024-04-15 06:06:48.621 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@31024624
2024-04-15 06:06:48.621 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@40dd3977
2024-04-15 06:06:48.621 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@591e58fa
2024-04-15 06:06:48.621 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@591e58fa
2024-04-15 06:06:48.621 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@493dfb8e
2024-04-15 06:06:48.621 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@493dfb8e
2024-04-15 06:06:48.621 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@361c294e
2024-04-15 06:06:48.621 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@361c294e
2024-04-15 06:06:48.621 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7876d598
2024-04-15 06:06:48.621 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7876d598
2024-04-15 06:06:48.621 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@332a7fce
2024-04-15 06:06:48.621 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@332a7fce
2024-04-15 06:06:48.621 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2416a51
2024-04-15 06:06:48.621 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2416a51
2024-04-15 06:06:48.621 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1fc0053e
2024-04-15 06:06:48.621 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1fc0053e
2024-04-15 06:06:48.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@18e7143f
2024-04-15 06:06:48.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@18e7143f
2024-04-15 06:06:48.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@8a589a2
2024-04-15 06:06:48.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@8a589a2
2024-04-15 06:06:48.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@11dee337
2024-04-15 06:06:48.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@11dee337
2024-04-15 06:06:48.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6bab2585
2024-04-15 06:06:48.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6bab2585
2024-04-15 06:06:48.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@62923ee6
2024-04-15 06:06:48.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@62923ee6
2024-04-15 06:06:48.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@62923ee6
2024-04-15 06:06:48.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@b91d8c4
2024-04-15 06:06:48.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2baa8d82
2024-04-15 06:06:48.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2baa8d82
2024-04-15 06:06:48.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2baa8d82
2024-04-15 06:06:48.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2b52c0d6
2024-04-15 06:06:48.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@cdc3aae
2024-04-15 06:06:48.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5471388b
2024-04-15 06:06:48.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5471388b
2024-04-15 06:06:48.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@142eef62
2024-04-15 06:06:48.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@142eef62
2024-04-15 06:06:48.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@12cd9150
2024-04-15 06:06:48.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12cd9150
2024-04-15 06:06:48.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@c9413d8
2024-04-15 06:06:48.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@c9413d8
2024-04-15 06:06:48.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7caa550
2024-04-15 06:06:48.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7caa550
2024-04-15 06:06:48.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@70fab835
2024-04-15 06:06:48.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@53499d85
2024-04-15 06:06:48.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@53499d85
2024-04-15 06:06:48.623 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@53499d85
2024-04-15 06:06:48.623 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5ae76500
2024-04-15 06:06:48.623 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5ae76500
2024-04-15 06:06:48.623 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5ae76500
2024-04-15 06:06:48.623 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@60cf80e7
2024-04-15 06:06:48.623 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@54107f42
2024-04-15 06:06:48.623 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@21ec5d87
2024-04-15 06:06:48.623 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@21ec5d87
2024-04-15 06:06:48.623 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@21ec5d87
2024-04-15 06:06:48.623 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b28f282
2024-04-15 06:06:48.623 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b28f282
2024-04-15 06:06:48.623 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b28f282
2024-04-15 06:06:48.623 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@455351c4
2024-04-15 06:06:48.623 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@16423501
2024-04-15 06:06:48.623 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7db534f2
2024-04-15 06:06:48.623 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7db534f2
2024-04-15 06:06:48.623 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7eb01b12
2024-04-15 06:06:48.623 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6691490c
2024-04-15 06:06:48.623 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6691490c
2024-04-15 06:06:48.623 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5c1bd44c
2024-04-15 06:06:48.623 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c1bd44c
2024-04-15 06:06:48.623 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c4ca0f9
2024-04-15 06:06:48.623 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2755d705
2024-04-15 06:06:48.624 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@4cc547a
2024-04-15 06:06:48.624 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@61a002b1
2024-04-15 06:06:48.624 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@61a002b1
2024-04-15 06:06:48.624 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7235f92b
2024-04-15 06:06:48.624 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7885776b
2024-04-15 06:06:48.624 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@497d4c96
2024-04-15 06:06:48.624 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3472947a
2024-04-15 06:06:48.624 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@69d3cf7e
2024-04-15 06:06:48.624 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3a3ed300
2024-04-15 06:06:48.624 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1984212d
2024-04-15 06:06:48.624 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@39f5b723
2024-04-15 06:06:48.629 [main] DEBUG org.hibernate.boot.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@65cf4d6d] into BootstrapContext; was [null]
2024-04-15 06:06:48.629 [main] DEBUG org.hibernate.boot.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1b410308] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4b0bd001]
2024-04-15 06:06:48.637 [main] DEBUG org.hibernate.boot.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2024-04-15 06:06:48.637 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2024-04-15 06:06:48.638 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-04-15 06:06:48.638 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-04-15 06:06:48.638 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-04-15 06:06:48.638 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-04-15 06:06:48.638 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-04-15 06:06:48.638 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-04-15 06:06:48.638 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-04-15 06:06:48.638 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-04-15 06:06:48.638 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2024-04-15 06:06:48.638 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-04-15 06:06:48.638 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-04-15 06:06:48.638 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2024-04-15 06:06:48.638 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-04-15 06:06:48.638 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-04-15 06:06:48.638 [main] WARN  org.hibernate.orm.connections.pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2024-04-15 06:06:48.638 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: using driver [org.sqlite.JDBC] at URL [jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db]
2024-04-15 06:06:48.639 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001001: Connection properties: {}
2024-04-15 06:06:48.639 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001003: Autocommit mode: false
2024-04-15 06:06:48.639 [main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
2024-04-15 06:06:48.639 [main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
2024-04-15 06:06:48.640 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Database ->
       name : SQLite
    version : 3.7.2
      major : 3
      minor : 0
2024-04-15 06:06:48.640 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Driver ->
       name : SQLiteJDBC
    version : native
      major : 1
      minor : 1
2024-04-15 06:06:48.640 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - JDBC version : 2.1
2024-04-15 06:06:48.640 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
2024-04-15 06:06:48.640 [main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-04-15 06:06:48.641 [main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-04-15 06:06:48.641 [main] DEBUG org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver - Unable to use Java 1.7 Connection#getSchema
2024-04-15 06:06:48.641 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl - Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.SQLiteDialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:315) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:273) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79) ~[javax.persistence-api-2.2.jar:2.2]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54) ~[javax.persistence-api-2.2.jar:2.2]
	at repository.PatientRepository.<init>(PatientRepository.java:16) ~[classes/:?]
	at Main.main(Main.java:22) ~[classes/:?]
2024-04-15 06:06:48.641 [main] DEBUG org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
2024-04-15 06:06:48.642 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2024-04-15 06:06:48.642 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-04-15 06:06:48.643 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@60aec68a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@25a7fedf]
2024-04-15 06:06:48.643 [main] DEBUG org.hibernate.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-04-15 06:06:48.643 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Doctor
2024-04-15 06:06:48.643 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: doctor.getAll => SELECT s from Doctor s
2024-04-15 06:06:48.644 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:06:48.644 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Doctor
2024-04-15 06:06:48.644 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Doctor on table doctor
2024-04-15 06:06:48.644 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=id, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.645 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Doctor] is safe
2024-04-15 06:06:48.645 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Doctor
2024-04-15 06:06:48.645 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-04-15 06:06:48.645 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:id]
2024-04-15 06:06:48.645 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-04-15 06:06:48.645 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-04-15 06:06:48.645 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2024-04-15 06:06:48.645 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=date_in, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.646 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property date_in with lazy=false
2024-04-15 06:06:48.646 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:date_in]
2024-04-15 06:06:48.646 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for date_in
2024-04-15 06:06:48.646 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property date_in
2024-04-15 06:06:48.646 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.646 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-04-15 06:06:48.646 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:name]
2024-04-15 06:06:48.646 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-04-15 06:06:48.646 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-04-15 06:06:48.646 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=phone, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.646 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property phone with lazy=false
2024-04-15 06:06:48.646 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:phone]
2024-04-15 06:06:48.646 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for phone
2024-04-15 06:06:48.646 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property phone
2024-04-15 06:06:48.646 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=room, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.646 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property room with lazy=false
2024-04-15 06:06:48.646 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:room]
2024-04-15 06:06:48.646 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for room
2024-04-15 06:06:48.647 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property room
2024-04-15 06:06:48.647 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=speciality, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.647 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property speciality with lazy=false
2024-04-15 06:06:48.647 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:speciality]
2024-04-15 06:06:48.647 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for speciality
2024-04-15 06:06:48.647 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property speciality
2024-04-15 06:06:48.647 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Patient
2024-04-15 06:06:48.647 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: patient.getAll => SELECT p from Patient p
2024-04-15 06:06:48.647 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:06:48.648 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Patient
2024-04-15 06:06:48.648 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Patient on table patient
2024-04-15 06:06:48.648 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=card, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.648 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Patient] is safe
2024-04-15 06:06:48.648 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Patient
2024-04-15 06:06:48.648 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property card with lazy=false
2024-04-15 06:06:48.648 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:card]
2024-04-15 06:06:48.648 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for card
2024-04-15 06:06:48.648 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property card
2024-04-15 06:06:48.648 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(card)]), card, identity, , ...)
2024-04-15 06:06:48.648 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=birthday, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.649 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property birthday with lazy=false
2024-04-15 06:06:48.649 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:birthday]
2024-04-15 06:06:48.649 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for birthday
2024-04-15 06:06:48.649 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property birthday
2024-04-15 06:06:48.649 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=male, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.649 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property male with lazy=false
2024-04-15 06:06:48.649 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:male]
2024-04-15 06:06:48.649 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for male
2024-04-15 06:06:48.649 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property male
2024-04-15 06:06:48.649 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.649 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-04-15 06:06:48.649 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:name]
2024-04-15 06:06:48.649 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-04-15 06:06:48.649 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-04-15 06:06:48.650 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Disease
2024-04-15 06:06:48.650 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: disease.getAll => SELECT c from Disease c
2024-04-15 06:06:48.650 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:06:48.650 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Disease
2024-04-15 06:06:48.650 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Disease on table disease
2024-04-15 06:06:48.650 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(disease), mappingColumn=id_disease, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.650 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Disease] is safe
2024-04-15 06:06:48.650 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Disease
2024-04-15 06:06:48.650 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id_disease with lazy=false
2024-04-15 06:06:48.650 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Disease:id_disease]
2024-04-15 06:06:48.650 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id_disease
2024-04-15 06:06:48.650 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_disease
2024-04-15 06:06:48.651 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_disease)]), id_disease, identity, , ...)
2024-04-15 06:06:48.651 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(disease), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.651 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-04-15 06:06:48.651 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Disease:name]
2024-04-15 06:06:48.651 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-04-15 06:06:48.651 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-04-15 06:06:48.651 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(disease), mappingColumn=sign, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.651 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property sign with lazy=false
2024-04-15 06:06:48.651 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Disease:sign]
2024-04-15 06:06:48.651 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for sign
2024-04-15 06:06:48.651 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property sign
2024-04-15 06:06:48.651 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Visit
2024-04-15 06:06:48.651 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: visit.getAll => SELECT v from Visit v
2024-04-15 06:06:48.651 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:06:48.651 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Visit
2024-04-15 06:06:48.652 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Visit on table visit
2024-04-15 06:06:48.652 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.652 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Visit] is safe
2024-04-15 06:06:48.652 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Visit
2024-04-15 06:06:48.652 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-04-15 06:06:48.652 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Visit:id]
2024-04-15 06:06:48.652 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-04-15 06:06:48.652 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-04-15 06:06:48.652 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2024-04-15 06:06:48.652 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=date, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.652 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property date with lazy=false
2024-04-15 06:06:48.652 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Visit:date]
2024-04-15 06:06:48.652 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for date
2024-04-15 06:06:48.652 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property date
2024-04-15 06:06:48.652 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='id_disease', referencedColumn='', mappedBy=''}
2024-04-15 06:06:48.653 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id_disease, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.653 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_disease
2024-04-15 06:06:48.653 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='id_doctor', referencedColumn='', mappedBy=''}
2024-04-15 06:06:48.653 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id_doctor, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.653 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_doctor
2024-04-15 06:06:48.653 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='id_patient', referencedColumn='', mappedBy=''}
2024-04-15 06:06:48.653 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id_patient, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.653 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_patient
2024-04-15 06:06:48.654 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-04-15 06:06:48.654 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for date_in
2024-04-15 06:06:48.654 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-04-15 06:06:48.654 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for phone
2024-04-15 06:06:48.654 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for room
2024-04-15 06:06:48.654 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for speciality
2024-04-15 06:06:48.654 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for card
2024-04-15 06:06:48.654 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for birthday
2024-04-15 06:06:48.654 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for male
2024-04-15 06:06:48.654 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-04-15 06:06:48.654 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id_disease
2024-04-15 06:06:48.654 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-04-15 06:06:48.655 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for sign
2024-04-15 06:06:48.655 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-04-15 06:06:48.655 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for date
2024-04-15 06:06:48.655 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [doctor]
2024-04-15 06:06:48.655 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [card] to be non-null as it is part of the primary key for table [patient]
2024-04-15 06:06:48.655 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_disease] to be non-null as it is part of the primary key for table [disease]
2024-04-15 06:06:48.655 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [visit]
2024-04-15 06:06:48.655 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Disease
2024-04-15 06:06:48.655 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Doctor
2024-04-15 06:06:48.655 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Patient
2024-04-15 06:06:48.656 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Disease
2024-04-15 06:06:48.656 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Doctor
2024-04-15 06:06:48.656 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Patient
2024-04-15 06:06:48.657 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Building session factory
2024-04-15 06:06:48.657 [main] DEBUG org.hibernate.cfg.Settings - SessionFactory name : null
2024-04-15 06:06:48.657 [main] DEBUG org.hibernate.cfg.Settings - Automatic flush during beforeCompletion(): enabled
2024-04-15 06:06:48.657 [main] DEBUG org.hibernate.cfg.Settings - Automatic session close at end of transaction: disabled
2024-04-15 06:06:48.657 [main] DEBUG org.hibernate.cfg.Settings - Statistics: disabled
2024-04-15 06:06:48.657 [main] DEBUG org.hibernate.cfg.Settings - Deleted entity synthetic identifier rollback: disabled
2024-04-15 06:06:48.657 [main] DEBUG org.hibernate.cfg.Settings - Default entity-mode: pojo
2024-04-15 06:06:48.657 [main] DEBUG org.hibernate.cfg.Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2024-04-15 06:06:48.657 [main] DEBUG org.hibernate.cfg.Settings - Allow initialization of lazy state outside session : disabled
2024-04-15 06:06:48.657 [main] DEBUG org.hibernate.cfg.Settings - Using BatchFetchStyle : LEGACY
2024-04-15 06:06:48.657 [main] DEBUG org.hibernate.cfg.Settings - Default batch fetch size: -1
2024-04-15 06:06:48.657 [main] DEBUG org.hibernate.cfg.Settings - Maximum outer join fetch depth: null
2024-04-15 06:06:48.657 [main] DEBUG org.hibernate.cfg.Settings - Default null ordering: NONE
2024-04-15 06:06:48.657 [main] DEBUG org.hibernate.cfg.Settings - Order SQL updates by primary key: disabled
2024-04-15 06:06:48.657 [main] DEBUG org.hibernate.cfg.Settings - Order SQL inserts for batching: disabled
2024-04-15 06:06:48.657 [main] DEBUG org.hibernate.cfg.Settings - multi-tenancy strategy : NONE
2024-04-15 06:06:48.657 [main] DEBUG org.hibernate.cfg.Settings - JTA Track by Thread: enabled
2024-04-15 06:06:48.657 [main] DEBUG org.hibernate.cfg.Settings - Query language substitutions: {}
2024-04-15 06:06:48.657 [main] DEBUG org.hibernate.cfg.Settings - Named query checking : enabled
2024-04-15 06:06:48.657 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache: disabled
2024-04-15 06:06:48.657 [main] DEBUG org.hibernate.cfg.Settings - Second-level query cache: disabled
2024-04-15 06:06:48.657 [main] DEBUG org.hibernate.cfg.Settings - Second-level query cache factory: null
2024-04-15 06:06:48.657 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache region prefix: null
2024-04-15 06:06:48.657 [main] DEBUG org.hibernate.cfg.Settings - Optimize second-level cache for minimal puts: disabled
2024-04-15 06:06:48.657 [main] DEBUG org.hibernate.cfg.Settings - Structured second-level cache entries: disabled
2024-04-15 06:06:48.657 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache direct-reference entries: disabled
2024-04-15 06:06:48.657 [main] DEBUG org.hibernate.cfg.Settings - Automatic eviction of collection cache: disabled
2024-04-15 06:06:48.657 [main] DEBUG org.hibernate.cfg.Settings - JDBC batch size: 1
2024-04-15 06:06:48.657 [main] DEBUG org.hibernate.cfg.Settings - JDBC batch updates for versioned data: enabled
2024-04-15 06:06:48.658 [main] DEBUG org.hibernate.cfg.Settings - Scrollable result sets: disabled
2024-04-15 06:06:48.658 [main] DEBUG org.hibernate.cfg.Settings - Wrap result sets: disabled
2024-04-15 06:06:48.658 [main] DEBUG org.hibernate.cfg.Settings - JDBC3 getGeneratedKeys(): disabled
2024-04-15 06:06:48.658 [main] DEBUG org.hibernate.cfg.Settings - JDBC result set fetch size: null
2024-04-15 06:06:48.658 [main] DEBUG org.hibernate.cfg.Settings - Connection release mode: AFTER_TRANSACTION
2024-04-15 06:06:48.658 [main] DEBUG org.hibernate.cfg.Settings - Generate SQL with comments: disabled
2024-04-15 06:06:48.658 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - query : disabled
2024-04-15 06:06:48.658 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - closed-handling : disabled
2024-04-15 06:06:48.658 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - lists : disabled
2024-04-15 06:06:48.658 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - transactions : disabled
2024-04-15 06:06:48.660 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-04-15 06:06:48.660 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-04-15 06:06:48.660 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2024-04-15 06:06:48.660 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {hibernate.format_sql=true, hibernate.id.new_generator_mappings=false, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, java.class.path=D:\IntellijIdea\Kem Rudolf\Lab2Rizhkov\target\classes;C:\Users\ПК\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\ПК\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\ПК\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\ПК\.m2\repository\net\bytebuddy\byte-buddy\1.12.7\byte-buddy-1.12.7.jar;C:\Users\ПК\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ПК\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\ПК\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\ПК\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\ПК\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\ПК\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\ПК\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\ПК\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\ПК\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\ПК\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\ПК\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\ПК\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\ПК\.m2\repository\org\xerial\sqlite-jdbc\3.7.2\sqlite-jdbc-3.7.2.jar;C:\Users\ПК\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\ПК\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.2\log4j-core-2.17.2.jar;C:\Users\ПК\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Yekaterinburg, javax.persistence.jdbc.url=jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Users\ПК\.jdks\openjdk-19.0.2\bin, sun.java.command=Main, jdk.debug=release, jakarta.persistence.jdbc.driver=org.sqlite.JDBC, sun.cpu.endian=little, user.home=C:\Users\ПК, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\ПК\.jdks\openjdk-19.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=TST, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=org.sqlite.JDBC, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.2+7-44, user.name=ПК, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TST, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=org.sqlite.JDBC, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\90C5~1\AppData\Local\Temp\, java.version=19.0.2, user.dir=D:\IntellijIdea\Kem Rudolf\Lab2Rizhkov, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@79696332, native.encoding=Cp1251, java.library.path=C:\Users\ПК\.jdks\openjdk-19.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Python310;C:\Program Files\Python310\Scripts;D:\nodejs\;C:\php7;C:\Program Files (x86)\dotnet\;C:\Program Files\MySQL\MySQL Server 8.1\bin;c:\windows\system32\OpenSSH\ssh.exe;C:\sqlite;C:\Users\ПК\AppData\Local\Microsoft\WindowsApps;D:\WebStorm 2022.1.4\bin;;C:\Program Files (x86)\OpenVPN\bin;C:\Program Files\Python310\Scripts\;C:\Program Files\Python310\;C:\Users\ПК\AppData\Roaming\npm;C:\php7;C:\Program Files\MySQL\MySQL Server 8.1\bin;c:\windows\system32\OpenSSH\;C:\sqlite;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.2+7-44, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=63.0}
2024-04-15 06:06:48.661 [main] DEBUG org.hibernate.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled
2024-04-15 06:06:48.661 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
2024-04-15 06:06:48.661 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@60aec68a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@ed2f2f6]
2024-04-15 06:06:48.662 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Doctor] is safe
2024-04-15 06:06:48.662 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Doctor
2024-04-15 06:06:48.674 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Patient] is safe
2024-04-15 06:06:48.674 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Patient
2024-04-15 06:06:48.687 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Disease] is safe
2024-04-15 06:06:48.687 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Disease
2024-04-15 06:06:48.698 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.698 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.698 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.698 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.698 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.698 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.698 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Visit] is safe
2024-04-15 06:06:48.698 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Visit
2024-04-15 06:06:48.706 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.706 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.706 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.706 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.706 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.706 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.707 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Doctor
2024-04-15 06:06:48.707 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from doctor where id =?
2024-04-15 06:06:48.707 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select doctor_.id, doctor_.date_in as date_in2_1_, doctor_.name as name3_1_, doctor_.phone as phone4_1_, doctor_.room as room5_1_, doctor_.speciality as speciali6_1_ from doctor doctor_ where doctor_.id=?
2024-04-15 06:06:48.707 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into doctor (date_in, name, phone, room, speciality, id) values (?, ?, ?, ?, ?, ?)
2024-04-15 06:06:48.707 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update doctor set date_in=?, name=?, phone=?, room=?, speciality=? where id=?
2024-04-15 06:06:48.708 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from doctor where id=?
2024-04-15 06:06:48.708 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into doctor (date_in, name, phone, room, speciality) values (?, ?, ?, ?, ?)
2024-04-15 06:06:48.708 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9ab310b]
2024-04-15 06:06:48.708 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date_in
2024-04-15 06:06:48.708 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-04-15 06:06:48.708 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : phone
2024-04-15 06:06:48.708 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : room
2024-04-15 06:06:48.708 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : speciality
2024-04-15 06:06:48.708 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:06:48.708 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:06:48.708 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Doctor)
    - Returns
       - EntityReturnImpl(entity=entity.Doctor, querySpaceUid=<gen:0>, path=entity.Doctor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Doctor)
          - SQL table alias mapping - doctor0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2024-04-15 06:06:48.709 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Doctor [NONE]: select doctor0_.id as id1_1_0_, doctor0_.date_in as date_in2_1_0_, doctor0_.name as name3_1_0_, doctor0_.phone as phone4_1_0_, doctor0_.room as room5_1_0_, doctor0_.speciality as speciali6_1_0_ from doctor doctor0_ where doctor0_.id=?
2024-04-15 06:06:48.709 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Patient
2024-04-15 06:06:48.709 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select card from patient where card =?
2024-04-15 06:06:48.709 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select patient_.card, patient_.birthday as birthday2_2_, patient_.male as male3_2_, patient_.name as name4_2_ from patient patient_ where patient_.card=?
2024-04-15 06:06:48.709 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into patient (birthday, male, name, card) values (?, ?, ?, ?)
2024-04-15 06:06:48.709 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update patient set birthday=?, male=?, name=? where card=?
2024-04-15 06:06:48.709 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from patient where card=?
2024-04-15 06:06:48.709 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into patient (birthday, male, name) values (?, ?, ?)
2024-04-15 06:06:48.709 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49fb0bbd]
2024-04-15 06:06:48.709 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : birthday
2024-04-15 06:06:48.709 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : male
2024-04-15 06:06:48.709 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-04-15 06:06:48.709 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:06:48.709 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:06:48.710 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Patient)
    - Returns
       - EntityReturnImpl(entity=entity.Patient, querySpaceUid=<gen:0>, path=entity.Patient)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Patient)
          - SQL table alias mapping - patient0_
          - alias suffix - 0_
          - suffixed key columns - {card1_2_0_}

2024-04-15 06:06:48.710 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Patient [NONE]: select patient0_.card as card1_2_0_, patient0_.birthday as birthday2_2_0_, patient0_.male as male3_2_0_, patient0_.name as name4_2_0_ from patient patient0_ where patient0_.card=?
2024-04-15 06:06:48.710 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Disease
2024-04-15 06:06:48.710 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id_disease from disease where id_disease =?
2024-04-15 06:06:48.710 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select disease_.id_disease, disease_.name as name2_0_, disease_.sign as sign3_0_ from disease disease_ where disease_.id_disease=?
2024-04-15 06:06:48.710 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into disease (name, sign, id_disease) values (?, ?, ?)
2024-04-15 06:06:48.710 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update disease set name=?, sign=? where id_disease=?
2024-04-15 06:06:48.710 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from disease where id_disease=?
2024-04-15 06:06:48.710 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into disease (name, sign) values (?, ?)
2024-04-15 06:06:48.710 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4faf104]
2024-04-15 06:06:48.710 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-04-15 06:06:48.710 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : sign
2024-04-15 06:06:48.711 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:06:48.711 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:06:48.711 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Disease)
    - Returns
       - EntityReturnImpl(entity=entity.Disease, querySpaceUid=<gen:0>, path=entity.Disease)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Disease)
          - SQL table alias mapping - disease0_
          - alias suffix - 0_
          - suffixed key columns - {id_disea1_0_0_}

2024-04-15 06:06:48.711 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Disease [NONE]: select disease0_.id_disease as id_disea1_0_0_, disease0_.name as name2_0_0_, disease0_.sign as sign3_0_0_ from disease disease0_ where disease0_.id_disease=?
2024-04-15 06:06:48.711 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Visit
2024-04-15 06:06:48.711 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from visit where id =?
2024-04-15 06:06:48.711 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select visit_.id, visit_.date as date2_3_, visit_.id_disease as id_disea3_3_, visit_.id_doctor as id_docto4_3_, visit_.id_patient as id_patie5_3_ from visit visit_ where visit_.id=?
2024-04-15 06:06:48.711 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into visit (date, id_disease, id_doctor, id_patient, id) values (?, ?, ?, ?, ?)
2024-04-15 06:06:48.711 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update visit set date=?, id_disease=?, id_doctor=?, id_patient=? where id=?
2024-04-15 06:06:48.711 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from visit where id=?
2024-04-15 06:06:48.711 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into visit (date, id_disease, id_doctor, id_patient) values (?, ?, ?, ?)
2024-04-15 06:06:48.711 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48a2db72]
2024-04-15 06:06:48.711 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date
2024-04-15 06:06:48.711 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_disease
2024-04-15 06:06:48.711 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21c747a]
2024-04-15 06:06:48.712 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_disease.name
2024-04-15 06:06:48.712 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_disease.sign
2024-04-15 06:06:48.712 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor
2024-04-15 06:06:48.712 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f38091]
2024-04-15 06:06:48.712 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.date_in
2024-04-15 06:06:48.712 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.name
2024-04-15 06:06:48.712 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.phone
2024-04-15 06:06:48.712 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.room
2024-04-15 06:06:48.712 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.speciality
2024-04-15 06:06:48.712 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient
2024-04-15 06:06:48.712 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77c3c037]
2024-04-15 06:06:48.712 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient.birthday
2024-04-15 06:06:48.712 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient.male
2024-04-15 06:06:48.712 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient.name
2024-04-15 06:06:48.712 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:06:48.712 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:06:48.713 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Visit)
    - Returns
       - EntityReturnImpl(entity=entity.Visit, querySpaceUid=<gen:0>, path=entity.Visit)
          - EntityAttributeFetchImpl(entity=entity.Disease, querySpaceUid=<gen:1>, path=entity.Visit.id_disease)
          - EntityAttributeFetchImpl(entity=entity.Doctor, querySpaceUid=<gen:2>, path=entity.Visit.id_doctor)
          - EntityAttributeFetchImpl(entity=entity.Patient, querySpaceUid=<gen:3>, path=entity.Visit.id_patient)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Visit)
          - SQL table alias mapping - visit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(id_disease)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=entity.Disease)
                - SQL table alias mapping - disease1_
                - alias suffix - 1_
                - suffixed key columns - {id_disea1_0_1_}
          - JOIN (JoinDefinedByMetadata(id_doctor)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=entity.Doctor)
                - SQL table alias mapping - doctor2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}
          - JOIN (JoinDefinedByMetadata(id_patient)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=entity.Patient)
                - SQL table alias mapping - patient3_
                - alias suffix - 3_
                - suffixed key columns - {card1_2_3_}

2024-04-15 06:06:48.713 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Visit [NONE]: select visit0_.id as id1_3_0_, visit0_.date as date2_3_0_, visit0_.id_disease as id_disea3_3_0_, visit0_.id_doctor as id_docto4_3_0_, visit0_.id_patient as id_patie5_3_0_, disease1_.id_disease as id_disea1_0_1_, disease1_.name as name2_0_1_, disease1_.sign as sign3_0_1_, doctor2_.id as id1_1_2_, doctor2_.date_in as date_in2_1_2_, doctor2_.name as name3_1_2_, doctor2_.phone as phone4_1_2_, doctor2_.room as room5_1_2_, doctor2_.speciality as speciali6_1_2_, patient3_.card as card1_2_3_, patient3_.birthday as birthday2_2_3_, patient3_.male as male3_2_3_, patient3_.name as name4_2_3_ from visit visit0_ left outer join disease disease1_ on visit0_.id_disease=disease1_.id_disease left outer join doctor doctor2_ on visit0_.id_doctor=doctor2_.id left outer join patient patient3_ on visit0_.id_patient=patient3_.card where visit0_.id=?
2024-04-15 06:06:48.713 [main] DEBUG org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator - No actions specified; doing nothing
2024-04-15 06:06:48.714 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2024-04-15 06:06:48.714 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-04-15 06:06:48.715 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 06:06:48.715 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 06:06:48.715 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 4 named HQL queries
2024-04-15 06:06:48.715 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: visit.getAll
2024-04-15 06:06:48.715 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2024-04-15 06:06:48.715 [main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7c781c42
2024-04-15 06:06:48.715 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT v from entity.Visit v
2024-04-15 06:06:48.716 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.716 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Visit'
       |     \-[ALIAS] Node: 'v'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'v'

2024-04-15 06:06:48.716 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:06:48.716 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Visit (v) -> visit0_
2024-04-15 06:06:48.716 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : v -> visit0_.id
2024-04-15 06:06:48.716 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:06:48.716 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} visit0_.id ) ( FromClause{level=1} visit visit0_ ) )
2024-04-15 06:06:48.717 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Visit): [visit]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Visit)
    |  | originalText: v
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:06:48.717 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [visit visit0_]
2024-04-15 06:06:48.717 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:06:48.717 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (visit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'visit0_.id as id1_3_' {alias=v, className=entity.Visit, tableAlias=visit0_}
    |  \-[SQL_TOKEN] SqlFragment: 'visit0_.date as date2_3_, visit0_.id_disease as id_disea3_3_, visit0_.id_doctor as id_docto4_3_, visit0_.id_patient as id_patie5_3_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[v], fromElementByTableAlias=[visit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'visit visit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=v,role=null,tableName=visit,tableAlias=visit0_,origin=null,columns={,className=entity.Visit}}

2024-04-15 06:06:48.717 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.717 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT v from entity.Visit v
2024-04-15 06:06:48.717 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select visit0_.id as id1_3_, visit0_.date as date2_3_, visit0_.id_disease as id_disea3_3_, visit0_.id_doctor as id_docto4_3_, visit0_.id_patient as id_patie5_3_ from visit visit0_
2024-04-15 06:06:48.717 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.717 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: disease.getAll
2024-04-15 06:06:48.718 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT c from entity.Disease c
2024-04-15 06:06:48.718 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.718 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Disease'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'c'

2024-04-15 06:06:48.718 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:06:48.718 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Disease (c) -> disease0_
2024-04-15 06:06:48.719 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : c -> disease0_.id_disease
2024-04-15 06:06:48.719 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:06:48.719 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} disease0_.id_disease ) ( FromClause{level=1} disease disease0_ ) )
2024-04-15 06:06:48.719 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Disease): [disease]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Disease)
    |  | originalText: c
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:06:48.719 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [disease disease0_]
2024-04-15 06:06:48.719 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:06:48.719 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (disease)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'disease0_.id_disease as id_disea1_0_' {alias=c, className=entity.Disease, tableAlias=disease0_}
    |  \-[SQL_TOKEN] SqlFragment: 'disease0_.name as name2_0_, disease0_.sign as sign3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[disease0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'disease disease0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=disease,tableAlias=disease0_,origin=null,columns={,className=entity.Disease}}

2024-04-15 06:06:48.719 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.719 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT c from entity.Disease c
2024-04-15 06:06:48.719 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select disease0_.id_disease as id_disea1_0_, disease0_.name as name2_0_, disease0_.sign as sign3_0_ from disease disease0_
2024-04-15 06:06:48.719 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.720 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: doctor.getAll
2024-04-15 06:06:48.720 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT s from entity.Doctor s
2024-04-15 06:06:48.720 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.720 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Doctor'
       |     \-[ALIAS] Node: 's'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 's'

2024-04-15 06:06:48.720 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:06:48.720 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Doctor (s) -> doctor0_
2024-04-15 06:06:48.721 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : s -> doctor0_.id
2024-04-15 06:06:48.721 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:06:48.721 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} doctor0_.id ) ( FromClause{level=1} doctor doctor0_ ) )
2024-04-15 06:06:48.721 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Doctor): [doctor]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Doctor)
    |  | originalText: s
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:06:48.721 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [doctor doctor0_]
2024-04-15 06:06:48.721 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:06:48.721 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (doctor)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'doctor0_.id as id1_1_' {alias=s, className=entity.Doctor, tableAlias=doctor0_}
    |  \-[SQL_TOKEN] SqlFragment: 'doctor0_.date_in as date_in2_1_, doctor0_.name as name3_1_, doctor0_.phone as phone4_1_, doctor0_.room as room5_1_, doctor0_.speciality as speciali6_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[doctor0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'doctor doctor0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=doctor,tableAlias=doctor0_,origin=null,columns={,className=entity.Doctor}}

2024-04-15 06:06:48.721 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.722 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT s from entity.Doctor s
2024-04-15 06:06:48.722 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select doctor0_.id as id1_1_, doctor0_.date_in as date_in2_1_, doctor0_.name as name3_1_, doctor0_.phone as phone4_1_, doctor0_.room as room5_1_, doctor0_.speciality as speciali6_1_ from doctor doctor0_
2024-04-15 06:06:48.722 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.722 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: patient.getAll
2024-04-15 06:06:48.722 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT p from entity.Patient p
2024-04-15 06:06:48.722 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.722 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Patient'
       |     \-[ALIAS] Node: 'p'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'p'

2024-04-15 06:06:48.722 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:06:48.723 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Patient (p) -> patient0_
2024-04-15 06:06:48.723 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : p -> patient0_.card
2024-04-15 06:06:48.723 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:06:48.723 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} patient0_.card ) ( FromClause{level=1} patient patient0_ ) )
2024-04-15 06:06:48.723 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Patient): [patient]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Patient)
    |  | originalText: p
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:06:48.723 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [patient patient0_]
2024-04-15 06:06:48.723 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:06:48.723 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (patient)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'patient0_.card as card1_2_' {alias=p, className=entity.Patient, tableAlias=patient0_}
    |  \-[SQL_TOKEN] SqlFragment: 'patient0_.birthday as birthday2_2_, patient0_.male as male3_2_, patient0_.name as name4_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[patient0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'patient patient0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=patient,tableAlias=patient0_,origin=null,columns={,className=entity.Patient}}

2024-04-15 06:06:48.723 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.724 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT p from entity.Patient p
2024-04-15 06:06:48.724 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select patient0_.card as card1_2_, patient0_.birthday as birthday2_2_, patient0_.male as male3_2_, patient0_.name as name4_2_ from patient patient0_
2024-04-15 06:06:48.724 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.724 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named SQL queries
2024-04-15 06:06:48.724 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-04-15 06:06:48.724 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: 15896fe5-341b-4086-a35b-9224039c3a7c (<unnamed>)
2024-04-15 06:06:48.724 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2024-04-15 06:06:48.727 [main] DEBUG org.hibernate.jpa.HibernatePersistenceProvider - Located and parsed 1 persistence units; checking each
2024-04-15 06:06:48.727 [main] DEBUG org.hibernate.jpa.HibernatePersistenceProvider - Checking persistence-unit [name=TST, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [TST]
2024-04-15 06:06:48.728 [main] DEBUG org.hibernate.jpa.boot.spi.ProviderChecker - Persistence-unit [TST] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2024-04-15 06:06:48.728 [main] DEBUG org.hibernate.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: TST
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/IntellijIdea/Kem%20Rudolf/Lab2Rizhkov/target/classes
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		entity.Visit
		entity.Doctor
		entity.Disease
		entity.Patient]
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.sqlite.JDBC
		hibernate.dialect: org.hibernate.dialect.SQLiteDialect
		javax.persistence.jdbc.url: jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db
		hibernate.id.new_generator_mappings: false
		hibernate.show_sql: false
		hibernate.format_sql: true]
2024-04-15 06:06:48.728 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2024-04-15 06:06:48.728 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2024-04-15 06:06:48.728 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@53ab0286
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@53ab0286
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@53ab0286
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@172ca72b
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5e8f9e2d
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@4204541c
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@69c79f09
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@69c79f09
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@69c79f09
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@62679465
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@62679465
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@62679465
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2552f2cb
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2552f2cb
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2552f2cb
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@94f6bfb
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@94f6bfb
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@94f6bfb
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5f59185e
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5f59185e
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5f59185e
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@28a0fd6c
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@28a0fd6c
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@28a0fd6c
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6b5966e1
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6b5966e1
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6b5966e1
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@37f21974
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@37f21974
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@362a019c
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@362a019c
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5ab14cb9
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5ab14cb9
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@31024624
2024-04-15 06:06:48.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@40dd3977
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@591e58fa
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@591e58fa
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@493dfb8e
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@493dfb8e
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@361c294e
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@361c294e
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7876d598
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7876d598
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@332a7fce
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@332a7fce
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2416a51
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2416a51
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1fc0053e
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1fc0053e
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@18e7143f
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@18e7143f
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@8a589a2
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@8a589a2
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@11dee337
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@11dee337
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6bab2585
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6bab2585
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@62923ee6
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@62923ee6
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@62923ee6
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@b91d8c4
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2baa8d82
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2baa8d82
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2baa8d82
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2b52c0d6
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@cdc3aae
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5471388b
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5471388b
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@142eef62
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@142eef62
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@12cd9150
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12cd9150
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@c9413d8
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@c9413d8
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7caa550
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7caa550
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@70fab835
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@53499d85
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@53499d85
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@53499d85
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5ae76500
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5ae76500
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5ae76500
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@60cf80e7
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@54107f42
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@21ec5d87
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@21ec5d87
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@21ec5d87
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b28f282
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b28f282
2024-04-15 06:06:48.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b28f282
2024-04-15 06:06:48.731 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@455351c4
2024-04-15 06:06:48.731 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@16423501
2024-04-15 06:06:48.731 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7db534f2
2024-04-15 06:06:48.731 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7db534f2
2024-04-15 06:06:48.731 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7eb01b12
2024-04-15 06:06:48.731 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6691490c
2024-04-15 06:06:48.731 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6691490c
2024-04-15 06:06:48.731 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5c1bd44c
2024-04-15 06:06:48.731 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c1bd44c
2024-04-15 06:06:48.731 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c4ca0f9
2024-04-15 06:06:48.731 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2755d705
2024-04-15 06:06:48.731 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@4cc547a
2024-04-15 06:06:48.731 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@61a002b1
2024-04-15 06:06:48.731 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@61a002b1
2024-04-15 06:06:48.731 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7c369270
2024-04-15 06:06:48.731 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@9f86dc3
2024-04-15 06:06:48.731 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@41d16cc3
2024-04-15 06:06:48.731 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@662e682a
2024-04-15 06:06:48.731 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e43c38d
2024-04-15 06:06:48.731 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@649f25f3
2024-04-15 06:06:48.731 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2e62ead7
2024-04-15 06:06:48.731 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3b98b809
2024-04-15 06:06:48.735 [main] DEBUG org.hibernate.boot.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@e09f1b6] into BootstrapContext; was [null]
2024-04-15 06:06:48.735 [main] DEBUG org.hibernate.boot.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@557b6a37] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@11b32a14]
2024-04-15 06:06:48.741 [main] DEBUG org.hibernate.boot.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2024-04-15 06:06:48.741 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2024-04-15 06:06:48.741 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-04-15 06:06:48.741 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-04-15 06:06:48.741 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-04-15 06:06:48.741 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-04-15 06:06:48.741 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-04-15 06:06:48.741 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-04-15 06:06:48.741 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-04-15 06:06:48.741 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-04-15 06:06:48.741 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2024-04-15 06:06:48.741 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-04-15 06:06:48.741 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-04-15 06:06:48.741 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2024-04-15 06:06:48.741 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-04-15 06:06:48.741 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-04-15 06:06:48.741 [main] WARN  org.hibernate.orm.connections.pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2024-04-15 06:06:48.741 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: using driver [org.sqlite.JDBC] at URL [jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db]
2024-04-15 06:06:48.741 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001001: Connection properties: {}
2024-04-15 06:06:48.741 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001003: Autocommit mode: false
2024-04-15 06:06:48.741 [main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
2024-04-15 06:06:48.741 [main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
2024-04-15 06:06:48.742 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Database ->
       name : SQLite
    version : 3.7.2
      major : 3
      minor : 0
2024-04-15 06:06:48.742 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Driver ->
       name : SQLiteJDBC
    version : native
      major : 1
      minor : 1
2024-04-15 06:06:48.742 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - JDBC version : 2.1
2024-04-15 06:06:48.742 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
2024-04-15 06:06:48.742 [main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-04-15 06:06:48.742 [main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-04-15 06:06:48.743 [main] DEBUG org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver - Unable to use Java 1.7 Connection#getSchema
2024-04-15 06:06:48.743 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl - Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.SQLiteDialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:315) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:273) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79) ~[javax.persistence-api-2.2.jar:2.2]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54) ~[javax.persistence-api-2.2.jar:2.2]
	at repository.VisitRepository.<init>(VisitRepository.java:22) ~[classes/:?]
	at Main.main(Main.java:23) ~[classes/:?]
2024-04-15 06:06:48.743 [main] DEBUG org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
2024-04-15 06:06:48.743 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2024-04-15 06:06:48.743 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory -     - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-04-15 06:06:48.744 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d88f893] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@259b85d6]
2024-04-15 06:06:48.744 [main] DEBUG org.hibernate.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-04-15 06:06:48.744 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Doctor
2024-04-15 06:06:48.744 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: doctor.getAll => SELECT s from Doctor s
2024-04-15 06:06:48.744 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:06:48.744 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Doctor
2024-04-15 06:06:48.744 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Doctor on table doctor
2024-04-15 06:06:48.744 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=id, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.744 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Doctor] is safe
2024-04-15 06:06:48.744 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Doctor
2024-04-15 06:06:48.745 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-04-15 06:06:48.745 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:id]
2024-04-15 06:06:48.745 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-04-15 06:06:48.745 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-04-15 06:06:48.745 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2024-04-15 06:06:48.745 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=date_in, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.745 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property date_in with lazy=false
2024-04-15 06:06:48.745 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:date_in]
2024-04-15 06:06:48.745 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for date_in
2024-04-15 06:06:48.745 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property date_in
2024-04-15 06:06:48.745 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.745 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-04-15 06:06:48.745 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:name]
2024-04-15 06:06:48.745 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-04-15 06:06:48.745 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-04-15 06:06:48.745 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=phone, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.745 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property phone with lazy=false
2024-04-15 06:06:48.745 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:phone]
2024-04-15 06:06:48.745 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for phone
2024-04-15 06:06:48.745 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property phone
2024-04-15 06:06:48.745 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=room, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.745 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property room with lazy=false
2024-04-15 06:06:48.745 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:room]
2024-04-15 06:06:48.745 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for room
2024-04-15 06:06:48.745 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property room
2024-04-15 06:06:48.745 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(doctor), mappingColumn=speciality, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.745 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property speciality with lazy=false
2024-04-15 06:06:48.745 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Doctor:speciality]
2024-04-15 06:06:48.745 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for speciality
2024-04-15 06:06:48.745 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property speciality
2024-04-15 06:06:48.746 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Patient
2024-04-15 06:06:48.746 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: patient.getAll => SELECT p from Patient p
2024-04-15 06:06:48.746 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:06:48.746 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Patient
2024-04-15 06:06:48.746 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Patient on table patient
2024-04-15 06:06:48.746 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=card, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.746 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Patient] is safe
2024-04-15 06:06:48.746 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Patient
2024-04-15 06:06:48.746 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property card with lazy=false
2024-04-15 06:06:48.746 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:card]
2024-04-15 06:06:48.746 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for card
2024-04-15 06:06:48.746 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property card
2024-04-15 06:06:48.746 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(card)]), card, identity, , ...)
2024-04-15 06:06:48.746 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=birthday, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.746 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property birthday with lazy=false
2024-04-15 06:06:48.746 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:birthday]
2024-04-15 06:06:48.746 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for birthday
2024-04-15 06:06:48.746 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property birthday
2024-04-15 06:06:48.746 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=male, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.747 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property male with lazy=false
2024-04-15 06:06:48.747 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:male]
2024-04-15 06:06:48.747 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for male
2024-04-15 06:06:48.747 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property male
2024-04-15 06:06:48.749 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.749 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-04-15 06:06:48.749 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Patient:name]
2024-04-15 06:06:48.749 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-04-15 06:06:48.749 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-04-15 06:06:48.749 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Disease
2024-04-15 06:06:48.749 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: disease.getAll => SELECT c from Disease c
2024-04-15 06:06:48.749 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:06:48.749 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Disease
2024-04-15 06:06:48.749 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Disease on table disease
2024-04-15 06:06:48.750 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(disease), mappingColumn=id_disease, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.750 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Disease] is safe
2024-04-15 06:06:48.750 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Disease
2024-04-15 06:06:48.750 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id_disease with lazy=false
2024-04-15 06:06:48.750 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Disease:id_disease]
2024-04-15 06:06:48.750 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id_disease
2024-04-15 06:06:48.750 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_disease
2024-04-15 06:06:48.750 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_disease)]), id_disease, identity, , ...)
2024-04-15 06:06:48.750 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(disease), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.750 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2024-04-15 06:06:48.750 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Disease:name]
2024-04-15 06:06:48.750 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
2024-04-15 06:06:48.750 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
2024-04-15 06:06:48.750 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(disease), mappingColumn=sign, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.750 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property sign with lazy=false
2024-04-15 06:06:48.750 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Disease:sign]
2024-04-15 06:06:48.750 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for sign
2024-04-15 06:06:48.750 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property sign
2024-04-15 06:06:48.750 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: entity.Visit
2024-04-15 06:06:48.750 [main] DEBUG org.hibernate.cfg.annotations.QueryBinder - Binding named query: visit.getAll => SELECT v from Visit v
2024-04-15 06:06:48.751 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-04-15 06:06:48.751 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Visit
2024-04-15 06:06:48.751 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity entity.Visit on table visit
2024-04-15 06:06:48.751 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.751 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Visit] is safe
2024-04-15 06:06:48.751 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Visit
2024-04-15 06:06:48.751 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-04-15 06:06:48.751 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Visit:id]
2024-04-15 06:06:48.751 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
2024-04-15 06:06:48.751 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
2024-04-15 06:06:48.751 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2024-04-15 06:06:48.751 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=date, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.751 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property date with lazy=false
2024-04-15 06:06:48.751 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Visit:date]
2024-04-15 06:06:48.751 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for date
2024-04-15 06:06:48.751 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property date
2024-04-15 06:06:48.752 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='id_disease', referencedColumn='', mappedBy=''}
2024-04-15 06:06:48.752 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id_disease, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.752 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_disease
2024-04-15 06:06:48.752 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='id_doctor', referencedColumn='', mappedBy=''}
2024-04-15 06:06:48.752 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id_doctor, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.752 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_doctor
2024-04-15 06:06:48.752 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='id_patient', referencedColumn='', mappedBy=''}
2024-04-15 06:06:48.752 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(visit), mappingColumn=id_patient, insertable=true, updatable=true, unique=false}
2024-04-15 06:06:48.752 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id_patient
2024-04-15 06:06:48.753 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-04-15 06:06:48.753 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for date_in
2024-04-15 06:06:48.753 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-04-15 06:06:48.753 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for phone
2024-04-15 06:06:48.753 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for room
2024-04-15 06:06:48.753 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for speciality
2024-04-15 06:06:48.753 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for card
2024-04-15 06:06:48.753 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for birthday
2024-04-15 06:06:48.753 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for male
2024-04-15 06:06:48.753 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-04-15 06:06:48.753 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id_disease
2024-04-15 06:06:48.753 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
2024-04-15 06:06:48.753 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for sign
2024-04-15 06:06:48.753 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
2024-04-15 06:06:48.753 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for date
2024-04-15 06:06:48.753 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [doctor]
2024-04-15 06:06:48.753 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [card] to be non-null as it is part of the primary key for table [patient]
2024-04-15 06:06:48.753 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id_disease] to be non-null as it is part of the primary key for table [disease]
2024-04-15 06:06:48.753 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [visit]
2024-04-15 06:06:48.753 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Disease
2024-04-15 06:06:48.753 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Doctor
2024-04-15 06:06:48.754 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Patient
2024-04-15 06:06:48.754 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Disease
2024-04-15 06:06:48.754 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Doctor
2024-04-15 06:06:48.754 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: entity.Patient
2024-04-15 06:06:48.755 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Building session factory
2024-04-15 06:06:48.755 [main] DEBUG org.hibernate.cfg.Settings - SessionFactory name : null
2024-04-15 06:06:48.755 [main] DEBUG org.hibernate.cfg.Settings - Automatic flush during beforeCompletion(): enabled
2024-04-15 06:06:48.755 [main] DEBUG org.hibernate.cfg.Settings - Automatic session close at end of transaction: disabled
2024-04-15 06:06:48.755 [main] DEBUG org.hibernate.cfg.Settings - Statistics: disabled
2024-04-15 06:06:48.755 [main] DEBUG org.hibernate.cfg.Settings - Deleted entity synthetic identifier rollback: disabled
2024-04-15 06:06:48.755 [main] DEBUG org.hibernate.cfg.Settings - Default entity-mode: pojo
2024-04-15 06:06:48.755 [main] DEBUG org.hibernate.cfg.Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2024-04-15 06:06:48.755 [main] DEBUG org.hibernate.cfg.Settings - Allow initialization of lazy state outside session : disabled
2024-04-15 06:06:48.755 [main] DEBUG org.hibernate.cfg.Settings - Using BatchFetchStyle : LEGACY
2024-04-15 06:06:48.755 [main] DEBUG org.hibernate.cfg.Settings - Default batch fetch size: -1
2024-04-15 06:06:48.755 [main] DEBUG org.hibernate.cfg.Settings - Maximum outer join fetch depth: null
2024-04-15 06:06:48.755 [main] DEBUG org.hibernate.cfg.Settings - Default null ordering: NONE
2024-04-15 06:06:48.755 [main] DEBUG org.hibernate.cfg.Settings - Order SQL updates by primary key: disabled
2024-04-15 06:06:48.755 [main] DEBUG org.hibernate.cfg.Settings - Order SQL inserts for batching: disabled
2024-04-15 06:06:48.755 [main] DEBUG org.hibernate.cfg.Settings - multi-tenancy strategy : NONE
2024-04-15 06:06:48.755 [main] DEBUG org.hibernate.cfg.Settings - JTA Track by Thread: enabled
2024-04-15 06:06:48.755 [main] DEBUG org.hibernate.cfg.Settings - Query language substitutions: {}
2024-04-15 06:06:48.755 [main] DEBUG org.hibernate.cfg.Settings - Named query checking : enabled
2024-04-15 06:06:48.755 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache: disabled
2024-04-15 06:06:48.755 [main] DEBUG org.hibernate.cfg.Settings - Second-level query cache: disabled
2024-04-15 06:06:48.755 [main] DEBUG org.hibernate.cfg.Settings - Second-level query cache factory: null
2024-04-15 06:06:48.755 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache region prefix: null
2024-04-15 06:06:48.755 [main] DEBUG org.hibernate.cfg.Settings - Optimize second-level cache for minimal puts: disabled
2024-04-15 06:06:48.755 [main] DEBUG org.hibernate.cfg.Settings - Structured second-level cache entries: disabled
2024-04-15 06:06:48.755 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache direct-reference entries: disabled
2024-04-15 06:06:48.755 [main] DEBUG org.hibernate.cfg.Settings - Automatic eviction of collection cache: disabled
2024-04-15 06:06:48.755 [main] DEBUG org.hibernate.cfg.Settings - JDBC batch size: 1
2024-04-15 06:06:48.755 [main] DEBUG org.hibernate.cfg.Settings - JDBC batch updates for versioned data: enabled
2024-04-15 06:06:48.755 [main] DEBUG org.hibernate.cfg.Settings - Scrollable result sets: disabled
2024-04-15 06:06:48.756 [main] DEBUG org.hibernate.cfg.Settings - Wrap result sets: disabled
2024-04-15 06:06:48.756 [main] DEBUG org.hibernate.cfg.Settings - JDBC3 getGeneratedKeys(): disabled
2024-04-15 06:06:48.756 [main] DEBUG org.hibernate.cfg.Settings - JDBC result set fetch size: null
2024-04-15 06:06:48.756 [main] DEBUG org.hibernate.cfg.Settings - Connection release mode: AFTER_TRANSACTION
2024-04-15 06:06:48.756 [main] DEBUG org.hibernate.cfg.Settings - Generate SQL with comments: disabled
2024-04-15 06:06:48.756 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - query : disabled
2024-04-15 06:06:48.756 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - closed-handling : disabled
2024-04-15 06:06:48.756 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - lists : disabled
2024-04-15 06:06:48.756 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - transactions : disabled
2024-04-15 06:06:48.756 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-04-15 06:06:48.756 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-04-15 06:06:48.757 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2024-04-15 06:06:48.757 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {hibernate.format_sql=true, hibernate.id.new_generator_mappings=false, java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, java.class.path=D:\IntellijIdea\Kem Rudolf\Lab2Rizhkov\target\classes;C:\Users\ПК\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\ПК\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\ПК\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\ПК\.m2\repository\net\bytebuddy\byte-buddy\1.12.7\byte-buddy-1.12.7.jar;C:\Users\ПК\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ПК\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\ПК\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\ПК\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\ПК\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\ПК\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\ПК\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\ПК\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\ПК\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\ПК\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\ПК\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\ПК\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\ПК\.m2\repository\org\xerial\sqlite-jdbc\3.7.2\sqlite-jdbc-3.7.2.jar;C:\Users\ПК\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\ПК\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.2\log4j-core-2.17.2.jar;C:\Users\ПК\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Yekaterinburg, javax.persistence.jdbc.url=jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Users\ПК\.jdks\openjdk-19.0.2\bin, sun.java.command=Main, jdk.debug=release, jakarta.persistence.jdbc.driver=org.sqlite.JDBC, sun.cpu.endian=little, user.home=C:\Users\ПК, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\ПК\.jdks\openjdk-19.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=TST, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=org.sqlite.JDBC, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.2+7-44, user.name=ПК, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TST, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=org.sqlite.JDBC, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\90C5~1\AppData\Local\Temp\, java.version=19.0.2, user.dir=D:\IntellijIdea\Kem Rudolf\Lab2Rizhkov, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6411504a, native.encoding=Cp1251, java.library.path=C:\Users\ПК\.jdks\openjdk-19.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Python310;C:\Program Files\Python310\Scripts;D:\nodejs\;C:\php7;C:\Program Files (x86)\dotnet\;C:\Program Files\MySQL\MySQL Server 8.1\bin;c:\windows\system32\OpenSSH\ssh.exe;C:\sqlite;C:\Users\ПК\AppData\Local\Microsoft\WindowsApps;D:\WebStorm 2022.1.4\bin;;C:\Program Files (x86)\OpenVPN\bin;C:\Program Files\Python310\Scripts\;C:\Program Files\Python310\;C:\Users\ПК\AppData\Roaming\npm;C:\php7;C:\Program Files\MySQL\MySQL Server 8.1\bin;c:\windows\system32\OpenSSH\;C:\sqlite;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.2+7-44, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=63.0}
2024-04-15 06:06:48.757 [main] DEBUG org.hibernate.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled
2024-04-15 06:06:48.757 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
2024-04-15 06:06:48.757 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d88f893] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@554188ac]
2024-04-15 06:06:48.758 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Doctor] is safe
2024-04-15 06:06:48.758 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Doctor
2024-04-15 06:06:48.765 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Patient] is safe
2024-04-15 06:06:48.765 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Patient
2024-04-15 06:06:48.771 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Disease] is safe
2024-04-15 06:06:48.771 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Disease
2024-04-15 06:06:48.775 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.775 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.775 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.775 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.775 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.775 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.775 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [entity.Visit] is safe
2024-04-15 06:06:48.775 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Visit
2024-04-15 06:06:48.779 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.779 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.779 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.779 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_disease` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.779 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.779 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `entity.Visit#id_patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-04-15 06:06:48.780 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Doctor
2024-04-15 06:06:48.780 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from doctor where id =?
2024-04-15 06:06:48.780 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select doctor_.id, doctor_.date_in as date_in2_1_, doctor_.name as name3_1_, doctor_.phone as phone4_1_, doctor_.room as room5_1_, doctor_.speciality as speciali6_1_ from doctor doctor_ where doctor_.id=?
2024-04-15 06:06:48.780 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into doctor (date_in, name, phone, room, speciality, id) values (?, ?, ?, ?, ?, ?)
2024-04-15 06:06:48.780 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update doctor set date_in=?, name=?, phone=?, room=?, speciality=? where id=?
2024-04-15 06:06:48.780 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from doctor where id=?
2024-04-15 06:06:48.780 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into doctor (date_in, name, phone, room, speciality) values (?, ?, ?, ?, ?)
2024-04-15 06:06:48.780 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b202ff]
2024-04-15 06:06:48.780 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date_in
2024-04-15 06:06:48.780 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-04-15 06:06:48.780 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : phone
2024-04-15 06:06:48.780 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : room
2024-04-15 06:06:48.780 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : speciality
2024-04-15 06:06:48.780 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:06:48.780 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:06:48.780 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Doctor)
    - Returns
       - EntityReturnImpl(entity=entity.Doctor, querySpaceUid=<gen:0>, path=entity.Doctor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Doctor)
          - SQL table alias mapping - doctor0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2024-04-15 06:06:48.780 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Doctor [NONE]: select doctor0_.id as id1_1_0_, doctor0_.date_in as date_in2_1_0_, doctor0_.name as name3_1_0_, doctor0_.phone as phone4_1_0_, doctor0_.room as room5_1_0_, doctor0_.speciality as speciali6_1_0_ from doctor doctor0_ where doctor0_.id=?
2024-04-15 06:06:48.780 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Patient
2024-04-15 06:06:48.780 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select card from patient where card =?
2024-04-15 06:06:48.780 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select patient_.card, patient_.birthday as birthday2_2_, patient_.male as male3_2_, patient_.name as name4_2_ from patient patient_ where patient_.card=?
2024-04-15 06:06:48.780 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into patient (birthday, male, name, card) values (?, ?, ?, ?)
2024-04-15 06:06:48.780 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update patient set birthday=?, male=?, name=? where card=?
2024-04-15 06:06:48.780 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from patient where card=?
2024-04-15 06:06:48.780 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into patient (birthday, male, name) values (?, ?, ?)
2024-04-15 06:06:48.780 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e700eba]
2024-04-15 06:06:48.780 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : birthday
2024-04-15 06:06:48.780 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : male
2024-04-15 06:06:48.780 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-04-15 06:06:48.781 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:06:48.781 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:06:48.781 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Patient)
    - Returns
       - EntityReturnImpl(entity=entity.Patient, querySpaceUid=<gen:0>, path=entity.Patient)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Patient)
          - SQL table alias mapping - patient0_
          - alias suffix - 0_
          - suffixed key columns - {card1_2_0_}

2024-04-15 06:06:48.781 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Patient [NONE]: select patient0_.card as card1_2_0_, patient0_.birthday as birthday2_2_0_, patient0_.male as male3_2_0_, patient0_.name as name4_2_0_ from patient patient0_ where patient0_.card=?
2024-04-15 06:06:48.781 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Disease
2024-04-15 06:06:48.781 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id_disease from disease where id_disease =?
2024-04-15 06:06:48.781 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select disease_.id_disease, disease_.name as name2_0_, disease_.sign as sign3_0_ from disease disease_ where disease_.id_disease=?
2024-04-15 06:06:48.781 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into disease (name, sign, id_disease) values (?, ?, ?)
2024-04-15 06:06:48.781 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update disease set name=?, sign=? where id_disease=?
2024-04-15 06:06:48.781 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from disease where id_disease=?
2024-04-15 06:06:48.781 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into disease (name, sign) values (?, ?)
2024-04-15 06:06:48.781 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7186b202]
2024-04-15 06:06:48.781 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
2024-04-15 06:06:48.781 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : sign
2024-04-15 06:06:48.781 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:06:48.781 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:06:48.781 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Disease)
    - Returns
       - EntityReturnImpl(entity=entity.Disease, querySpaceUid=<gen:0>, path=entity.Disease)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Disease)
          - SQL table alias mapping - disease0_
          - alias suffix - 0_
          - suffixed key columns - {id_disea1_0_0_}

2024-04-15 06:06:48.782 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Disease [NONE]: select disease0_.id_disease as id_disea1_0_0_, disease0_.name as name2_0_0_, disease0_.sign as sign3_0_0_ from disease disease0_ where disease0_.id_disease=?
2024-04-15 06:06:48.782 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: entity.Visit
2024-04-15 06:06:48.782 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from visit where id =?
2024-04-15 06:06:48.782 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select visit_.id, visit_.date as date2_3_, visit_.id_disease as id_disea3_3_, visit_.id_doctor as id_docto4_3_, visit_.id_patient as id_patie5_3_ from visit visit_ where visit_.id=?
2024-04-15 06:06:48.782 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into visit (date, id_disease, id_doctor, id_patient, id) values (?, ?, ?, ?, ?)
2024-04-15 06:06:48.782 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update visit set date=?, id_disease=?, id_doctor=?, id_patient=? where id=?
2024-04-15 06:06:48.782 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from visit where id=?
2024-04-15 06:06:48.782 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into visit (date, id_disease, id_doctor, id_patient) values (?, ?, ?, ?)
2024-04-15 06:06:48.782 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65ef48f2]
2024-04-15 06:06:48.782 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date
2024-04-15 06:06:48.782 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_disease
2024-04-15 06:06:48.782 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72543547]
2024-04-15 06:06:48.782 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_disease.name
2024-04-15 06:06:48.782 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_disease.sign
2024-04-15 06:06:48.782 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor
2024-04-15 06:06:48.782 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22bf9122]
2024-04-15 06:06:48.782 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.date_in
2024-04-15 06:06:48.782 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.name
2024-04-15 06:06:48.782 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.phone
2024-04-15 06:06:48.782 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.room
2024-04-15 06:06:48.782 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_doctor.speciality
2024-04-15 06:06:48.782 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient
2024-04-15 06:06:48.782 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73afe2b7]
2024-04-15 06:06:48.782 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient.birthday
2024-04-15 06:06:48.782 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient.male
2024-04-15 06:06:48.782 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : id_patient.name
2024-04-15 06:06:48.782 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2024-04-15 06:06:48.783 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2024-04-15 06:06:48.783 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=entity.Visit)
    - Returns
       - EntityReturnImpl(entity=entity.Visit, querySpaceUid=<gen:0>, path=entity.Visit)
          - EntityAttributeFetchImpl(entity=entity.Disease, querySpaceUid=<gen:1>, path=entity.Visit.id_disease)
          - EntityAttributeFetchImpl(entity=entity.Doctor, querySpaceUid=<gen:2>, path=entity.Visit.id_doctor)
          - EntityAttributeFetchImpl(entity=entity.Patient, querySpaceUid=<gen:3>, path=entity.Visit.id_patient)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Visit)
          - SQL table alias mapping - visit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(id_disease)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=entity.Disease)
                - SQL table alias mapping - disease1_
                - alias suffix - 1_
                - suffixed key columns - {id_disea1_0_1_}
          - JOIN (JoinDefinedByMetadata(id_doctor)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=entity.Doctor)
                - SQL table alias mapping - doctor2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}
          - JOIN (JoinDefinedByMetadata(id_patient)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=entity.Patient)
                - SQL table alias mapping - patient3_
                - alias suffix - 3_
                - suffixed key columns - {card1_2_3_}

2024-04-15 06:06:48.783 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity entity.Visit [NONE]: select visit0_.id as id1_3_0_, visit0_.date as date2_3_0_, visit0_.id_disease as id_disea3_3_0_, visit0_.id_doctor as id_docto4_3_0_, visit0_.id_patient as id_patie5_3_0_, disease1_.id_disease as id_disea1_0_1_, disease1_.name as name2_0_1_, disease1_.sign as sign3_0_1_, doctor2_.id as id1_1_2_, doctor2_.date_in as date_in2_1_2_, doctor2_.name as name3_1_2_, doctor2_.phone as phone4_1_2_, doctor2_.room as room5_1_2_, doctor2_.speciality as speciali6_1_2_, patient3_.card as card1_2_3_, patient3_.birthday as birthday2_2_3_, patient3_.male as male3_2_3_, patient3_.name as name4_2_3_ from visit visit0_ left outer join disease disease1_ on visit0_.id_disease=disease1_.id_disease left outer join doctor doctor2_ on visit0_.id_doctor=doctor2_.id left outer join patient patient3_ on visit0_.id_patient=patient3_.card where visit0_.id=?
2024-04-15 06:06:48.784 [main] DEBUG org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator - No actions specified; doing nothing
2024-04-15 06:06:48.784 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2024-04-15 06:06:48.784 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-04-15 06:06:48.785 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 06:06:48.785 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 06:06:48.785 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 4 named HQL queries
2024-04-15 06:06:48.785 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: visit.getAll
2024-04-15 06:06:48.785 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2024-04-15 06:06:48.785 [main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7c781c42
2024-04-15 06:06:48.785 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT v from entity.Visit v
2024-04-15 06:06:48.785 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.786 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Visit'
       |     \-[ALIAS] Node: 'v'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'v'

2024-04-15 06:06:48.786 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:06:48.786 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Visit (v) -> visit0_
2024-04-15 06:06:48.786 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : v -> visit0_.id
2024-04-15 06:06:48.786 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:06:48.786 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} visit0_.id ) ( FromClause{level=1} visit visit0_ ) )
2024-04-15 06:06:48.786 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Visit): [visit]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Visit)
    |  | originalText: v
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:06:48.786 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [visit visit0_]
2024-04-15 06:06:48.786 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:06:48.787 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (visit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'visit0_.id as id1_3_' {alias=v, className=entity.Visit, tableAlias=visit0_}
    |  \-[SQL_TOKEN] SqlFragment: 'visit0_.date as date2_3_, visit0_.id_disease as id_disea3_3_, visit0_.id_doctor as id_docto4_3_, visit0_.id_patient as id_patie5_3_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[v], fromElementByTableAlias=[visit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'visit visit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=v,role=null,tableName=visit,tableAlias=visit0_,origin=null,columns={,className=entity.Visit}}

2024-04-15 06:06:48.787 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.787 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT v from entity.Visit v
2024-04-15 06:06:48.787 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select visit0_.id as id1_3_, visit0_.date as date2_3_, visit0_.id_disease as id_disea3_3_, visit0_.id_doctor as id_docto4_3_, visit0_.id_patient as id_patie5_3_ from visit visit0_
2024-04-15 06:06:48.787 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.787 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: disease.getAll
2024-04-15 06:06:48.787 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT c from entity.Disease c
2024-04-15 06:06:48.787 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.787 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Disease'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'c'

2024-04-15 06:06:48.787 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:06:48.787 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Disease (c) -> disease0_
2024-04-15 06:06:48.788 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : c -> disease0_.id_disease
2024-04-15 06:06:48.788 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:06:48.788 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} disease0_.id_disease ) ( FromClause{level=1} disease disease0_ ) )
2024-04-15 06:06:48.788 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Disease): [disease]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Disease)
    |  | originalText: c
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:06:48.788 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [disease disease0_]
2024-04-15 06:06:48.788 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:06:48.788 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (disease)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'disease0_.id_disease as id_disea1_0_' {alias=c, className=entity.Disease, tableAlias=disease0_}
    |  \-[SQL_TOKEN] SqlFragment: 'disease0_.name as name2_0_, disease0_.sign as sign3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[disease0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'disease disease0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=disease,tableAlias=disease0_,origin=null,columns={,className=entity.Disease}}

2024-04-15 06:06:48.788 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.788 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT c from entity.Disease c
2024-04-15 06:06:48.788 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select disease0_.id_disease as id_disea1_0_, disease0_.name as name2_0_, disease0_.sign as sign3_0_ from disease disease0_
2024-04-15 06:06:48.788 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.788 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: doctor.getAll
2024-04-15 06:06:48.788 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT s from entity.Doctor s
2024-04-15 06:06:48.789 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.789 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Doctor'
       |     \-[ALIAS] Node: 's'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 's'

2024-04-15 06:06:48.789 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:06:48.789 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Doctor (s) -> doctor0_
2024-04-15 06:06:48.789 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : s -> doctor0_.id
2024-04-15 06:06:48.789 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:06:48.789 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} doctor0_.id ) ( FromClause{level=1} doctor doctor0_ ) )
2024-04-15 06:06:48.789 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Doctor): [doctor]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Doctor)
    |  | originalText: s
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:06:48.789 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [doctor doctor0_]
2024-04-15 06:06:48.789 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:06:48.789 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (doctor)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'doctor0_.id as id1_1_' {alias=s, className=entity.Doctor, tableAlias=doctor0_}
    |  \-[SQL_TOKEN] SqlFragment: 'doctor0_.date_in as date_in2_1_, doctor0_.name as name3_1_, doctor0_.phone as phone4_1_, doctor0_.room as room5_1_, doctor0_.speciality as speciali6_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[doctor0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'doctor doctor0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=doctor,tableAlias=doctor0_,origin=null,columns={,className=entity.Doctor}}

2024-04-15 06:06:48.789 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.789 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT s from entity.Doctor s
2024-04-15 06:06:48.789 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select doctor0_.id as id1_1_, doctor0_.date_in as date_in2_1_, doctor0_.name as name3_1_, doctor0_.phone as phone4_1_, doctor0_.room as room5_1_, doctor0_.speciality as speciali6_1_ from doctor doctor0_
2024-04-15 06:06:48.789 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.789 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking named query: patient.getAll
2024-04-15 06:06:48.790 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT p from entity.Patient p
2024-04-15 06:06:48.790 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.790 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Patient'
       |     \-[ALIAS] Node: 'p'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'p'

2024-04-15 06:06:48.790 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:06:48.790 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Patient (p) -> patient0_
2024-04-15 06:06:48.790 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : p -> patient0_.card
2024-04-15 06:06:48.790 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:06:48.790 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} patient0_.card ) ( FromClause{level=1} patient patient0_ ) )
2024-04-15 06:06:48.790 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Patient): [patient]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Patient)
    |  | originalText: p
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:06:48.790 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [patient patient0_]
2024-04-15 06:06:48.790 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:06:48.790 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (patient)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'patient0_.card as card1_2_' {alias=p, className=entity.Patient, tableAlias=patient0_}
    |  \-[SQL_TOKEN] SqlFragment: 'patient0_.birthday as birthday2_2_, patient0_.male as male3_2_, patient0_.name as name4_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[patient0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'patient patient0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=patient,tableAlias=patient0_,origin=null,columns={,className=entity.Patient}}

2024-04-15 06:06:48.790 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.791 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT p from entity.Patient p
2024-04-15 06:06:48.791 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select patient0_.card as card1_2_, patient0_.birthday as birthday2_2_, patient0_.male as male3_2_, patient0_.name as name4_2_ from patient patient0_
2024-04-15 06:06:48.791 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.791 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named SQL queries
2024-04-15 06:06:48.791 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-04-15 06:06:48.791 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: 7977945c-6a7f-4523-bd65-f749c107c5ac (<unnamed>)
2024-04-15 06:06:48.791 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2024-04-15 06:06:48.796 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT p FROM entity.Patient p
2024-04-15 06:06:48.796 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.797 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Patient'
       |     \-[ALIAS] Node: 'p'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'p'

2024-04-15 06:06:48.797 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2024-04-15 06:06:48.797 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : entity.Patient (p) -> patient0_
2024-04-15 06:06:48.797 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : p -> patient0_.card
2024-04-15 06:06:48.797 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2024-04-15 06:06:48.797 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} patient0_.card ) ( FromClause{level=1} patient patient0_ ) )
2024-04-15 06:06:48.797 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Patient): [patient]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Patient)
    |  | originalText: p
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2024-04-15 06:06:48.797 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [patient patient0_]
2024-04-15 06:06:48.797 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2024-04-15 06:06:48.797 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (patient)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'patient0_.card as card1_2_' {alias=p, className=entity.Patient, tableAlias=patient0_}
    |  \-[SQL_TOKEN] SqlFragment: 'patient0_.birthday as birthday2_2_, patient0_.male as male3_2_, patient0_.name as name4_2_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[patient0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'patient patient0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=patient,tableAlias=patient0_,origin=null,columns={,className=entity.Patient}}

2024-04-15 06:06:48.797 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.797 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT p FROM entity.Patient p
2024-04-15 06:06:48.797 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select patient0_.card as card1_2_, patient0_.birthday as birthday2_2_, patient0_.male as male3_2_, patient0_.name as name4_2_ from patient patient0_
2024-04-15 06:06:48.797 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
2024-04-15 06:06:48.803 [main] DEBUG org.hibernate.SQL - 
    select
        patient0_.card as card1_2_,
        patient0_.birthday as birthday2_2_,
        patient0_.male as male3_2_,
        patient0_.name as name4_2_ 
    from
        patient patient0_
2024-04-15 06:06:48.805 [main] DEBUG org.hibernate.loader.Loader - Result set row: 0
2024-04-15 06:06:48.807 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[entity.Patient#1]
2024-04-15 06:06:48.811 [main] DEBUG org.hibernate.loader.Loader - Result set row: 1
2024-04-15 06:06:48.811 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[entity.Patient#2]
2024-04-15 06:06:48.811 [main] DEBUG org.hibernate.loader.Loader - Result set row: 2
2024-04-15 06:06:48.811 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[entity.Patient#3]
2024-04-15 06:06:48.811 [main] DEBUG org.hibernate.loader.Loader - Result set row: 3
2024-04-15 06:06:48.811 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[entity.Patient#4]
2024-04-15 06:06:48.812 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [entity.Patient#1]
2024-04-15 06:06:48.813 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `birthday` : value = 1980-05-10
2024-04-15 06:06:48.813 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`birthday`)  - enhanced for lazy-loading? - false
2024-04-15 06:06:48.813 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `male` : value = true
2024-04-15 06:06:48.813 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`male`)  - enhanced for lazy-loading? - false
2024-04-15 06:06:48.813 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Иванов Иван Иванович
2024-04-15 06:06:48.813 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-04-15 06:06:48.814 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [entity.Patient#1]
2024-04-15 06:06:48.814 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [entity.Patient#2]
2024-04-15 06:06:48.814 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `birthday` : value = 1995-12-25
2024-04-15 06:06:48.814 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`birthday`)  - enhanced for lazy-loading? - false
2024-04-15 06:06:48.814 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `male` : value = false
2024-04-15 06:06:48.814 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`male`)  - enhanced for lazy-loading? - false
2024-04-15 06:06:48.814 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Петрова Анна Сергеевна
2024-04-15 06:06:48.814 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-04-15 06:06:48.814 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [entity.Patient#2]
2024-04-15 06:06:48.814 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [entity.Patient#3]
2024-04-15 06:06:48.814 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `birthday` : value = 1976-09-03
2024-04-15 06:06:48.814 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`birthday`)  - enhanced for lazy-loading? - false
2024-04-15 06:06:48.814 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `male` : value = true
2024-04-15 06:06:48.814 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`male`)  - enhanced for lazy-loading? - false
2024-04-15 06:06:48.814 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Сидоров Петр Александрович
2024-04-15 06:06:48.814 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-04-15 06:06:48.814 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [entity.Patient#3]
2024-04-15 06:06:48.814 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [entity.Patient#4]
2024-04-15 06:06:48.814 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `birthday` : value = 1980-04-10
2024-04-15 06:06:48.814 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`birthday`)  - enhanced for lazy-loading? - false
2024-04-15 06:06:48.814 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `male` : value = true
2024-04-15 06:06:48.814 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`male`)  - enhanced for lazy-loading? - false
2024-04-15 06:06:48.814 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Петров Иван Петрович
2024-04-15 06:06:48.814 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
2024-04-15 06:06:48.814 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [entity.Patient#4]
2024-04-15 06:06:48.816 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-04-15 06:06:48.818 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-04-15 06:06:48.818 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
2024-04-15 06:06:48.819 [main] DEBUG org.hibernate.event.internal.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2024-04-15 06:06:48.827 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
2024-04-15 06:06:48.827 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
2024-04-15 06:06:48.828 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
2024-04-15 06:06:48.831 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2024-04-15 06:06:48.831 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-04-15 06:06:48.832 [main] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
2024-04-15 06:06:48.832 [main] DEBUG org.hibernate.internal.util.EntityPrinter - entity.Patient{birthday=1980-05-10, name=Иванов Иван Иванович, card=1, male=true}
2024-04-15 06:06:48.832 [main] DEBUG org.hibernate.internal.util.EntityPrinter - entity.Patient{birthday=1995-12-25, name=Петрова Анна Сергеевна, card=2, male=false}
2024-04-15 06:06:48.832 [main] DEBUG org.hibernate.internal.util.EntityPrinter - entity.Patient{birthday=1976-09-03, name=Сидоров Петр Александрович, card=3, male=true}
2024-04-15 06:06:48.832 [main] DEBUG org.hibernate.internal.util.EntityPrinter - entity.Patient{birthday=1980-04-10, name=Петров Иван Петрович, card=4, male=true}
2024-04-15 06:06:48.833 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-04-15 06:06:48.833 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2024-04-15 06:06:48.834 [main] INFO  repository.PatientRepository - Successful
2024-04-15 06:07:04.060 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: TST]
2024-04-15 06:07:04.115 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.5.Final
2024-04-15 06:07:04.291 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-04-15 06:07:04.407 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
2024-04-15 06:07:04.462 [main] WARN  org.hibernate.orm.connections.pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2024-04-15 06:07:04.464 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: using driver [org.sqlite.JDBC] at URL [jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db]
2024-04-15 06:07:04.464 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001001: Connection properties: {}
2024-04-15 06:07:04.464 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001003: Autocommit mode: false
2024-04-15 06:07:04.466 [main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
2024-04-15 06:07:04.524 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
2024-04-15 06:07:05.047 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 06:07:05.143 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: TST]
2024-04-15 06:07:05.153 [main] WARN  org.hibernate.orm.connections.pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2024-04-15 06:07:05.153 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: using driver [org.sqlite.JDBC] at URL [jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db]
2024-04-15 06:07:05.153 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001001: Connection properties: {}
2024-04-15 06:07:05.153 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001003: Autocommit mode: false
2024-04-15 06:07:05.153 [main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
2024-04-15 06:07:05.154 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
2024-04-15 06:07:05.195 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 06:07:05.202 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: TST]
2024-04-15 06:07:05.211 [main] WARN  org.hibernate.orm.connections.pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2024-04-15 06:07:05.212 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: using driver [org.sqlite.JDBC] at URL [jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db]
2024-04-15 06:07:05.212 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001001: Connection properties: {}
2024-04-15 06:07:05.212 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001003: Autocommit mode: false
2024-04-15 06:07:05.212 [main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
2024-04-15 06:07:05.213 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
2024-04-15 06:07:05.247 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 06:07:05.300 [main] INFO  repository.PatientRepository - Successful
2024-04-15 06:08:24.490 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: TST]
2024-04-15 06:08:24.542 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.5.Final
2024-04-15 06:08:24.701 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-04-15 06:08:24.818 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
2024-04-15 06:08:24.877 [main] WARN  org.hibernate.orm.connections.pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2024-04-15 06:08:24.879 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: using driver [org.sqlite.JDBC] at URL [jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db]
2024-04-15 06:08:24.879 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001001: Connection properties: {}
2024-04-15 06:08:24.879 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001003: Autocommit mode: false
2024-04-15 06:08:24.881 [main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
2024-04-15 06:08:24.935 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
2024-04-15 06:08:25.503 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 06:08:25.615 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: TST]
2024-04-15 06:08:25.628 [main] WARN  org.hibernate.orm.connections.pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2024-04-15 06:08:25.628 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: using driver [org.sqlite.JDBC] at URL [jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db]
2024-04-15 06:08:25.628 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001001: Connection properties: {}
2024-04-15 06:08:25.628 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001003: Autocommit mode: false
2024-04-15 06:08:25.629 [main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
2024-04-15 06:08:25.630 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
2024-04-15 06:08:25.679 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 06:08:25.688 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: TST]
2024-04-15 06:08:25.701 [main] WARN  org.hibernate.orm.connections.pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2024-04-15 06:08:25.701 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: using driver [org.sqlite.JDBC] at URL [jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db]
2024-04-15 06:08:25.702 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001001: Connection properties: {}
2024-04-15 06:08:25.702 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001003: Autocommit mode: false
2024-04-15 06:08:25.702 [main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
2024-04-15 06:08:25.703 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
2024-04-15 06:08:25.745 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 06:08:25.797 [main] INFO  repository.PatientRepository - Successful
2024-04-15 06:08:25.811 [main] INFO  repository.DoctorRepository - org.hibernate.dialect.identity.IdentityColumnSupportImpl does not support identity key generation
2024-04-15 06:09:09.963 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: TST]
2024-04-15 06:09:10.008 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.5.Final
2024-04-15 06:09:10.161 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-04-15 06:09:10.276 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
2024-04-15 06:09:10.330 [main] WARN  org.hibernate.orm.connections.pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2024-04-15 06:09:10.332 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: using driver [org.sqlite.JDBC] at URL [jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db]
2024-04-15 06:09:10.332 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001001: Connection properties: {}
2024-04-15 06:09:10.332 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001003: Autocommit mode: false
2024-04-15 06:09:10.334 [main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
2024-04-15 06:09:10.382 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
2024-04-15 06:09:10.939 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 06:09:11.050 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: TST]
2024-04-15 06:09:11.063 [main] WARN  org.hibernate.orm.connections.pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2024-04-15 06:09:11.064 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: using driver [org.sqlite.JDBC] at URL [jdbc:sqlite:D:/IntellijIdea/Kem Rudolf/Lab2Rizhkov/src/main/hospital.db]
2024-04-15 06:09:11.064 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001001: Connection properties: {}
2024-04-15 06:09:11.064 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001003: Autocommit mode: false
2024-04-15 06:09:11.064 [main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
2024-04-15 06:09:11.065 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
2024-04-15 06:09:11.119 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-04-15 06:09:11.153 [main] INFO  Main - [entity.Patient@9b5f3c7, entity.Patient@49ca94a9, entity.Patient@9ab310b, entity.Patient@5b40de43]
2024-04-15 06:09:11.174 [main] INFO  repository.PatientRepository - Successful
2024-04-15 06:09:11.182 [main] INFO  repository.DoctorRepository - org.hibernate.dialect.identity.IdentityColumnSupportImpl does not support identity key generation
